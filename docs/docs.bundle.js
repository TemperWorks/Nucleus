/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 44);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  scopeId,
  cssModules
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  // inject cssModules
  if (cssModules) {
    var computed = options.computed || (options.computed = {})
    Object.keys(cssModules).forEach(function (key) {
      var module = cssModules[key]
      computed[key] = function () { return module }
    })
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(174)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(115),
  /* template */
  __webpack_require__(303),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(168)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(117),
  /* template */
  __webpack_require__(296),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(190)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(97),
  /* template */
  __webpack_require__(320),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(159)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(83),
  /* template */
  __webpack_require__(286),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_deep_assign__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_deep_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_deep_assign__);


const config = {
    disableRipple: false,

    UiAutocomplete: {
        keys: {
            label: 'label',
            value: 'value',
            image: 'image'
        }
    },

    UiCheckboxGroup: {
        keys: {
            id: 'id',
            name: 'name',
            class: 'class',
            label: 'label',
            value: 'value',
            disabled: 'disabled'
        }
    },

    UiMenu: {
        keys: {
            icon: 'icon',
            type: 'type',
            label: 'label',
            secondaryText: 'secondaryText',
            iconProps: 'iconProps',
            disabled: 'disabled'
        }
    },

    UiRadioGroup: {
        keys: {
            id: 'id',
            class: 'class',
            label: 'label',
            value: 'value',
            checked: 'checked',
            disabled: 'disabled'
        }
    },

    UiSelect: {
        keys: {
            label: 'label',
            value: 'value',
            image: 'image'
        }
    }
};

class NucleusConfig {
    constructor() {
        this.data = __WEBPACK_IMPORTED_MODULE_0_deep_assign___default()(config, window.NucleusConfig ? window.NucleusConfig : {});
    }

    set(config = {}) {
        this.data = __WEBPACK_IMPORTED_MODULE_0_deep_assign___default()(this.data, config);
    }
}
/* harmony export (immutable) */ __webpack_exports__["NucleusConfig"] = NucleusConfig;


/* harmony default export */ __webpack_exports__["default"] = (new NucleusConfig());


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(140)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(108),
  /* template */
  __webpack_require__(266),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(130)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(107),
  /* template */
  __webpack_require__(254),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(178)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(98),
  /* template */
  __webpack_require__(307),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(139)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(102),
  /* template */
  __webpack_require__(265),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/**
 * Adapted from dominus v6.0.1
 * https://github.com/bevacqua/dominus/blob/master/src/classes.js
 */

const trim = /^\s+|\s+$/g;
const whitespace = /\s+/g;

function interpret(input) {
    return typeof input === 'string' ? input.replace(trim, '').split(whitespace) : input;
}

function classes(el) {
    if (isElement(el)) {
        return el.className.replace(trim, '').split(whitespace);
    }

    return [];
}

function set(el, input) {
    if (isElement(el)) {
        el.className = interpret(input).join(' ');
    }
}

function add(el, input) {
    const current = remove(el, input);
    const values = interpret(input);

    current.push.apply(current, values);
    set(el, current);

    return current;
}

function remove(el, input) {
    const current = classes(el);
    const values = interpret(input);

    values.forEach(value => {
        const i = current.indexOf(value);
        if (i !== -1) {
            current.splice(i, 1);
        }
    });

    set(el, current);

    return current;
}

function contains(el, input) {
    const current = classes(el);
    const values = interpret(input);

    return values.every(value => {
        return current.indexOf(value) !== -1;
    });
}

function isElement(o) {
    const elementObjects = typeof HTMLElement === 'object';
    return elementObjects ? o instanceof HTMLElement : isElementObject(o);
}

function isElementObject(o) {
    return o &&
        typeof o === 'object' &&
        typeof o.nodeName === 'string' &&
        o.nodeType === 1;
}

/* harmony default export */ __webpack_exports__["default"] = ({
    add,
    remove,
    contains,
    has: contains,
    set,
    get: classes
});


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["getDayFull"] = getDayFull;
/* harmony export (immutable) */ __webpack_exports__["getDayInitial"] = getDayInitial;
/* harmony export (immutable) */ __webpack_exports__["getDayAbbreviated"] = getDayAbbreviated;
/* harmony export (immutable) */ __webpack_exports__["getMonthFull"] = getMonthFull;
/* harmony export (immutable) */ __webpack_exports__["getMonthAbbreviated"] = getMonthAbbreviated;
/* harmony export (immutable) */ __webpack_exports__["getDayOfMonth"] = getDayOfMonth;
/* harmony export (immutable) */ __webpack_exports__["humanize"] = humanize;
/* harmony export (immutable) */ __webpack_exports__["clone"] = clone;
/* harmony export (immutable) */ __webpack_exports__["moveToDayOfWeek"] = moveToDayOfWeek;
/* harmony export (immutable) */ __webpack_exports__["isSameDay"] = isSameDay;
/* harmony export (immutable) */ __webpack_exports__["isBefore"] = isBefore;
/* harmony export (immutable) */ __webpack_exports__["isAfter"] = isAfter;
const defaultLang = {
    months: {
        full: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December'
        ],

        abbreviated: [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec'
        ]
    },

    days: {
        full: [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday'
        ],

        abbreviated: [
            'Sun',
            'Mon',
            'Tue',
            'Wed',
            'Thu',
            'Fri',
            'Sat'
        ],

        initials: [
            'S',
            'M',
            'T',
            'W',
            'T',
            'F',
            'S'
        ]
    }
};
/* harmony export (immutable) */ __webpack_exports__["defaultLang"] = defaultLang;


function pad(value, length) {
    while (value.length < length) {
        value = '0' + value;
    }

    return value;
}

function getDayFull(date, lang = defaultLang) {
    return lang.days.full[date.getDay()];
}

function getDayInitial(date, lang = defaultLang) {
    return lang.days.initials[date.getDay()];
}

function getDayAbbreviated(date, lang = defaultLang) {
    return lang.days.abbreviated[date.getDay()];
}

function getMonthFull(date, lang = defaultLang) {
    return lang.months.full[date.getMonth()];
}

function getMonthAbbreviated(date, lang = defaultLang) {
    return lang.months.abbreviated[date.getMonth()];
}

function getDayOfMonth(date, options = { pad: true }) {
    const day = date.getDate().toString();
    return options.pad ? pad(day) : day;
}

function humanize(date, lang = defaultLang) {
    const days = lang.days.abbreviated;
    const months = lang.months.full;

    return days[date.getDay()] + ', ' + months[date.getMonth()] + ' ' + date.getDate() + ', ' +
        date.getFullYear();
}

function clone(date) {
    return new Date(date.getTime());
}

function moveToDayOfWeek(date, dayOfWeek) {
    while (date.getDay() !== dayOfWeek) {
        date.setDate(date.getDate() - 1);
    }

    return date;
}

function isSameDay(date1, date2) {
    return date1.getFullYear() === date2.getFullYear() &&
        date1.getMonth() === date2.getMonth() &&
        date1.getDate() === date2.getDate();
}

function isBefore(date1, date2) {
    return date1.getTime() < date2.getTime();
}

function isAfter(date1, date2) {
    return date1.getTime() > date2.getTime();
}

/* harmony default export */ __webpack_exports__["default"] = ({
    defaultLang,
    getDayFull,
    getDayInitial,
    getDayAbbreviated,
    getMonthFull,
    getMonthAbbreviated,
    getDayOfMonth,
    humanize,
    clone,
    moveToDayOfWeek,
    isSameDay,
    isBefore,
    isAfter
});


/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["isObject"] = isObject;
/* harmony export (immutable) */ __webpack_exports__["looseEqual"] = looseEqual;
/* harmony export (immutable) */ __webpack_exports__["looseIndexOf"] = looseIndexOf;
/* harmony export (immutable) */ __webpack_exports__["startsWith"] = startsWith;
/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject(obj) {
    return obj !== null && typeof obj === 'object';
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual(a, b) {
    // eslint-disable-next-line eqeqeq
    return a == b || (
        isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false
    );
}

/**
 * Check if a val exists in arr using looseEqual comparison
 */
function looseIndexOf(arr, val) {
    for (let i = 0; i < arr.length; i++) {
        if (looseEqual(arr[i], val)) {
            return i;
        }
    }

    return -1;
}

/**
 * Check if the given string starts with the query, beginning
 * at the given position
 */
function startsWith(string, query, position = 0) {
    return string.substr(position, query.length) === query;
}


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(187)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(99),
  /* template */
  __webpack_require__(317),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(156)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(104),
  /* template */
  __webpack_require__(283),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(136)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(114),
  /* template */
  __webpack_require__(261),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(162)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(101),
  /* template */
  __webpack_require__(289),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(157)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(120),
  /* template */
  __webpack_require__(284),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 18 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_debounce__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_debounce__);


/* harmony default export */ __webpack_exports__["default"] = ({
    data() {
        return {
            windowResizeListener: null
        };
    },

    mounted() {
        this.windowResizeListener = __WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default()(() => {
            this.$emit('window-resize');
        }, 200);

        window.addEventListener('resize', this.windowResizeListener);
    },

    beforeDestroy() {
        window.removeEventListener('resize', this.windowResizeListener);
    }
});


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pages_UiAlert_vue__ = __webpack_require__(194);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pages_UiAlert_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__pages_UiAlert_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pages_UiAutocomplete_vue__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pages_UiAutocomplete_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__pages_UiAutocomplete_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_UiButton_vue__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pages_UiButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__pages_UiButton_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_UiCard_vue__ = __webpack_require__(197);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_UiCard_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__pages_UiCard_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_UiCheckbox_vue__ = __webpack_require__(198);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_UiCheckbox_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__pages_UiCheckbox_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_UiCheckboxGroup_vue__ = __webpack_require__(199);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_UiCheckboxGroup_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__pages_UiCheckboxGroup_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_UiCollapsible_vue__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_UiCollapsible_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__pages_UiCollapsible_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_UiConfirm_vue__ = __webpack_require__(201);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_UiConfirm_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__pages_UiConfirm_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pages_UiDatepicker_vue__ = __webpack_require__(202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pages_UiDatepicker_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__pages_UiDatepicker_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pages_UiFab_vue__ = __webpack_require__(203);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pages_UiFab_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9__pages_UiFab_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_UiFileupload_vue__ = __webpack_require__(204);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_UiFileupload_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__pages_UiFileupload_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_UiIcon_vue__ = __webpack_require__(205);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_UiIcon_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11__pages_UiIcon_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_UiIconButton_vue__ = __webpack_require__(206);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_UiIconButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12__pages_UiIconButton_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_UiMenu_vue__ = __webpack_require__(207);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_UiMenu_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13__pages_UiMenu_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_UiModal_vue__ = __webpack_require__(208);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_UiModal_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14__pages_UiModal_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__pages_UiPopover_vue__ = __webpack_require__(209);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__pages_UiPopover_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15__pages_UiPopover_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pages_UiPreloader_vue__ = __webpack_require__(210);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pages_UiPreloader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16__pages_UiPreloader_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_UiProgressCircular_vue__ = __webpack_require__(211);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_UiProgressCircular_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17__pages_UiProgressCircular_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__pages_UiProgressLinear_vue__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__pages_UiProgressLinear_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18__pages_UiProgressLinear_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__pages_UiRadio_vue__ = __webpack_require__(213);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__pages_UiRadio_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19__pages_UiRadio_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__pages_UiRadioGroup_vue__ = __webpack_require__(214);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__pages_UiRadioGroup_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20__pages_UiRadioGroup_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_UiRippleInk_vue__ = __webpack_require__(215);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_UiRippleInk_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21__pages_UiRippleInk_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_UiSelect_vue__ = __webpack_require__(216);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_UiSelect_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22__pages_UiSelect_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__pages_UiSlider_vue__ = __webpack_require__(217);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__pages_UiSlider_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_23__pages_UiSlider_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_UiSnackbar_vue__ = __webpack_require__(218);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_UiSnackbar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_24__pages_UiSnackbar_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_UiSwitch_vue__ = __webpack_require__(219);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_UiSwitch_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_25__pages_UiSwitch_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__pages_UiTabs_vue__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__pages_UiTabs_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_26__pages_UiTabs_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__pages_UiTextbox_vue__ = __webpack_require__(221);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__pages_UiTextbox_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_27__pages_UiTextbox_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__pages_UiToolbar_vue__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__pages_UiToolbar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_28__pages_UiToolbar_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pages_UiTooltip_vue__ = __webpack_require__(223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pages_UiTooltip_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_29__pages_UiTooltip_vue__);

































const menu = [
    {
        title: 'Layout',
        menu: [
            {
                path: '/ui-card',
                component: __WEBPACK_IMPORTED_MODULE_3__pages_UiCard_vue___default.a,
                title: 'UiCard',
                sourceUrl: 'src/UiCard.vue'
            },
            {
                path: '/ui-menu',
                component: __WEBPACK_IMPORTED_MODULE_13__pages_UiMenu_vue___default.a,
                title: 'UiMenu',
                sourceUrl: 'src/UiMenu.vue'
            },
            {
                path: '/ui-modal',
                component: __WEBPACK_IMPORTED_MODULE_14__pages_UiModal_vue___default.a,
                title: 'UiModal',
                sourceUrl: 'src/UiModal.vue'
            },
            {
                path: '/ui-tabs',
                component: __WEBPACK_IMPORTED_MODULE_26__pages_UiTabs_vue___default.a,
                title: 'UiTabs',
                sourceUrl: 'src/UiTabs.vue'
            },
            {
                path: '/ui-toolbar',
                component: __WEBPACK_IMPORTED_MODULE_28__pages_UiToolbar_vue___default.a,
                title: 'UiToolbar',
                sourceUrl: 'src/UiToolbar.vue'
            },
            {
                path: '/ui-collapsible',
                component: __WEBPACK_IMPORTED_MODULE_6__pages_UiCollapsible_vue___default.a,
                title: 'UiCollapsible',
                sourceUrl: 'src/UiCollapsible.vue'
            }
        ]
    },
    {
        title: 'User Input',
        menu: [
            {
                path: '/ui-autocomplete',
                component: __WEBPACK_IMPORTED_MODULE_1__pages_UiAutocomplete_vue___default.a,
                title: 'UiAutocomplete',
                sourceUrl: 'src/UiAutocomplete.vue'
            },
            {
                path: '/ui-button',
                component: __WEBPACK_IMPORTED_MODULE_2__pages_UiButton_vue___default.a,
                title: 'UiButton',
                sourceUrl: 'src/UiButton.vue'
            },
            {
                path: '/ui-checkbox',
                component: __WEBPACK_IMPORTED_MODULE_4__pages_UiCheckbox_vue___default.a,
                title: 'UiCheckbox',
                sourceUrl: 'src/UiCheckbox.vue'
            },
            {
                path: '/ui-checkbox-group',
                component: __WEBPACK_IMPORTED_MODULE_5__pages_UiCheckboxGroup_vue___default.a,
                title: 'UiCheckboxGroup',
                sourceUrl: 'src/UiCheckboxGroup.vue'
            },
            {
                path: '/ui-confirm',
                component: __WEBPACK_IMPORTED_MODULE_7__pages_UiConfirm_vue___default.a,
                title: 'UiConfirm',
                sourceUrl: 'src/UiConfirm.vue'
            },
            {
                path: '/ui-datepicker',
                component: __WEBPACK_IMPORTED_MODULE_8__pages_UiDatepicker_vue___default.a,
                title: 'UiDatepicker',
                sourceUrl: 'src/UiDatepicker.vue'
            },
            {
                path: '/ui-fab',
                component: __WEBPACK_IMPORTED_MODULE_9__pages_UiFab_vue___default.a,
                title: 'UiFab',
                sourceUrl: 'src/UiFab.vue'
            },
            {
                path: '/ui-fileupload',
                component: __WEBPACK_IMPORTED_MODULE_10__pages_UiFileupload_vue___default.a,
                title: 'UiFileupload',
                sourceUrl: 'src/UiFileupload.vue'
            },
            {
                path: '/ui-ripple-ink',
                component: __WEBPACK_IMPORTED_MODULE_21__pages_UiRippleInk_vue___default.a,
                title: 'UiRippleInk',
                sourceUrl: 'src/UiRippleInk.vue'
            },
            {
                path: '/ui-select',
                component: __WEBPACK_IMPORTED_MODULE_22__pages_UiSelect_vue___default.a,
                title: 'UiSelect',
                sourceUrl: 'src/UiSelect.vue'
            },
            {
                path: '/ui-slider',
                component: __WEBPACK_IMPORTED_MODULE_23__pages_UiSlider_vue___default.a,
                title: 'UiSlider',
                sourceUrl: 'src/UiSlider.vue'
            },
            {
                path: '/ui-icon-button',
                component: __WEBPACK_IMPORTED_MODULE_12__pages_UiIconButton_vue___default.a,
                title: 'UiIconButton',
                sourceUrl: 'src/UiIconButton.vue'
            },
            {
                path: '/ui-radio',
                component: __WEBPACK_IMPORTED_MODULE_19__pages_UiRadio_vue___default.a,
                title: 'UiRadio',
                sourceUrl: 'src/UiRadio.vue'
            },
            {
                path: '/ui-radio-group',
                component: __WEBPACK_IMPORTED_MODULE_20__pages_UiRadioGroup_vue___default.a,
                title: 'UiRadioGroup',
                sourceUrl: 'src/UiRadioGroup.vue'
            },
            {
                path: '/ui-switch',
                component: __WEBPACK_IMPORTED_MODULE_25__pages_UiSwitch_vue___default.a,
                title: 'UiSwitch',
                sourceUrl: 'src/UiSwitch.vue'
            },
            {
                path: '/ui-textbox',
                component: __WEBPACK_IMPORTED_MODULE_27__pages_UiTextbox_vue___default.a,
                title: 'UiTextbox',
                sourceUrl: 'src/UiTextbox.vue'
            }
        ]
    },
    {
        title: 'Visual feedback',
        menu: [
            {
                path: '/ui-alert',
                component: __WEBPACK_IMPORTED_MODULE_0__pages_UiAlert_vue___default.a,
                title: 'UiAlert',
                sourceUrl: 'src/UiAlert.vue'
            },
            {
                path: '/ui-popover',
                component: __WEBPACK_IMPORTED_MODULE_15__pages_UiPopover_vue___default.a,
                title: 'UiPopover',
                sourceUrl: 'src/UiPopover.vue'
            },
            {
                path: '/ui-preloader',
                component: __WEBPACK_IMPORTED_MODULE_16__pages_UiPreloader_vue___default.a,
                title: 'UiPreloader',
                sourceUrl: 'src/UiPreloader.vue'
            },
            {
                path: '/ui-progress-circular',
                component: __WEBPACK_IMPORTED_MODULE_17__pages_UiProgressCircular_vue___default.a,
                title: 'UiProgressCircular',
                sourceUrl: 'src/UiProgressCircular.vue'
            },
            {
                path: '/ui-progress-linear',
                component: __WEBPACK_IMPORTED_MODULE_18__pages_UiProgressLinear_vue___default.a,
                title: 'UiProgressLinear',
                sourceUrl: 'src/UiProgressLinear.vue'
            },
            {
                path: '/ui-snackbar',
                component: __WEBPACK_IMPORTED_MODULE_24__pages_UiSnackbar_vue___default.a,
                title: 'UiSnackbar',
                sourceUrl: 'src/UiSnackbarContainer.vue'
            },
            {
                path: '/ui-tooltip',
                component: __WEBPACK_IMPORTED_MODULE_29__pages_UiTooltip_vue___default.a,
                title: 'UiTooltip',
                sourceUrl: 'src/UiTooltip.vue'
            }
        ]
    },
    {
        title: 'Miscellaneous',
        menu: [
            {
                path: '/ui-icon',
                component: __WEBPACK_IMPORTED_MODULE_11__pages_UiIcon_vue___default.a,
                title: 'UiIcon',
                sourceUrl: 'src/UiIcon.vue'
            }
        ]
    }
]

// Generate a Vue Router compatible routes map from the menu
const routes = menu.reduce((paths, section) => {
    const sectionPaths = section.menu.map(menuItem => {
        return {
            path: menuItem.path,
            component: menuItem.component,
            meta: {
                section: section.title,
                title: menuItem.title,
                sourceUrl: menuItem.sourceUrl
            }
        }
    })

    return paths.concat(sectionPaths)
}, [])

// Add the default route at the beginning of the routes array
routes.unshift({
    path: '/',
    redirect: '/ui-alert'
})

// Add the catch all route to redirect 404s
routes.push({
    path: '*',
    redirect: '/ui-alert'
})

/* harmony default export */ __webpack_exports__["default"] = ({
    menu,
    routes
});


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.4.2
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */


/*  */

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

var _toString = Object.prototype.toString;

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(val);
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,is');

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /([^-])([A-Z])/g;
var hyphenate = cached(function (str) {
  return str
    .replace(hyphenateRE, '$1-$2')
    .replace(hyphenateRE, '$1-$2')
    .toLowerCase()
});

/**
 * Simple bind, faster than native
 */
function bind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }
  // record original fn length
  boundFn._length = fn.length;
  return boundFn
}

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "production" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "production" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

var emptyObject = Object.freeze({});

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

var warn = noop;
var tip = noop;
var formatComponentName = (null); // work around flow check

if (false) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var name = typeof vm === 'string'
      ? vm
      : typeof vm === 'function' && vm.options
        ? vm.options.name
        : vm._isVue
          ? vm.$options.name || vm.$options._componentTag
          : vm.name;

    var file = vm._isVue && vm.$options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  var generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

function handleError (err, vm, info) {
  if (config.errorHandler) {
    config.errorHandler.call(null, err, vm, info);
  } else {
    if (false) {
      warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    }
    /* istanbul ignore else */
    if (inBrowser && typeof console !== 'undefined') {
      console.error(err);
    } else {
      throw err
    }
  }
}

/*  */
/* globals MutationObserver */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0;
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefix has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

/**
 * Defer a task to execute it asynchronously.
 */
var nextTick = (function () {
  var callbacks = [];
  var pending = false;
  var timerFunc;

  function nextTickHandler () {
    pending = false;
    var copies = callbacks.slice(0);
    callbacks.length = 0;
    for (var i = 0; i < copies.length; i++) {
      copies[i]();
    }
  }

  // the nextTick behavior leverages the microtask queue, which can be accessed
  // via either native Promise.then or MutationObserver.
  // MutationObserver has wider support, however it is seriously bugged in
  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
  // completely stops working after triggering a few times... so, if native
  // Promise is available, we will use it:
  /* istanbul ignore if */
  if (typeof Promise !== 'undefined' && isNative(Promise)) {
    var p = Promise.resolve();
    var logError = function (err) { console.error(err); };
    timerFunc = function () {
      p.then(nextTickHandler).catch(logError);
      // in problematic UIWebViews, Promise.then doesn't completely break, but
      // it can get stuck in a weird state where callbacks are pushed into the
      // microtask queue but the queue isn't being flushed, until the browser
      // needs to do some other work, e.g. handle a timer. Therefore we can
      // "force" the microtask queue to be flushed by adding an empty timer.
      if (isIOS) { setTimeout(noop); }
    };
  } else if (typeof MutationObserver !== 'undefined' && (
    isNative(MutationObserver) ||
    // PhantomJS and iOS 7.x
    MutationObserver.toString() === '[object MutationObserverConstructor]'
  )) {
    // use MutationObserver where native Promise is not available,
    // e.g. PhantomJS IE11, iOS7, Android 4.4
    var counter = 1;
    var observer = new MutationObserver(nextTickHandler);
    var textNode = document.createTextNode(String(counter));
    observer.observe(textNode, {
      characterData: true
    });
    timerFunc = function () {
      counter = (counter + 1) % 2;
      textNode.data = String(counter);
    };
  } else {
    // fallback to setTimeout
    /* istanbul ignore next */
    timerFunc = function () {
      setTimeout(nextTickHandler, 0);
    };
  }

  return function queueNextTick (cb, ctx) {
    var _resolve;
    callbacks.push(function () {
      if (cb) {
        try {
          cb.call(ctx);
        } catch (e) {
          handleError(e, ctx, 'nextTick');
        }
      } else if (_resolve) {
        _resolve(ctx);
      }
    });
    if (!pending) {
      pending = true;
      timerFunc();
    }
    if (!cb && typeof Promise !== 'undefined') {
      return new Promise(function (resolve, reject) {
        _resolve = resolve;
      })
    }
  }
})();

var _Set;
/* istanbul ignore if */
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */


var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);[
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
]
.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * By default, when a reactive property is set, the new value is
 * also converted to become reactive. However when passing down props,
 * we don't want to force conversion because the value may be a nested value
 * under a frozen data structure. Converting it would defeat the optimization.
 */
var observerState = {
  shouldConvert: true
};

/**
 * Observer class that are attached to each observed
 * object. Once attached, the observer converts target
 * object's property keys into getter/setters that
 * collect dependencies and dispatches updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i], obj[keys[i]]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src, keys) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value)) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    observerState.shouldConvert &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
        }
        if (Array.isArray(value)) {
          dependArray(value);
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if (false) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (hasOwn(target, key)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (false) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this) : parentVal
      )
    }
  } else if (parentVal || childVal) {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm)
        : undefined;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "production" !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn.call(this, parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (parentVal, childVal) {
  var res = Object.create(parentVal || null);
  return childVal
    ? extend(res, childVal)
    : res
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (parentVal, childVal) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key in childVal) {
    var parent = ret[key];
    var child = childVal[key];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (parentVal, childVal) {
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    var lower = key.toLowerCase();
    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
      warn(
        'Do not use built-in or reserved HTML elements as component ' +
        'id: ' + key
      );
    }
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (false) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options) {
  var inject = options.inject;
  if (Array.isArray(inject)) {
    var normalized = options.inject = {};
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = inject[i];
    }
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (false) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child);
  normalizeInject(child);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (false) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // handle boolean props
  if (isType(Boolean, prop.type)) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
      value = true;
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldConvert = observerState.shouldConvert;
    observerState.shouldConvert = true;
    observe(value);
    observerState.shouldConvert = prevShouldConvert;
  }
  if (false) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (false) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      'Invalid prop: type check failed for prop "' + name + '".' +
      ' Expected ' + expectedTypes.map(capitalize).join(', ') +
      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    valid = typeof value === expectedType.toLowerCase();
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isType (type, fn) {
  if (!Array.isArray(fn)) {
    return getType(fn) === getType(type)
  }
  for (var i = 0, len = fn.length; i < len; i++) {
    if (getType(fn[i]) === getType(type)) {
      return true
    }
  }
  /* istanbul ignore next */
  return false
}

/*  */

var mark;
var measure;

if (false) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (false) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      "referenced during render. Make sure to declare reactive data " +
      "properties in the data option.",
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' &&
    Proxy.toString().match(/native code/);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.functionalContext = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: {} };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.isCloned = true;
  return cloned
}

function cloneVNodes (vnodes) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i]);
  }
  return res
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        cloned[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, cur, old, event;
  for (name in on) {
    cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
      "production" !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (false) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    last = res[res.length - 1];
    //  nested
    if (Array.isArray(c)) {
      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i)));
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        (last).text += String(c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[res.length - 1] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  if (comp.__esModule && comp.default) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      "production" !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject(
                 false
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && isDef(c.componentOptions)) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once$$1) {
  if (once$$1) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        this$1.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (arguments.length === 1) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (false) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        try {
          cbs[i].apply(vm, args);
        } catch (e) {
          handleError(e, vm, ("event handler for \"" + event + "\""));
        }
      }
    }
    return vm
  };
}

/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  var defaultSlot = [];
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.functionalContext === context) &&
      child.data && child.data.slot != null
    ) {
      var name = child.data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children);
      } else {
        slot.push(child);
      }
    } else {
      defaultSlot.push(child);
    }
  }
  // ignore whitespace
  if (!defaultSlot.every(isWhitespace)) {
    slots.default = defaultSlot;
  }
  return slots
}

function isWhitespace (node) {
  return node.isComment || node.text === ' '
}

function resolveScopedSlots (
  fns, // see flow/vnode
  res
) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
      // no need for the ref nodes after initial patch
      // this prevents keeping a detached DOM tree in memory (#5851)
      vm.$options._parentElm = vm.$options._refElm = null;
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (false) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (false) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure((name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure((name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  vm._watcher = new Watcher(vm, updateComponent, noop);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (false) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listensers hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data && parentVnode.data.attrs;
  vm.$listeners = listeners;

  // update props
  if (propsData && vm.$options.props) {
    observerState.shouldConvert = false;
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      props[key] = validateProp(key, vm.$options.props, propsData, vm);
    }
    observerState.shouldConvert = true;
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  if (listeners) {
    var oldListeners = vm.$options._parentListeners;
    vm.$options._parentListeners = listeners;
    updateComponentListeners(vm, listeners, oldListeners);
  }
  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (false) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (false) {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (false) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options
) {
  this.vm = vm;
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  false
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      "production" !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
var seenObjects = new _Set();
function traverse (val) {
  seenObjects.clear();
  _traverse(val, seenObjects);
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function checkOptionType (vm, name) {
  var option = vm.$options[name];
  if (!isPlainObject(option)) {
    warn(
      ("component option \"" + name + "\" should be an object."),
      vm
    );
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  observerState.shouldConvert = isRoot;
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (false) {
      if (isReservedAttribute(key) || config.isReservedAttr(key)) {
        warn(
          ("\"" + key + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (vm.$parent && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  observerState.shouldConvert = true;
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "production" !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (false) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
      "production" !== 'production' && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  try {
    return data.call(vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  "production" !== 'production' && checkOptionType(vm, 'computed');
  var watchers = vm._computedWatchers = Object.create(null);

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (false) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }
    // create internal watcher for the computed property.
    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (false) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (target, key, userDef) {
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = createComputedGetter(key);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  if (false) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  "production" !== 'production' && checkOptionType(vm, 'methods');
  var props = vm.$options.props;
  for (var key in methods) {
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
    if (false) {
      if (methods[key] == null) {
        warn(
          "method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
    }
  }
}

function initWatch (vm, watch) {
  "production" !== 'production' && checkOptionType(vm, 'watch');
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  keyOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(keyOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (false) {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    observerState.shouldConvert = false;
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (false) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    observerState.shouldConvert = true;
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
        ? Reflect.ownKeys(inject)
        : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = inject[key];
      var source = vm;
      while (source) {
        if (source._provided && provideKey in source._provided) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (false) {
        warn(("Injection \"" + key + "\" not found"), vm);
      }
    }
    return result
  }
}

/*  */

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  context,
  children
) {
  var props = {};
  var propOptions = Ctor.options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || {});
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var _context = Object.create(context);
  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };
  var vnode = Ctor.options.render.call(null, h, {
    data: data,
    props: props,
    children: children,
    parent: context,
    listeners: data.on || {},
    injections: resolveInject(Ctor.options.inject, context),
    slots: function () { return resolveSlots(children, context); }
  });
  if (vnode instanceof VNode) {
    vnode.functionalContext = context;
    vnode.functionalOptions = Ctor.options;
    if (data.slot) {
      (vnode.data || (vnode.data = {})).slot = data.slot;
    }
  }
  return vnode
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

// hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    } else if (vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (false) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // merge component management hooks onto the placeholder node
  mergeHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var vnodeComponentOptions = vnode.componentOptions;
  var options = {
    _isComponent: true,
    parent: parent,
    propsData: vnodeComponentOptions.propsData,
    _componentTag: vnodeComponentOptions.tag,
    _parentVnode: vnode,
    _parentListeners: vnodeComponentOptions.listeners,
    _renderChildren: vnodeComponentOptions.children,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnodeComponentOptions.Ctor(options)
}

function mergeHooks (data) {
  if (!data.hook) {
    data.hook = {};
  }
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var fromParent = data.hook[key];
    var ours = componentVNodeHooks[key];
    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
  }
}

function mergeHook$1 (one, two) {
  return function (a, b, c, d) {
    one(a, b, c, d);
    two(a, b, c, d);
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    "production" !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if (false
  ) {
    warn(
      'Avoid using non-primitive value as key, ' +
      'use string/number value instead.',
      context
    );
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (isDef(vnode)) {
    if (ns) { applyNS(vnode, ns); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    return
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && isUndef(child.ns)) {
        applyNS(child, ns);
      }
    }
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    (ret)._isVList = true;
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      props = extend(extend({}, bindObject), props);
    }
    return scopedSlotFn(props) || fallback
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes && "production" !== 'production') {
      slotNodes._rendered && warn(
        "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
        "- this will likely cause render errors.",
        this
      );
      slotNodes._rendered = true;
    }
    return slotNodes || fallback
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

/**
 * Runtime helper for checking keyCodes from config.
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInAlias
) {
  var keyCodes = config.keyCodes[key] || builtInAlias;
  if (Array.isArray(keyCodes)) {
    return keyCodes.indexOf(eventKeyCode) === -1
  } else {
    return keyCodes !== eventKeyCode
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
      "production" !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var tree = this._staticTrees[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree by doing a shallow clone.
  if (tree && !isInFor) {
    return Array.isArray(tree)
      ? cloneVNodes(tree)
      : cloneVNode(tree)
  }
  // otherwise, render a fresh tree.
  tree = this._staticTrees[index] =
    this.$options.staticRenderFns[index].call(this._renderProxy);
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "production" !== 'production' && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(ours, existing) : ours;
      }
    }
  }
  return data
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null;
  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;
  /* istanbul ignore else */
  if (false) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);
    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);
  }
}

function renderMixin (Vue) {
  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var staticRenderFns = ref.staticRenderFns;
    var _parentVnode = ref._parentVnode;

    if (vm._isMounted) {
      // clone slot nodes on re-renders
      for (var key in vm.$slots) {
        vm.$slots[key] = cloneVNodes(vm.$slots[key]);
      }
    }

    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;

    if (staticRenderFns && !vm._staticTrees) {
      vm._staticTrees = [];
    }
    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render function");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (false) {
        vnode = vm.$options.renderError
          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)
          : vm._vnode;
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (false) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };

  // internal render helpers.
  // these are exposed on the instance prototype to reduce generated render
  // code size.
  Vue.prototype._o = markOnce;
  Vue.prototype._n = toNumber;
  Vue.prototype._s = toString;
  Vue.prototype._l = renderList;
  Vue.prototype._t = renderSlot;
  Vue.prototype._q = looseEqual;
  Vue.prototype._i = looseIndexOf;
  Vue.prototype._m = renderStatic;
  Vue.prototype._f = resolveFilter;
  Vue.prototype._k = checkKeyCodes;
  Vue.prototype._b = bindObjectProps;
  Vue.prototype._v = createTextVNode;
  Vue.prototype._e = createEmptyVNode;
  Vue.prototype._u = resolveScopedSlots;
  Vue.prototype._g = bindObjectListeners;
}

/*  */

var uid$1 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$1++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (false) {
      startTag = "vue-perf-init:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (false) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (false) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(((vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  opts.parent = options.parent;
  opts.propsData = options.propsData;
  opts._parentVnode = options._parentVnode;
  opts._parentListeners = options._parentListeners;
  opts._renderChildren = options._renderChildren;
  opts._componentTag = options._componentTag;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;
  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue$3 (options) {
  if (false
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue$3);
stateMixin(Vue$3);
eventsMixin(Vue$3);
lifecycleMixin(Vue$3);
renderMixin(Vue$3);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (false) {
      if (!/^[a-zA-Z][\w-]*$/.test(name)) {
        warn(
          'Invalid component name: "' + name + '". Component names ' +
          'can only contain alphanumeric characters and the hyphen, ' +
          'and must start with a letter.'
        );
      }
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (false) {
          if (type === 'component' && config.isReservedTag(id)) {
            warn(
              'Do not use built-in or reserved HTML elements as component ' +
              'id: ' + id
            );
          }
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

var patternTypes = [String, RegExp, Array];

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (cache, current, filter) {
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        if (cachedNode !== current) {
          pruneCacheEntry(cachedNode);
        }
        cache[key] = null;
      }
    }
  }
}

function pruneCacheEntry (vnode) {
  if (vnode) {
    vnode.componentInstance.$destroy();
  }
}

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes
  },

  created: function created () {
    this.cache = Object.create(null);
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache[key]);
    }
  },

  watch: {
    include: function include (val) {
      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });
    },
    exclude: function exclude (val) {
      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });
    }
  },

  render: function render () {
    var vnode = getFirstComponentChild(this.$slots.default);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      if (name && (
        (this.include && !matches(this.include, name)) ||
        (this.exclude && matches(this.exclude, name))
      )) {
        return vnode
      }
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (this.cache[key]) {
        vnode.componentInstance = this.cache[key].componentInstance;
      } else {
        this.cache[key] = vnode;
      }
      vnode.data.keepAlive = true;
    }
    return vnode
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (false) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue$3);

Object.defineProperty(Vue$3.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue$3.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

Vue$3.version = '2.4.2';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "production" !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setAttribute (node, key, val) {
  node.setAttribute(key, val);
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setAttribute: setAttribute
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!key) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *

/*
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

// Some browsers do not support dynamically changing type for <input>
// so they need to be treated as different nodes
function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  var inPre = 0;
  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {
    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (false) {
        if (data && data.pre) {
          inPre++;
        }
        if (
          !inPre &&
          !vnode.ns &&
          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&
          config.isUnknownElement(tag)
        ) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }
      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (false) {
        inPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (ref$$1.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    var ancestor = vnode;
    while (ancestor) {
      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
        nodeOps.setAttribute(vnode.elm, i, '');
      }
      ancestor = ancestor.parent;
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setAttribute(vnode.elm, i, '');
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, elmToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
          newStartVnode = newCh[++newStartIdx];
        } else {
          elmToMove = oldCh[idxInOld];
          /* istanbul ignore if */
          if (false) {
            warn(
              'It seems there are duplicate keys that is causing an update error. ' +
              'Make sure each v-for item has a unique key.'
            );
          }
          if (sameVnode(elmToMove, newStartVnode)) {
            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
            newStartVnode = newCh[++newStartIdx];
          }
        }
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var bailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue) {
    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.elm = elm;
      vnode.isAsyncPlaceholder = true;
      return true
    }
    if (false) {
      if (!assertNodeMatch(elm, vnode)) {
        return false
      }
    }
    vnode.elm = elm;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          var childrenMatch = true;
          var childNode = elm.firstChild;
          for (var i$1 = 0; i$1 < children.length; i$1++) {
            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {
              childrenMatch = false;
              break
            }
            childNode = childNode.nextSibling;
          }
          // if childNode is not null, it means the actual childNodes list is
          // longer than the virtual children list.
          if (!childrenMatch || childNode) {
            if (false
            ) {
              bailed = true;
              console.warn('Parent: ', elm);
              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
            }
            return false
          }
        }
      }
      if (isDef(data)) {
        for (var key in data) {
          if (!isRenderedModule(key)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode) {
    if (isDef(vnode.tag)) {
      return (
        vnode.tag.indexOf('vue-component') === 0 ||
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (false) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }
        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        if (isDef(vnode.parent)) {
          // component root element replaced.
          // update parent placeholder node element, recursively
          var ancestor = vnode.parent;
          while (ancestor) {
            ancestor.elm = vnode.elm;
            ancestor = ancestor.parent;
          }
          if (isPatchable(vnode)) {
            for (var i = 0; i < cbs.create.length; ++i) {
              cbs.create[i](emptyNode, vnode.parent);
            }
          }
        }

        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  /* istanbul ignore if */
  if (isIE9 && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, key);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, value);
    }
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + "," + args)
  }
}

/*  */

function baseWarn (msg) {
  console.error(("[Vue compiler]: " + msg));
}

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value) {
  (el.props || (el.props = [])).push({ name: name, value: value });
}

function addAttr (el, name, value) {
  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  modifiers
) {
  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn
) {
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
    false
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.'
    );
  }
  // check capture modifier
  if (modifiers && modifiers.capture) {
    delete modifiers.capture;
    name = '!' + name; // mark the event as captured
  }
  if (modifiers && modifiers.once) {
    delete modifiers.once;
    name = '~' + name; // mark the event as once
  }
  /* istanbul ignore if */
  if (modifiers && modifiers.passive) {
    delete modifiers.passive;
    name = '&' + name; // mark the event as passive
  }
  var events;
  if (modifiers && modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }
  var newHandler = { value: value, modifiers: modifiers };
  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

function getAndRemoveAttr (el, name) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  return val
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
        "? " + baseValueExpression + ".trim()" +
        ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: ("\"" + value + "\""),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var modelRs = parseModel(value);
  if (modelRs.idx === null) {
    return (value + "=" + assignment)
  } else {
    return ("$set(" + (modelRs.exp) + ", " + (modelRs.idx) + ", " + assignment + ")")
  }
}

/**
 * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
 *
 * for loop possible cases:
 *
 * - test
 * - test[idx]
 * - test[test1[idx]]
 * - test["a"][idx]
 * - xxx.test[a[a].test1[idx]]
 * - test.xxx.a["asa"][test1[idx]]
 *
 */

var len;
var str;
var chr;
var index$1;
var expressionPos;
var expressionEndPos;

function parseModel (val) {
  str = val;
  len = str.length;
  index$1 = expressionPos = expressionEndPos = 0;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    return {
      exp: val,
      idx: null
    }
  }

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.substring(0, expressionPos),
    idx: val.substring(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (false) {
    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (tag === 'input' && dynamicType) {
      warn$1(
        "<input :type=\"" + dynamicType + "\" v-model=\"" + value + "\">:\n" +
        "v-model does not support dynamic input types. Use v-if branches instead."
      );
    }
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead."
      );
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (false) {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.'
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
      "?_i(" + value + "," + valueBinding + ")>-1" + (
        trueValueBinding === 'true'
          ? (":(" + value + ")")
          : (":_q(" + value + "," + trueValueBinding + ")")
      )
  );
  addHandler(el, CHECKBOX_RADIO_TOKEN,
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$el.checked){$$i<0&&(" + value + "=$$a.concat($$v))}" +
      "else{$$i>-1&&(" + value + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
    el,
    value,
    modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;
  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  var event;
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    // Chrome fires microtasks in between click/change, leads to #4521
    event = isChrome ? 'click' : 'change';
    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  if (once$$1) {
    var oldHandler = handler;
    var _target = target$1; // save current target element in closure
    handler = function (ev) {
      var res = arguments.length === 1
        ? oldHandler(ev)
        : oldHandler.apply(null, arguments);
      if (res !== null) {
        remove$2(event, handler, capture, _target);
      }
    };
  }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(event, handler, capture);
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, vnode, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (
  elm,
  vnode,
  checkVal
) {
  return (!elm.composing && (
    vnode.tag === 'option' ||
    isDirty(elm, checkVal) ||
    isInputChanged(elm, checkVal)
  ))
}

function isDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isInputChanged (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers) && modifiers.number) {
    return toNumber(value) !== toNumber(newVal)
  }
  if (isDef(modifiers) && modifiers.trim) {
    return value.trim() !== newVal.trim()
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likley wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser && window.requestAnimationFrame
  ? window.requestAnimationFrame.bind(window)
  : setTimeout;

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if (false) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      addTransitionClass(el, toClass);
      removeTransitionClass(el, startClass);
      if (!cb.cancelled && !userWantsControl) {
        if (isValidDuration(explicitEnterDuration)) {
          setTimeout(cb, explicitEnterDuration);
        } else {
          whenTransitionEnds(el, type, cb);
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if (false) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        addTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled && !userWantsControl) {
          if (isValidDuration(explicitLeaveDuration)) {
            setTimeout(cb, explicitLeaveDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var model$1 = {
  inserted: function inserted (el, binding, vnode) {
    if (vnode.tag === 'select') {
      var cb = function () {
        setSelected(el, binding, vnode.context);
      };
      cb();
      /* istanbul ignore if */
      if (isIE || isEdge) {
        setTimeout(cb, 0);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        if (!isAndroid) {
          el.addEventListener('compositionstart', onCompositionStart);
          el.addEventListener('compositionend', onCompositionEnd);
        }
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        trigger(el, 'change');
      }
    }
  }
};

function setSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "production" !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (value === oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: model$1,
  show: show
};

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$options._renderChildren;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if (false) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if (false
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild && (oldChild.data.transition = extend({}, data));
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (false) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    var body = document.body;
    var f = body.offsetHeight; // eslint-disable-line

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue$3.config.mustUseProp = mustUseProp;
Vue$3.config.isReservedTag = isReservedTag;
Vue$3.config.isReservedAttr = isReservedAttr;
Vue$3.config.getTagNamespace = getTagNamespace;
Vue$3.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue$3.options.directives, platformDirectives);
extend(Vue$3.options.components, platformComponents);

// install platform patch function
Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
setTimeout(function () {
  if (config.devtools) {
    if (devtools) {
      devtools.emit('init', Vue$3);
    } else if (false) {
      console[console.info ? 'info' : 'log'](
        'Download the Vue Devtools extension for a better development experience:\n' +
        'https://github.com/vuejs/vue-devtools'
      );
    }
  }
  if (false
  ) {
    console[console.info ? 'info' : 'log'](
      "You are running Vue in development mode.\n" +
      "Make sure to turn on production mode when deploying for production.\n" +
      "See more tips at https://vuejs.org/guide/deployment.html"
    );
  }
}, 0);

/*  */

// check whether current browser encodes a char inside attribute values
function shouldDecode (content, encoded) {
  var div = document.createElement('div');
  div.innerHTML = "<div a=\"" + content + "\"/>";
  return div.innerHTML.indexOf(encoded) > 0
}

// #3663
// IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? shouldDecode('\n', '&#10;') : false;

/*  */

var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});

function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      tokens.push(JSON.stringify(text.slice(lastIndex, index)));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    tokens.push(JSON.stringify(text.slice(lastIndex)));
  }
  return tokens.join('+')
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if (false) {
    var expression = parseText(staticClass, options.delimiters);
    if (expression) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.'
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
};

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (false) {
      var expression = parseText(staticStyle, options.delimiters);
      if (expression) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.'
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1
};

var modules$1 = [
  klass$1,
  style$1
];

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
};

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

/*  */

var decoder;

var he = {
  decode: function decode (html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent
  }
};

/**
 * Not type-checking this file because it's mostly vendor code.
 */

/*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
var singleAttrIdentifier = /([^\s"'<>/=]+)/;
var singleAttrAssign = /(?:=)/;
var singleAttrValues = [
  // attr value double quotes
  /"([^"]*)"+/.source,
  // attr value, single quotes
  /'([^']*)'+/.source,
  // attr value, no quotes
  /([^\s"'=<>`]+)/.source
];
var attribute = new RegExp(
  '^\\s*' + singleAttrIdentifier.source +
  '(?:\\s*(' + singleAttrAssign.source + ')' +
  '\\s*(?:' + singleAttrValues.join('|') + '))?'
);

// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname = '[a-zA-Z_][\\w\\-\\.]*';
var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')';
var startTagOpen = new RegExp('^<' + qnameCapture);
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>');
var doctype = /^<!DOCTYPE [^>]+>/i;
var comment = /^<!--/;
var conditionalComment = /^<!\[/;

var IS_REGEX_CAPTURING_BROKEN = false;
'x'.replace(/x(.)?/g, function (m, g) {
  IS_REGEX_CAPTURING_BROKEN = g === '';
});

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n'
};
var encodedAttr = /&(?:lt|gt|quot|amp);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;

// #5992
var isIgnoreNewlineTag = makeMap('pre,textarea', true);
var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd));
            }
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          if (shouldIgnoreFirstNewline(lastTag, html)) {
            advance(1);
          }
          continue
        }
      }

      var text = (void 0), rest = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest = html.slice(textEnd);
        while (
          !endTag.test(rest) &&
          !startTagOpen.test(rest) &&
          !comment.test(rest) &&
          !conditionalComment.test(rest)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
        advance(textEnd);
      }

      if (textEnd < 0) {
        text = html;
        html = '';
      }

      if (options.chars && text) {
        options.chars(text);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!--([\s\S]*?)-->/g, '$1')
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if (false) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
        advance(attr[0].length);
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
        if (args[3] === '') { delete args[3]; }
        if (args[4] === '') { delete args[4]; }
        if (args[5] === '') { delete args[5]; }
      }
      var value = args[3] || args[4] || args[5] || '';
      attrs[i] = {
        name: args[1],
        value: decodeAttr(
          value,
          options.shouldDecodeNewlines
        )
      };
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
    }

    // Find the closest opened tag of the same type
    if (tagName) {
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if (false
        ) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
var forIteratorRE = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;

var argRE = /:(.*)$/;
var bindRE = /^:|^v-bind:/;
var modifierRE = /\.[^.]+/g;

var decodeHTMLCached = cached(he.decode);

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;

  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;

  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg) {
    if (!warned) {
      warned = true;
      warn$2(msg);
    }
  }

  function endPre (element) {
    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldKeepComment: options.comments,
    start: function start (tag, attrs, unary) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = {
        type: 1,
        tag: tag,
        attrsList: attrs,
        attrsMap: makeAttrsMap(attrs),
        parent: currentParent,
        children: []
      };
      if (ns) {
        element.ns = ns;
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        "production" !== 'production' && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.'
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        preTransforms[i](element, options);
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else {
        processFor(element);
        processIf(element);
        processOnce(element);
        processKey(element);

        // determine whether this is a plain element after
        // removing structural attributes
        element.plain = !element.key && !attrs.length;

        processRef(element);
        processSlot(element);
        processComponent(element);
        for (var i$1 = 0; i$1 < transforms.length; i$1++) {
          transforms[i$1](element, options);
        }
        processAttrs(element);
      }

      function checkRootConstraints (el) {
        if (false) {
          if (el.tag === 'slot' || el.tag === 'template') {
            warnOnce(
              "Cannot use <" + (el.tag) + "> as component root element because it may " +
              'contain multiple nodes.'
            );
          }
          if (el.attrsMap.hasOwnProperty('v-for')) {
            warnOnce(
              'Cannot use v-for on stateful component root element because ' +
              'it renders multiple elements.'
            );
          }
        }
      }

      // tree management
      if (!root) {
        root = element;
        checkRootConstraints(root);
      } else if (!stack.length) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          checkRootConstraints(element);
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else if (false) {
          warnOnce(
            "Component template should contain exactly one root element. " +
            "If you are using v-if on multiple elements, " +
            "use v-else-if to chain them instead."
          );
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else if (element.slotScope) { // scoped slot
          currentParent.plain = false;
          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        } else {
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }
      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        endPre(element);
      }
      // apply post-transforms
      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {
        postTransforms[i$2](element, options);
      }
    },

    end: function end () {
      // remove trailing whitespace
      var element = stack[stack.length - 1];
      var lastNode = element.children[element.children.length - 1];
      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
        element.children.pop();
      }
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      endPre(element);
    },

    chars: function chars (text) {
      if (!currentParent) {
        if (false) {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.'
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored.")
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
        currentParent.tag === 'textarea' &&
        currentParent.attrsMap.placeholder === text
      ) {
        return
      }
      var children = currentParent.children;
      text = inPre || text.trim()
        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
        // only preserve whitespace if its not right after a starting tag
        : preserveWhitespace && children.length ? ' ' : '';
      if (text) {
        var expression;
        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {
          children.push({
            type: 2,
            expression: expression,
            text: text
          });
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          children.push({
            type: 3,
            text: text
          });
        }
      }
    },
    comment: function comment (text) {
      currentParent.children.push({
        type: 3,
        text: text,
        isComment: true
      });
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var l = el.attrsList.length;
  if (l) {
    var attrs = el.attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      attrs[i] = {
        name: el.attrsList[i].name,
        value: JSON.stringify(el.attrsList[i].value)
      };
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if (false) {
      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var inMatch = exp.match(forAliasRE);
    if (!inMatch) {
      "production" !== 'production' && warn$2(
        ("Invalid v-for expression: " + exp)
      );
      return
    }
    el.for = inMatch[2].trim();
    var alias = inMatch[1].trim();
    var iteratorMatch = alias.match(forIteratorRE);
    if (iteratorMatch) {
      el.alias = iteratorMatch[1].trim();
      el.iterator1 = iteratorMatch[2].trim();
      if (iteratorMatch[3]) {
        el.iterator2 = iteratorMatch[3].trim();
      }
    } else {
      el.alias = alias;
    }
  }
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (false) {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if."
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if (false) {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored."
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

function processSlot (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if (false) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead."
      );
    }
  } else {
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
    }
    if (el.tag === 'template') {
      el.slotScope = getAndRemoveAttr(el, 'scope');
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, isProp;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name);
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isProp = false;
        if (modifiers) {
          if (modifiers.prop) {
            isProp = true;
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            addHandler(
              el,
              ("update:" + (camelize(name))),
              genAssignmentCode(value, "$event")
            );
          }
        }
        if (isProp || (
          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
        )) {
          addProp(el, name, value);
        } else {
          addAttr(el, name, value);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        addHandler(el, name, value, modifiers, false, warn$2);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
        }
        addDirective(el, name, rawName, value, arg, modifiers);
        if (false) {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (false) {
        var expression = parseText(value, delimiters);
        if (expression) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.'
          );
        }
      }
      addAttr(el, name, JSON.stringify(value));
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
      false
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead."
      );
    }
    _el = _el.parent;
  }
}

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);
        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
var simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;

// keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  isNative,
  warn
) {
  var res = isNative ? 'nativeOn:{' : 'on:{';
  for (var name in events) {
    var handler = events[name];
    // #5330: warn click.right, since right clicks do not actually fire click events.
    if (false
    ) {
      warn(
        "Use \"contextmenu\" instead of \"click.right\" since right clicks " +
        "do not actually fire \"click\" events."
      );
    }
    res += "\"" + name + "\":" + (genHandler(name, handler)) + ",";
  }
  return res.slice(0, -1) + '}'
}

function genHandler (
  name,
  handler
) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);

  if (!handler.modifiers) {
    return isMethodPath || isFunctionExpression
      ? handler.value
      : ("function($event){" + (handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? handler.value + '($event)'
      : isFunctionExpression
        ? ("(" + (handler.value) + ")($event)")
        : handler.value;
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var alias = keyCodes[key];
  return ("_k($event.keyCode," + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + ")")
}

/*  */

function on (el, dir) {
  if (false) {
    warn("v-on without argument does not support modifiers.");
  }
  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop
};

/*  */

var CodegenState = function CodegenState (options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;
  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };
  this.onceId = 0;
  this.staticRenderFns = [];
};



function generate (
  ast,
  options
) {
  var state = new CodegenState(options);
  var code = ast ? genElement(ast, state) : '_c("div")';
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: state.staticRenderFns
  }
}

function genElement (el, state) {
  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state)
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.tag === 'template' && !el.slotTarget) {
    return genChildren(el, state) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el, state)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data = el.plain ? undefined : genData$2(el, state);

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el, state) {
  el.staticProcessed = true;
  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el, state) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
      "production" !== 'production' && state.warn(
        "v-once can only be used inside v-for that is keyed. "
      );
      return genElement(el, state)
    }
    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + (key ? ("," + key) : "") + ")")
  } else {
    return genStatic(el, state)
  }
}

function genIf (
  el,
  state,
  altGen,
  altEmpty
) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
}

function genIfConditions (
  conditions,
  state,
  altGen,
  altEmpty
) {
  if (!conditions.length) {
    return altEmpty || '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return altGen
      ? altGen(el, state)
      : el.once
        ? genOnce(el, state)
        : genElement(el, state)
  }
}

function genFor (
  el,
  state,
  altGen,
  altHelper
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if (false
  ) {
    state.warn(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return (altHelper || '_l') + "((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + ((altGen || genElement)(el, state)) +
    '})'
}

function genData$2 (el, state) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el, state);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:{" + (genProps(el.attrs)) + "},";
  }
  // DOM props
  if (el.props) {
    data += "domProps:{" + (genProps(el.props)) + "},";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false, state.warn)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
  }
  // slot target
  if (el.slotTarget) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el.scopedSlots, state)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  // v-on data wrap
  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }
  return data
}

function genDirectives (el, state) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el, state) {
  var ast = el.children[0];
  if (false) {
    state.warn('Inline-template components must have exactly one child element.');
  }
  if (ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (
  slots,
  state
) {
  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
      return genScopedSlot(key, slots[key], state)
    }).join(',')) + "])")
}

function genScopedSlot (
  key,
  el,
  state
) {
  if (el.for && !el.forProcessed) {
    return genForScopedSlot(key, el, state)
  }
  return "{key:" + key + ",fn:function(" + (String(el.attrsMap.scope)) + "){" +
    "return " + (el.tag === 'template'
      ? genChildren(el, state) || 'void 0'
      : genElement(el, state)) + "}}"
}

function genForScopedSlot (
  key,
  el,
  state
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
  el.forProcessed = true; // avoid recursion
  return "_l((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + (genScopedSlot(key, el, state)) +
    '})'
}

function genChildren (
  el,
  state,
  checkSkip,
  altGenElement,
  altGenNode
) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
      el$1.for &&
      el$1.tag !== 'template' &&
      el$1.tag !== 'slot'
    ) {
      return (altGenElement || genElement)(el$1, state)
    }
    var normalizationType = checkSkip
      ? getNormalizationType(children, state.maybeComponent)
      : 0;
    var gen = altGenNode || genNode;
    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (
  children,
  maybeComponent
) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function genNode (node, state) {
  if (node.type === 1) {
    return genElement(node, state)
  } if (node.type === 3 && node.isComment) {
    return genComment(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genComment (comment) {
  return ("_e(" + (JSON.stringify(comment.text)) + ")")
}

function genSlot (el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? ("," + children) : '');
  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (
  componentName,
  el,
  state
) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var res = '';
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
  }
  return res.slice(0, -1)
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// check valid identifier for v-for
var identRE = /[A-Za-z_$][\w$]*/;

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast) {
  var errors = [];
  if (ast) {
    checkNode(ast, errors);
  }
  return errors
}

function checkNode (node, errors) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), errors);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), errors);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), errors);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], errors);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, errors);
  }
}

function checkEvent (exp, text, errors) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);
  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    errors.push(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
    );
  }
  checkExpression(exp, text, errors);
}

function checkFor (node, text, errors) {
  checkExpression(node.for || '', text, errors);
  checkIdentifier(node.alias, 'v-for alias', text, errors);
  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
}

function checkIdentifier (ident, type, text, errors) {
  if (typeof ident === 'string' && !identRE.test(ident)) {
    errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
  }
}

function checkExpression (exp, text, errors) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      errors.push(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
      );
    } else {
      errors.push(("invalid expression: " + (text.trim())));
    }
  }
}

/*  */

function createFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompileToFunctionFn (compile) {
  var cache = Object.create(null);

  return function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = options || {};

    /* istanbul ignore if */
    if (false) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (cache[key]) {
      return cache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (false) {
      if (compiled.errors && compiled.errors.length) {
        warn(
          "Error compiling template:\n\n" + template + "\n\n" +
          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
          vm
        );
      }
      if (compiled.tips && compiled.tips.length) {
        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors)
    });

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (false) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (cache[key] = res)
  }
}

/*  */

function createCompilerCreator (baseCompile) {
  return function createCompiler (baseOptions) {
    function compile (
      template,
      options
    ) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];
      finalOptions.warn = function (msg, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        // merge custom modules
        if (options.modules) {
          finalOptions.modules =
            (baseOptions.modules || []).concat(options.modules);
        }
        // merge custom directives
        if (options.directives) {
          finalOptions.directives = extend(
            Object.create(baseOptions.directives),
            options.directives
          );
        }
        // copy other options
        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      var compiled = baseCompile(template, finalOptions);
      if (false) {
        errors.push.apply(errors, detectErrors(compiled.ast));
      }
      compiled.errors = errors;
      compiled.tips = tips;
      return compiled
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    }
  }
}

/*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler = createCompilerCreator(function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  optimize(ast, options);
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
});

/*  */

var ref$1 = createCompiler(baseOptions);
var compileToFunctions = ref$1.compileToFunctions;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue$3.prototype.$mount;
Vue$3.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
    "production" !== 'production' && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if (false) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (false) {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if (false) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        shouldDecodeNewlines: shouldDecodeNewlines,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if (false) {
        mark('compile end');
        measure(((this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue$3.compile = compileToFunctions;

module.exports = Vue$3;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)))

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function fuzzysearch (needle, haystack) {
  var tlen = haystack.length;
  var qlen = needle.length;
  if (qlen > tlen) {
    return false;
  }
  if (qlen === tlen) {
    return needle === haystack;
  }
  outer: for (var i = 0, j = 0; i < qlen; i++) {
    var nch = needle.charCodeAt(i);
    while (j < tlen) {
      if (haystack.charCodeAt(j++) === nch) {
        continue outer;
      }
    }
    return false;
  }
  return true;
}

module.exports = fuzzysearch;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)))

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! tether-drop 1.4.1 */

(function(root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(25)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (typeof exports === 'object') {
    module.exports = factory(require('tether'));
  } else {
    root.Drop = factory(root.Tether);
  }
}(this, function(Tether) {

/* global Tether */
'use strict';

var _bind = Function.prototype.bind;

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _Tether$Utils = Tether.Utils;
var extend = _Tether$Utils.extend;
var addClass = _Tether$Utils.addClass;
var removeClass = _Tether$Utils.removeClass;
var hasClass = _Tether$Utils.hasClass;
var Evented = _Tether$Utils.Evented;

function sortAttach(str) {
  var _str$split = str.split(' ');

  var _str$split2 = _slicedToArray(_str$split, 2);

  var first = _str$split2[0];
  var second = _str$split2[1];

  if (['left', 'right'].indexOf(first) >= 0) {
    var _ref = [second, first];
    first = _ref[0];
    second = _ref[1];
  }
  return [first, second].join(' ');
}

function removeFromArray(arr, item) {
  var index = undefined;
  var results = [];
  while ((index = arr.indexOf(item)) !== -1) {
    results.push(arr.splice(index, 1));
  }
  return results;
}

var clickEvents = ['click'];
if ('ontouchstart' in document.documentElement) {
  clickEvents.push('touchstart');
}

var transitionEndEvents = {
  'WebkitTransition': 'webkitTransitionEnd',
  'MozTransition': 'transitionend',
  'OTransition': 'otransitionend',
  'transition': 'transitionend'
};

var transitionEndEvent = '';
for (var _name in transitionEndEvents) {
  if (({}).hasOwnProperty.call(transitionEndEvents, _name)) {
    var tempEl = document.createElement('p');
    if (typeof tempEl.style[_name] !== 'undefined') {
      transitionEndEvent = transitionEndEvents[_name];
    }
  }
}

var MIRROR_ATTACH = {
  left: 'right',
  right: 'left',
  top: 'bottom',
  bottom: 'top',
  middle: 'middle',
  center: 'center'
};

var allDrops = {};

// Drop can be included in external libraries.  Calling createContext gives you a fresh
// copy of drop which won't interact with other copies on the page (beyond calling the document events).

function createContext() {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var drop = function drop() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return new (_bind.apply(DropInstance, [null].concat(args)))();
  };

  extend(drop, {
    createContext: createContext,
    drops: [],
    defaults: {}
  });

  var defaultOptions = {
    classPrefix: 'drop',
    defaults: {
      position: 'bottom left',
      openOn: 'click',
      beforeClose: null,
      constrainToScrollParent: true,
      constrainToWindow: true,
      classes: '',
      remove: false,
      openDelay: 0,
      closeDelay: 50,
      // inherited from openDelay and closeDelay if not explicitly defined
      focusDelay: null,
      blurDelay: null,
      hoverOpenDelay: null,
      hoverCloseDelay: null,
      tetherOptions: {}
    }
  };

  extend(drop, defaultOptions, options);
  extend(drop.defaults, defaultOptions.defaults, options.defaults);

  if (typeof allDrops[drop.classPrefix] === 'undefined') {
    allDrops[drop.classPrefix] = [];
  }

  drop.updateBodyClasses = function () {
    // There is only one body, so despite the context concept, we still iterate through all
    // drops which share our classPrefix.

    var anyOpen = false;
    var drops = allDrops[drop.classPrefix];
    var len = drops.length;
    for (var i = 0; i < len; ++i) {
      if (drops[i].isOpened()) {
        anyOpen = true;
        break;
      }
    }

    if (anyOpen) {
      addClass(document.body, drop.classPrefix + '-open');
    } else {
      removeClass(document.body, drop.classPrefix + '-open');
    }
  };

  var DropInstance = (function (_Evented) {
    _inherits(DropInstance, _Evented);

    function DropInstance(opts) {
      _classCallCheck(this, DropInstance);

      _get(Object.getPrototypeOf(DropInstance.prototype), 'constructor', this).call(this);
      this.options = extend({}, drop.defaults, opts);
      this.target = this.options.target;

      if (typeof this.target === 'undefined') {
        throw new Error('Drop Error: You must provide a target.');
      }

      var dataPrefix = 'data-' + drop.classPrefix;

      var contentAttr = this.target.getAttribute(dataPrefix);
      if (contentAttr && this.options.content == null) {
        this.options.content = contentAttr;
      }

      var attrsOverride = ['position', 'openOn'];
      for (var i = 0; i < attrsOverride.length; ++i) {

        var override = this.target.getAttribute(dataPrefix + '-' + attrsOverride[i]);
        if (override && this.options[attrsOverride[i]] == null) {
          this.options[attrsOverride[i]] = override;
        }
      }

      if (this.options.classes && this.options.addTargetClasses !== false) {
        addClass(this.target, this.options.classes);
      }

      drop.drops.push(this);
      allDrops[drop.classPrefix].push(this);

      this._boundEvents = [];
      this.bindMethods();
      this.setupElements();
      this.setupEvents();
      this.setupTether();
    }

    _createClass(DropInstance, [{
      key: '_on',
      value: function _on(element, event, handler) {
        this._boundEvents.push({ element: element, event: event, handler: handler });
        element.addEventListener(event, handler);
      }
    }, {
      key: 'bindMethods',
      value: function bindMethods() {
        this.transitionEndHandler = this._transitionEndHandler.bind(this);
      }
    }, {
      key: 'setupElements',
      value: function setupElements() {
        var _this = this;

        this.drop = document.createElement('div');
        addClass(this.drop, drop.classPrefix);

        if (this.options.classes) {
          addClass(this.drop, this.options.classes);
        }

        this.content = document.createElement('div');
        addClass(this.content, drop.classPrefix + '-content');

        if (typeof this.options.content === 'function') {
          var generateAndSetContent = function generateAndSetContent() {
            // content function might return a string or an element
            var contentElementOrHTML = _this.options.content.call(_this, _this);

            if (typeof contentElementOrHTML === 'string') {
              _this.content.innerHTML = contentElementOrHTML;
            } else if (typeof contentElementOrHTML === 'object') {
              _this.content.innerHTML = '';
              _this.content.appendChild(contentElementOrHTML);
            } else {
              throw new Error('Drop Error: Content function should return a string or HTMLElement.');
            }
          };

          generateAndSetContent();
          this.on('open', generateAndSetContent.bind(this));
        } else if (typeof this.options.content === 'object') {
          this.content.appendChild(this.options.content);
        } else {
          this.content.innerHTML = this.options.content;
        }

        this.drop.appendChild(this.content);
      }
    }, {
      key: 'setupTether',
      value: function setupTether() {
        // Tether expects two attachment points, one in the target element, one in the
        // drop.  We use a single one, and use the order as well, to allow us to put
        // the drop on either side of any of the four corners.  This magic converts between
        // the two:
        var dropAttach = this.options.position.split(' ');
        dropAttach[0] = MIRROR_ATTACH[dropAttach[0]];
        dropAttach = dropAttach.join(' ');

        var constraints = [];
        if (this.options.constrainToScrollParent) {
          constraints.push({
            to: 'scrollParent',
            pin: 'top, bottom',
            attachment: 'together none'
          });
        } else {
          // To get 'out of bounds' classes
          constraints.push({
            to: 'scrollParent'
          });
        }

        if (this.options.constrainToWindow !== false) {
          constraints.push({
            to: 'window',
            attachment: 'together'
          });
        } else {
          // To get 'out of bounds' classes
          constraints.push({
            to: 'window'
          });
        }

        var opts = {
          element: this.drop,
          target: this.target,
          attachment: sortAttach(dropAttach),
          targetAttachment: sortAttach(this.options.position),
          classPrefix: drop.classPrefix,
          offset: '0 0',
          targetOffset: '0 0',
          enabled: false,
          constraints: constraints,
          addTargetClasses: this.options.addTargetClasses
        };

        if (this.options.tetherOptions !== false) {
          this.tether = new Tether(extend({}, opts, this.options.tetherOptions));
        }
      }
    }, {
      key: 'setupEvents',
      value: function setupEvents() {
        var _this2 = this;

        if (!this.options.openOn) {
          return;
        }

        if (this.options.openOn === 'always') {
          setTimeout(this.open.bind(this));
          return;
        }

        var events = this.options.openOn.split(' ');

        if (events.indexOf('click') >= 0) {
          var openHandler = function openHandler(event) {
            _this2.toggle(event);
            event.preventDefault();
          };

          var closeHandler = function closeHandler(event) {
            if (!_this2.isOpened()) {
              return;
            }

            // Clicking inside dropdown
            if (event.target === _this2.drop || _this2.drop.contains(event.target)) {
              return;
            }

            // Clicking target
            if (event.target === _this2.target || _this2.target.contains(event.target)) {
              return;
            }

            _this2.close(event);
          };

          for (var i = 0; i < clickEvents.length; ++i) {
            var clickEvent = clickEvents[i];
            this._on(this.target, clickEvent, openHandler);
            this._on(document, clickEvent, closeHandler);
          }
        }

        var inTimeout = null;
        var outTimeout = null;

        var inHandler = function inHandler(event) {
          if (outTimeout !== null) {
            clearTimeout(outTimeout);
          } else {
            inTimeout = setTimeout(function () {
              _this2.open(event);
              inTimeout = null;
            }, (event.type === 'focus' ? _this2.options.focusDelay : _this2.options.hoverOpenDelay) || _this2.options.openDelay);
          }
        };

        var outHandler = function outHandler(event) {
          if (inTimeout !== null) {
            clearTimeout(inTimeout);
          } else {
            outTimeout = setTimeout(function () {
              _this2.close(event);
              outTimeout = null;
            }, (event.type === 'blur' ? _this2.options.blurDelay : _this2.options.hoverCloseDelay) || _this2.options.closeDelay);
          }
        };

        if (events.indexOf('hover') >= 0) {
          this._on(this.target, 'mouseover', inHandler);
          this._on(this.drop, 'mouseover', inHandler);
          this._on(this.target, 'mouseout', outHandler);
          this._on(this.drop, 'mouseout', outHandler);
        }

        if (events.indexOf('focus') >= 0) {
          this._on(this.target, 'focus', inHandler);
          this._on(this.drop, 'focus', inHandler);
          this._on(this.target, 'blur', outHandler);
          this._on(this.drop, 'blur', outHandler);
        }
      }
    }, {
      key: 'isOpened',
      value: function isOpened() {
        if (this.drop) {
          return hasClass(this.drop, drop.classPrefix + '-open');
        }
      }
    }, {
      key: 'toggle',
      value: function toggle(event) {
        if (this.isOpened()) {
          this.close(event);
        } else {
          this.open(event);
        }
      }
    }, {
      key: 'open',
      value: function open(event) {
        var _this3 = this;

        /* eslint no-unused-vars: 0 */
        if (this.isOpened()) {
          return;
        }

        if (!this.drop.parentNode) {
          document.body.appendChild(this.drop);
        }

        if (typeof this.tether !== 'undefined') {
          this.tether.enable();
        }

        addClass(this.drop, drop.classPrefix + '-open');
        addClass(this.drop, drop.classPrefix + '-open-transitionend');

        setTimeout(function () {
          if (_this3.drop) {
            addClass(_this3.drop, drop.classPrefix + '-after-open');
          }
        });

        if (typeof this.tether !== 'undefined') {
          this.tether.position();
        }

        this.trigger('open');

        drop.updateBodyClasses();
      }
    }, {
      key: '_transitionEndHandler',
      value: function _transitionEndHandler(e) {
        if (e.target !== e.currentTarget) {
          return;
        }

        if (!hasClass(this.drop, drop.classPrefix + '-open')) {
          removeClass(this.drop, drop.classPrefix + '-open-transitionend');
        }
        this.drop.removeEventListener(transitionEndEvent, this.transitionEndHandler);
      }
    }, {
      key: 'beforeCloseHandler',
      value: function beforeCloseHandler(event) {
        var shouldClose = true;

        if (!this.isClosing && typeof this.options.beforeClose === 'function') {
          this.isClosing = true;
          shouldClose = this.options.beforeClose(event, this) !== false;
        }

        this.isClosing = false;

        return shouldClose;
      }
    }, {
      key: 'close',
      value: function close(event) {
        if (!this.isOpened()) {
          return;
        }

        if (!this.beforeCloseHandler(event)) {
          return;
        }

        removeClass(this.drop, drop.classPrefix + '-open');
        removeClass(this.drop, drop.classPrefix + '-after-open');

        this.drop.addEventListener(transitionEndEvent, this.transitionEndHandler);

        this.trigger('close');

        if (typeof this.tether !== 'undefined') {
          this.tether.disable();
        }

        drop.updateBodyClasses();

        if (this.options.remove) {
          this.remove(event);
        }
      }
    }, {
      key: 'remove',
      value: function remove(event) {
        this.close(event);
        if (this.drop.parentNode) {
          this.drop.parentNode.removeChild(this.drop);
        }
      }
    }, {
      key: 'position',
      value: function position() {
        if (this.isOpened() && typeof this.tether !== 'undefined') {
          this.tether.position();
        }
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.remove();

        if (typeof this.tether !== 'undefined') {
          this.tether.destroy();
        }

        for (var i = 0; i < this._boundEvents.length; ++i) {
          var _boundEvents$i = this._boundEvents[i];
          var element = _boundEvents$i.element;
          var _event = _boundEvents$i.event;
          var handler = _boundEvents$i.handler;

          element.removeEventListener(_event, handler);
        }

        this._boundEvents = [];

        this.tether = null;
        this.drop = null;
        this.content = null;
        this.target = null;

        removeFromArray(allDrops[drop.classPrefix], this);
        removeFromArray(drop.drops, this);
      }
    }]);

    return DropInstance;
  })(Evented);

  return drop;
}

var Drop = createContext();

document.addEventListener('DOMContentLoaded', function () {
  Drop.updateBodyClasses();
});
return Drop;

}));


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! tether 1.4.0 */

(function(root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (typeof exports === 'object') {
    module.exports = factory(require, exports, module);
  } else {
    root.Tether = factory();
  }
}(this, function(require, exports, module) {

'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var TetherBase = undefined;
if (typeof TetherBase === 'undefined') {
  TetherBase = { modules: [] };
}

var zeroElement = null;

// Same as native getBoundingClientRect, except it takes into account parent <frame> offsets
// if the element lies within a nested document (<frame> or <iframe>-like).
function getActualBoundingClientRect(node) {
  var boundingRect = node.getBoundingClientRect();

  // The original object returned by getBoundingClientRect is immutable, so we clone it
  // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9
  var rect = {};
  for (var k in boundingRect) {
    rect[k] = boundingRect[k];
  }

  if (node.ownerDocument !== document) {
    var _frameElement = node.ownerDocument.defaultView.frameElement;
    if (_frameElement) {
      var frameRect = getActualBoundingClientRect(_frameElement);
      rect.top += frameRect.top;
      rect.bottom += frameRect.top;
      rect.left += frameRect.left;
      rect.right += frameRect.left;
    }
  }

  return rect;
}

function getScrollParents(el) {
  // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;
  // https://bugzilla.mozilla.org/show_bug.cgi?id=548397
  var computedStyle = getComputedStyle(el) || {};
  var position = computedStyle.position;
  var parents = [];

  if (position === 'fixed') {
    return [el];
  }

  var parent = el;
  while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {
    var style = undefined;
    try {
      style = getComputedStyle(parent);
    } catch (err) {}

    if (typeof style === 'undefined' || style === null) {
      parents.push(parent);
      return parents;
    }

    var _style = style;
    var overflow = _style.overflow;
    var overflowX = _style.overflowX;
    var overflowY = _style.overflowY;

    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
      if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {
        parents.push(parent);
      }
    }
  }

  parents.push(el.ownerDocument.body);

  // If the node is within a frame, account for the parent window scroll
  if (el.ownerDocument !== document) {
    parents.push(el.ownerDocument.defaultView);
  }

  return parents;
}

var uniqueId = (function () {
  var id = 0;
  return function () {
    return ++id;
  };
})();

var zeroPosCache = {};
var getOrigin = function getOrigin() {
  // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of
  // jitter as the user scrolls that messes with our ability to detect if two positions
  // are equivilant or not.  We place an element at the top left of the page that will
  // get the same jitter, so we can cancel the two out.
  var node = zeroElement;
  if (!node || !document.body.contains(node)) {
    node = document.createElement('div');
    node.setAttribute('data-tether-id', uniqueId());
    extend(node.style, {
      top: 0,
      left: 0,
      position: 'absolute'
    });

    document.body.appendChild(node);

    zeroElement = node;
  }

  var id = node.getAttribute('data-tether-id');
  if (typeof zeroPosCache[id] === 'undefined') {
    zeroPosCache[id] = getActualBoundingClientRect(node);

    // Clear the cache when this position call is done
    defer(function () {
      delete zeroPosCache[id];
    });
  }

  return zeroPosCache[id];
};

function removeUtilElements() {
  if (zeroElement) {
    document.body.removeChild(zeroElement);
  }
  zeroElement = null;
};

function getBounds(el) {
  var doc = undefined;
  if (el === document) {
    doc = document;
    el = document.documentElement;
  } else {
    doc = el.ownerDocument;
  }

  var docEl = doc.documentElement;

  var box = getActualBoundingClientRect(el);

  var origin = getOrigin();

  box.top -= origin.top;
  box.left -= origin.left;

  if (typeof box.width === 'undefined') {
    box.width = document.body.scrollWidth - box.left - box.right;
  }
  if (typeof box.height === 'undefined') {
    box.height = document.body.scrollHeight - box.top - box.bottom;
  }

  box.top = box.top - docEl.clientTop;
  box.left = box.left - docEl.clientLeft;
  box.right = doc.body.clientWidth - box.width - box.left;
  box.bottom = doc.body.clientHeight - box.height - box.top;

  return box;
}

function getOffsetParent(el) {
  return el.offsetParent || document.documentElement;
}

var _scrollBarSize = null;
function getScrollBarSize() {
  if (_scrollBarSize) {
    return _scrollBarSize;
  }
  var inner = document.createElement('div');
  inner.style.width = '100%';
  inner.style.height = '200px';

  var outer = document.createElement('div');
  extend(outer.style, {
    position: 'absolute',
    top: 0,
    left: 0,
    pointerEvents: 'none',
    visibility: 'hidden',
    width: '200px',
    height: '150px',
    overflow: 'hidden'
  });

  outer.appendChild(inner);

  document.body.appendChild(outer);

  var widthContained = inner.offsetWidth;
  outer.style.overflow = 'scroll';
  var widthScroll = inner.offsetWidth;

  if (widthContained === widthScroll) {
    widthScroll = outer.clientWidth;
  }

  document.body.removeChild(outer);

  var width = widthContained - widthScroll;

  _scrollBarSize = { width: width, height: width };
  return _scrollBarSize;
}

function extend() {
  var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var args = [];

  Array.prototype.push.apply(args, arguments);

  args.slice(1).forEach(function (obj) {
    if (obj) {
      for (var key in obj) {
        if (({}).hasOwnProperty.call(obj, key)) {
          out[key] = obj[key];
        }
      }
    }
  });

  return out;
}

function removeClass(el, name) {
  if (typeof el.classList !== 'undefined') {
    name.split(' ').forEach(function (cls) {
      if (cls.trim()) {
        el.classList.remove(cls);
      }
    });
  } else {
    var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');
    var className = getClassName(el).replace(regex, ' ');
    setClassName(el, className);
  }
}

function addClass(el, name) {
  if (typeof el.classList !== 'undefined') {
    name.split(' ').forEach(function (cls) {
      if (cls.trim()) {
        el.classList.add(cls);
      }
    });
  } else {
    removeClass(el, name);
    var cls = getClassName(el) + (' ' + name);
    setClassName(el, cls);
  }
}

function hasClass(el, name) {
  if (typeof el.classList !== 'undefined') {
    return el.classList.contains(name);
  }
  var className = getClassName(el);
  return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);
}

function getClassName(el) {
  // Can't use just SVGAnimatedString here since nodes within a Frame in IE have
  // completely separately SVGAnimatedString base classes
  if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {
    return el.className.baseVal;
  }
  return el.className;
}

function setClassName(el, className) {
  el.setAttribute('class', className);
}

function updateClasses(el, add, all) {
  // Of the set of 'all' classes, we need the 'add' classes, and only the
  // 'add' classes to be set.
  all.forEach(function (cls) {
    if (add.indexOf(cls) === -1 && hasClass(el, cls)) {
      removeClass(el, cls);
    }
  });

  add.forEach(function (cls) {
    if (!hasClass(el, cls)) {
      addClass(el, cls);
    }
  });
}

var deferred = [];

var defer = function defer(fn) {
  deferred.push(fn);
};

var flush = function flush() {
  var fn = undefined;
  while (fn = deferred.pop()) {
    fn();
  }
};

var Evented = (function () {
  function Evented() {
    _classCallCheck(this, Evented);
  }

  _createClass(Evented, [{
    key: 'on',
    value: function on(event, handler, ctx) {
      var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

      if (typeof this.bindings === 'undefined') {
        this.bindings = {};
      }
      if (typeof this.bindings[event] === 'undefined') {
        this.bindings[event] = [];
      }
      this.bindings[event].push({ handler: handler, ctx: ctx, once: once });
    }
  }, {
    key: 'once',
    value: function once(event, handler, ctx) {
      this.on(event, handler, ctx, true);
    }
  }, {
    key: 'off',
    value: function off(event, handler) {
      if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {
        return;
      }

      if (typeof handler === 'undefined') {
        delete this.bindings[event];
      } else {
        var i = 0;
        while (i < this.bindings[event].length) {
          if (this.bindings[event][i].handler === handler) {
            this.bindings[event].splice(i, 1);
          } else {
            ++i;
          }
        }
      }
    }
  }, {
    key: 'trigger',
    value: function trigger(event) {
      if (typeof this.bindings !== 'undefined' && this.bindings[event]) {
        var i = 0;

        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        while (i < this.bindings[event].length) {
          var _bindings$event$i = this.bindings[event][i];
          var handler = _bindings$event$i.handler;
          var ctx = _bindings$event$i.ctx;
          var once = _bindings$event$i.once;

          var context = ctx;
          if (typeof context === 'undefined') {
            context = this;
          }

          handler.apply(context, args);

          if (once) {
            this.bindings[event].splice(i, 1);
          } else {
            ++i;
          }
        }
      }
    }
  }]);

  return Evented;
})();

TetherBase.Utils = {
  getActualBoundingClientRect: getActualBoundingClientRect,
  getScrollParents: getScrollParents,
  getBounds: getBounds,
  getOffsetParent: getOffsetParent,
  extend: extend,
  addClass: addClass,
  removeClass: removeClass,
  hasClass: hasClass,
  updateClasses: updateClasses,
  defer: defer,
  flush: flush,
  uniqueId: uniqueId,
  Evented: Evented,
  getScrollBarSize: getScrollBarSize,
  removeUtilElements: removeUtilElements
};
/* globals TetherBase, performance */

'use strict';

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x6, _x7, _x8) { var _again = true; _function: while (_again) { var object = _x6, property = _x7, receiver = _x8; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x6 = parent; _x7 = property; _x8 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

if (typeof TetherBase === 'undefined') {
  throw new Error('You must include the utils.js file before tether.js');
}

var _TetherBase$Utils = TetherBase.Utils;
var getScrollParents = _TetherBase$Utils.getScrollParents;
var getBounds = _TetherBase$Utils.getBounds;
var getOffsetParent = _TetherBase$Utils.getOffsetParent;
var extend = _TetherBase$Utils.extend;
var addClass = _TetherBase$Utils.addClass;
var removeClass = _TetherBase$Utils.removeClass;
var updateClasses = _TetherBase$Utils.updateClasses;
var defer = _TetherBase$Utils.defer;
var flush = _TetherBase$Utils.flush;
var getScrollBarSize = _TetherBase$Utils.getScrollBarSize;
var removeUtilElements = _TetherBase$Utils.removeUtilElements;

function within(a, b) {
  var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];

  return a + diff >= b && b >= a - diff;
}

var transformKey = (function () {
  if (typeof document === 'undefined') {
    return '';
  }
  var el = document.createElement('div');

  var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];
  for (var i = 0; i < transforms.length; ++i) {
    var key = transforms[i];
    if (el.style[key] !== undefined) {
      return key;
    }
  }
})();

var tethers = [];

var position = function position() {
  tethers.forEach(function (tether) {
    tether.position(false);
  });
  flush();
};

function now() {
  if (typeof performance !== 'undefined' && typeof performance.now !== 'undefined') {
    return performance.now();
  }
  return +new Date();
}

(function () {
  var lastCall = null;
  var lastDuration = null;
  var pendingTimeout = null;

  var tick = function tick() {
    if (typeof lastDuration !== 'undefined' && lastDuration > 16) {
      // We voluntarily throttle ourselves if we can't manage 60fps
      lastDuration = Math.min(lastDuration - 16, 250);

      // Just in case this is the last event, remember to position just once more
      pendingTimeout = setTimeout(tick, 250);
      return;
    }

    if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {
      // Some browsers call events a little too frequently, refuse to run more than is reasonable
      return;
    }

    if (pendingTimeout != null) {
      clearTimeout(pendingTimeout);
      pendingTimeout = null;
    }

    lastCall = now();
    position();
    lastDuration = now() - lastCall;
  };

  if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {
    ['resize', 'scroll', 'touchmove'].forEach(function (event) {
      window.addEventListener(event, tick);
    });
  }
})();

var MIRROR_LR = {
  center: 'center',
  left: 'right',
  right: 'left'
};

var MIRROR_TB = {
  middle: 'middle',
  top: 'bottom',
  bottom: 'top'
};

var OFFSET_MAP = {
  top: 0,
  left: 0,
  middle: '50%',
  center: '50%',
  bottom: '100%',
  right: '100%'
};

var autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {
  var left = attachment.left;
  var top = attachment.top;

  if (left === 'auto') {
    left = MIRROR_LR[relativeToAttachment.left];
  }

  if (top === 'auto') {
    top = MIRROR_TB[relativeToAttachment.top];
  }

  return { left: left, top: top };
};

var attachmentToOffset = function attachmentToOffset(attachment) {
  var left = attachment.left;
  var top = attachment.top;

  if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {
    left = OFFSET_MAP[attachment.left];
  }

  if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {
    top = OFFSET_MAP[attachment.top];
  }

  return { left: left, top: top };
};

function addOffset() {
  var out = { top: 0, left: 0 };

  for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {
    offsets[_key] = arguments[_key];
  }

  offsets.forEach(function (_ref) {
    var top = _ref.top;
    var left = _ref.left;

    if (typeof top === 'string') {
      top = parseFloat(top, 10);
    }
    if (typeof left === 'string') {
      left = parseFloat(left, 10);
    }

    out.top += top;
    out.left += left;
  });

  return out;
}

function offsetToPx(offset, size) {
  if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {
    offset.left = parseFloat(offset.left, 10) / 100 * size.width;
  }
  if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {
    offset.top = parseFloat(offset.top, 10) / 100 * size.height;
  }

  return offset;
}

var parseOffset = function parseOffset(value) {
  var _value$split = value.split(' ');

  var _value$split2 = _slicedToArray(_value$split, 2);

  var top = _value$split2[0];
  var left = _value$split2[1];

  return { top: top, left: left };
};
var parseAttachment = parseOffset;

var TetherClass = (function (_Evented) {
  _inherits(TetherClass, _Evented);

  function TetherClass(options) {
    var _this = this;

    _classCallCheck(this, TetherClass);

    _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);
    this.position = this.position.bind(this);

    tethers.push(this);

    this.history = [];

    this.setOptions(options, false);

    TetherBase.modules.forEach(function (module) {
      if (typeof module.initialize !== 'undefined') {
        module.initialize.call(_this);
      }
    });

    this.position();
  }

  _createClass(TetherClass, [{
    key: 'getClass',
    value: function getClass() {
      var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
      var classes = this.options.classes;

      if (typeof classes !== 'undefined' && classes[key]) {
        return this.options.classes[key];
      } else if (this.options.classPrefix) {
        return this.options.classPrefix + '-' + key;
      } else {
        return key;
      }
    }
  }, {
    key: 'setOptions',
    value: function setOptions(options) {
      var _this2 = this;

      var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

      var defaults = {
        offset: '0 0',
        targetOffset: '0 0',
        targetAttachment: 'auto auto',
        classPrefix: 'tether'
      };

      this.options = extend(defaults, options);

      var _options = this.options;
      var element = _options.element;
      var target = _options.target;
      var targetModifier = _options.targetModifier;

      this.element = element;
      this.target = target;
      this.targetModifier = targetModifier;

      if (this.target === 'viewport') {
        this.target = document.body;
        this.targetModifier = 'visible';
      } else if (this.target === 'scroll-handle') {
        this.target = document.body;
        this.targetModifier = 'scroll-handle';
      }

      ['element', 'target'].forEach(function (key) {
        if (typeof _this2[key] === 'undefined') {
          throw new Error('Tether Error: Both element and target must be defined');
        }

        if (typeof _this2[key].jquery !== 'undefined') {
          _this2[key] = _this2[key][0];
        } else if (typeof _this2[key] === 'string') {
          _this2[key] = document.querySelector(_this2[key]);
        }
      });

      addClass(this.element, this.getClass('element'));
      if (!(this.options.addTargetClasses === false)) {
        addClass(this.target, this.getClass('target'));
      }

      if (!this.options.attachment) {
        throw new Error('Tether Error: You must provide an attachment');
      }

      this.targetAttachment = parseAttachment(this.options.targetAttachment);
      this.attachment = parseAttachment(this.options.attachment);
      this.offset = parseOffset(this.options.offset);
      this.targetOffset = parseOffset(this.options.targetOffset);

      if (typeof this.scrollParents !== 'undefined') {
        this.disable();
      }

      if (this.targetModifier === 'scroll-handle') {
        this.scrollParents = [this.target];
      } else {
        this.scrollParents = getScrollParents(this.target);
      }

      if (!(this.options.enabled === false)) {
        this.enable(pos);
      }
    }
  }, {
    key: 'getTargetBounds',
    value: function getTargetBounds() {
      if (typeof this.targetModifier !== 'undefined') {
        if (this.targetModifier === 'visible') {
          if (this.target === document.body) {
            return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };
          } else {
            var bounds = getBounds(this.target);

            var out = {
              height: bounds.height,
              width: bounds.width,
              top: bounds.top,
              left: bounds.left
            };

            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));
            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));
            out.height = Math.min(innerHeight, out.height);
            out.height -= 2;

            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));
            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));
            out.width = Math.min(innerWidth, out.width);
            out.width -= 2;

            if (out.top < pageYOffset) {
              out.top = pageYOffset;
            }
            if (out.left < pageXOffset) {
              out.left = pageXOffset;
            }

            return out;
          }
        } else if (this.targetModifier === 'scroll-handle') {
          var bounds = undefined;
          var target = this.target;
          if (target === document.body) {
            target = document.documentElement;

            bounds = {
              left: pageXOffset,
              top: pageYOffset,
              height: innerHeight,
              width: innerWidth
            };
          } else {
            bounds = getBounds(target);
          }

          var style = getComputedStyle(target);

          var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;

          var scrollBottom = 0;
          if (hasBottomScroll) {
            scrollBottom = 15;
          }

          var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;

          var out = {
            width: 15,
            height: height * 0.975 * (height / target.scrollHeight),
            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15
          };

          var fitAdj = 0;
          if (height < 408 && this.target === document.body) {
            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;
          }

          if (this.target !== document.body) {
            out.height = Math.max(out.height, 24);
          }

          var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);
          out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);

          if (this.target === document.body) {
            out.height = Math.max(out.height, 24);
          }

          return out;
        }
      } else {
        return getBounds(this.target);
      }
    }
  }, {
    key: 'clearCache',
    value: function clearCache() {
      this._cache = {};
    }
  }, {
    key: 'cache',
    value: function cache(k, getter) {
      // More than one module will often need the same DOM info, so
      // we keep a cache which is cleared on each position call
      if (typeof this._cache === 'undefined') {
        this._cache = {};
      }

      if (typeof this._cache[k] === 'undefined') {
        this._cache[k] = getter.call(this);
      }

      return this._cache[k];
    }
  }, {
    key: 'enable',
    value: function enable() {
      var _this3 = this;

      var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

      if (!(this.options.addTargetClasses === false)) {
        addClass(this.target, this.getClass('enabled'));
      }
      addClass(this.element, this.getClass('enabled'));
      this.enabled = true;

      this.scrollParents.forEach(function (parent) {
        if (parent !== _this3.target.ownerDocument) {
          parent.addEventListener('scroll', _this3.position);
        }
      });

      if (pos) {
        this.position();
      }
    }
  }, {
    key: 'disable',
    value: function disable() {
      var _this4 = this;

      removeClass(this.target, this.getClass('enabled'));
      removeClass(this.element, this.getClass('enabled'));
      this.enabled = false;

      if (typeof this.scrollParents !== 'undefined') {
        this.scrollParents.forEach(function (parent) {
          parent.removeEventListener('scroll', _this4.position);
        });
      }
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      var _this5 = this;

      this.disable();

      tethers.forEach(function (tether, i) {
        if (tether === _this5) {
          tethers.splice(i, 1);
        }
      });

      // Remove any elements we were using for convenience from the DOM
      if (tethers.length === 0) {
        removeUtilElements();
      }
    }
  }, {
    key: 'updateAttachClasses',
    value: function updateAttachClasses(elementAttach, targetAttach) {
      var _this6 = this;

      elementAttach = elementAttach || this.attachment;
      targetAttach = targetAttach || this.targetAttachment;
      var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];

      if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {
        // updateAttachClasses can be called more than once in a position call, so
        // we need to clean up after ourselves such that when the last defer gets
        // ran it doesn't add any extra classes from previous calls.
        this._addAttachClasses.splice(0, this._addAttachClasses.length);
      }

      if (typeof this._addAttachClasses === 'undefined') {
        this._addAttachClasses = [];
      }
      var add = this._addAttachClasses;

      if (elementAttach.top) {
        add.push(this.getClass('element-attached') + '-' + elementAttach.top);
      }
      if (elementAttach.left) {
        add.push(this.getClass('element-attached') + '-' + elementAttach.left);
      }
      if (targetAttach.top) {
        add.push(this.getClass('target-attached') + '-' + targetAttach.top);
      }
      if (targetAttach.left) {
        add.push(this.getClass('target-attached') + '-' + targetAttach.left);
      }

      var all = [];
      sides.forEach(function (side) {
        all.push(_this6.getClass('element-attached') + '-' + side);
        all.push(_this6.getClass('target-attached') + '-' + side);
      });

      defer(function () {
        if (!(typeof _this6._addAttachClasses !== 'undefined')) {
          return;
        }

        updateClasses(_this6.element, _this6._addAttachClasses, all);
        if (!(_this6.options.addTargetClasses === false)) {
          updateClasses(_this6.target, _this6._addAttachClasses, all);
        }

        delete _this6._addAttachClasses;
      });
    }
  }, {
    key: 'position',
    value: function position() {
      var _this7 = this;

      var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

      // flushChanges commits the changes immediately, leave true unless you are positioning multiple
      // tethers (in which case call Tether.Utils.flush yourself when you're done)

      if (!this.enabled) {
        return;
      }

      this.clearCache();

      // Turn 'auto' attachments into the appropriate corner or edge
      var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);

      this.updateAttachClasses(this.attachment, targetAttachment);

      var elementPos = this.cache('element-bounds', function () {
        return getBounds(_this7.element);
      });

      var width = elementPos.width;
      var height = elementPos.height;

      if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
        var _lastSize = this.lastSize;

        // We cache the height and width to make it possible to position elements that are
        // getting hidden.
        width = _lastSize.width;
        height = _lastSize.height;
      } else {
        this.lastSize = { width: width, height: height };
      }

      var targetPos = this.cache('target-bounds', function () {
        return _this7.getTargetBounds();
      });
      var targetSize = targetPos;

      // Get an actual px offset from the attachment
      var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });
      var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);

      var manualOffset = offsetToPx(this.offset, { width: width, height: height });
      var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);

      // Add the manually provided offset
      offset = addOffset(offset, manualOffset);
      targetOffset = addOffset(targetOffset, manualTargetOffset);

      // It's now our goal to make (element position + offset) == (target position + target offset)
      var left = targetPos.left + targetOffset.left - offset.left;
      var top = targetPos.top + targetOffset.top - offset.top;

      for (var i = 0; i < TetherBase.modules.length; ++i) {
        var _module2 = TetherBase.modules[i];
        var ret = _module2.position.call(this, {
          left: left,
          top: top,
          targetAttachment: targetAttachment,
          targetPos: targetPos,
          elementPos: elementPos,
          offset: offset,
          targetOffset: targetOffset,
          manualOffset: manualOffset,
          manualTargetOffset: manualTargetOffset,
          scrollbarSize: scrollbarSize,
          attachment: this.attachment
        });

        if (ret === false) {
          return false;
        } else if (typeof ret === 'undefined' || typeof ret !== 'object') {
          continue;
        } else {
          top = ret.top;
          left = ret.left;
        }
      }

      // We describe the position three different ways to give the optimizer
      // a chance to decide the best possible way to position the element
      // with the fewest repaints.
      var next = {
        // It's position relative to the page (absolute positioning when
        // the element is a child of the body)
        page: {
          top: top,
          left: left
        },

        // It's position relative to the viewport (fixed positioning)
        viewport: {
          top: top - pageYOffset,
          bottom: pageYOffset - top - height + innerHeight,
          left: left - pageXOffset,
          right: pageXOffset - left - width + innerWidth
        }
      };

      var doc = this.target.ownerDocument;
      var win = doc.defaultView;

      var scrollbarSize = undefined;
      if (win.innerHeight > doc.documentElement.clientHeight) {
        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
        next.viewport.bottom -= scrollbarSize.height;
      }

      if (win.innerWidth > doc.documentElement.clientWidth) {
        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
        next.viewport.right -= scrollbarSize.width;
      }

      if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {
        // Absolute positioning in the body will be relative to the page, not the 'initial containing block'
        next.page.bottom = doc.body.scrollHeight - top - height;
        next.page.right = doc.body.scrollWidth - left - width;
      }

      if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {
        (function () {
          var offsetParent = _this7.cache('target-offsetparent', function () {
            return getOffsetParent(_this7.target);
          });
          var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {
            return getBounds(offsetParent);
          });
          var offsetParentStyle = getComputedStyle(offsetParent);
          var offsetParentSize = offsetPosition;

          var offsetBorder = {};
          ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {
            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);
          });

          offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;
          offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;

          if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {
            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {
              // We're within the visible part of the target's scroll parent
              var scrollTop = offsetParent.scrollTop;
              var scrollLeft = offsetParent.scrollLeft;

              // It's position relative to the target's offset parent (absolute positioning when
              // the element is moved to be a child of the target's offset parent).
              next.offset = {
                top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,
                left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left
              };
            }
          }
        })();
      }

      // We could also travel up the DOM and try each containing context, rather than only
      // looking at the body, but we're gonna get diminishing returns.

      this.move(next);

      this.history.unshift(next);

      if (this.history.length > 3) {
        this.history.pop();
      }

      if (flushChanges) {
        flush();
      }

      return true;
    }

    // THE ISSUE
  }, {
    key: 'move',
    value: function move(pos) {
      var _this8 = this;

      if (!(typeof this.element.parentNode !== 'undefined')) {
        return;
      }

      var same = {};

      for (var type in pos) {
        same[type] = {};

        for (var key in pos[type]) {
          var found = false;

          for (var i = 0; i < this.history.length; ++i) {
            var point = this.history[i];
            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {
              found = true;
              break;
            }
          }

          if (!found) {
            same[type][key] = true;
          }
        }
      }

      var css = { top: '', left: '', right: '', bottom: '' };

      var transcribe = function transcribe(_same, _pos) {
        var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';
        var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;
        if (gpu !== false) {
          var yPos = undefined,
              xPos = undefined;
          if (_same.top) {
            css.top = 0;
            yPos = _pos.top;
          } else {
            css.bottom = 0;
            yPos = -_pos.bottom;
          }

          if (_same.left) {
            css.left = 0;
            xPos = _pos.left;
          } else {
            css.right = 0;
            xPos = -_pos.right;
          }

          if (window.matchMedia) {
            // HubSpot/tether#207
            var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;
            if (!retina) {
              xPos = Math.round(xPos);
              yPos = Math.round(yPos);
            }
          }

          css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';

          if (transformKey !== 'msTransform') {
            // The Z transform will keep this in the GPU (faster, and prevents artifacts),
            // but IE9 doesn't support 3d transforms and will choke.
            css[transformKey] += " translateZ(0)";
          }
        } else {
          if (_same.top) {
            css.top = _pos.top + 'px';
          } else {
            css.bottom = _pos.bottom + 'px';
          }

          if (_same.left) {
            css.left = _pos.left + 'px';
          } else {
            css.right = _pos.right + 'px';
          }
        }
      };

      var moved = false;
      if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {
        css.position = 'absolute';
        transcribe(same.page, pos.page);
      } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {
        css.position = 'fixed';
        transcribe(same.viewport, pos.viewport);
      } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {
        (function () {
          css.position = 'absolute';
          var offsetParent = _this8.cache('target-offsetparent', function () {
            return getOffsetParent(_this8.target);
          });

          if (getOffsetParent(_this8.element) !== offsetParent) {
            defer(function () {
              _this8.element.parentNode.removeChild(_this8.element);
              offsetParent.appendChild(_this8.element);
            });
          }

          transcribe(same.offset, pos.offset);
          moved = true;
        })();
      } else {
        css.position = 'absolute';
        transcribe({ top: true, left: true }, pos.page);
      }

      if (!moved) {
        if (this.options.bodyElement) {
          this.options.bodyElement.appendChild(this.element);
        } else {
          var offsetParentIsBody = true;
          var currentNode = this.element.parentNode;
          while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {
            if (getComputedStyle(currentNode).position !== 'static') {
              offsetParentIsBody = false;
              break;
            }

            currentNode = currentNode.parentNode;
          }

          if (!offsetParentIsBody) {
            this.element.parentNode.removeChild(this.element);
            this.element.ownerDocument.body.appendChild(this.element);
          }
        }
      }

      // Any css change will trigger a repaint, so let's avoid one if nothing changed
      var writeCSS = {};
      var write = false;
      for (var key in css) {
        var val = css[key];
        var elVal = this.element.style[key];

        if (elVal !== val) {
          write = true;
          writeCSS[key] = val;
        }
      }

      if (write) {
        defer(function () {
          extend(_this8.element.style, writeCSS);
          _this8.trigger('repositioned');
        });
      }
    }
  }]);

  return TetherClass;
})(Evented);

TetherClass.modules = [];

TetherBase.position = position;

var Tether = extend(TetherClass, TetherBase);
/* globals TetherBase */

'use strict';

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

var _TetherBase$Utils = TetherBase.Utils;
var getBounds = _TetherBase$Utils.getBounds;
var extend = _TetherBase$Utils.extend;
var updateClasses = _TetherBase$Utils.updateClasses;
var defer = _TetherBase$Utils.defer;

var BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];

function getBoundingRect(tether, to) {
  if (to === 'scrollParent') {
    to = tether.scrollParents[0];
  } else if (to === 'window') {
    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];
  }

  if (to === document) {
    to = to.documentElement;
  }

  if (typeof to.nodeType !== 'undefined') {
    (function () {
      var node = to;
      var size = getBounds(to);
      var pos = size;
      var style = getComputedStyle(to);

      to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];

      // Account any parent Frames scroll offset
      if (node.ownerDocument !== document) {
        var win = node.ownerDocument.defaultView;
        to[0] += win.pageXOffset;
        to[1] += win.pageYOffset;
        to[2] += win.pageXOffset;
        to[3] += win.pageYOffset;
      }

      BOUNDS_FORMAT.forEach(function (side, i) {
        side = side[0].toUpperCase() + side.substr(1);
        if (side === 'Top' || side === 'Left') {
          to[i] += parseFloat(style['border' + side + 'Width']);
        } else {
          to[i] -= parseFloat(style['border' + side + 'Width']);
        }
      });
    })();
  }

  return to;
}

TetherBase.modules.push({
  position: function position(_ref) {
    var _this = this;

    var top = _ref.top;
    var left = _ref.left;
    var targetAttachment = _ref.targetAttachment;

    if (!this.options.constraints) {
      return true;
    }

    var _cache = this.cache('element-bounds', function () {
      return getBounds(_this.element);
    });

    var height = _cache.height;
    var width = _cache.width;

    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
      var _lastSize = this.lastSize;

      // Handle the item getting hidden as a result of our positioning without glitching
      // the classes in and out
      width = _lastSize.width;
      height = _lastSize.height;
    }

    var targetSize = this.cache('target-bounds', function () {
      return _this.getTargetBounds();
    });

    var targetHeight = targetSize.height;
    var targetWidth = targetSize.width;

    var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];

    this.options.constraints.forEach(function (constraint) {
      var outOfBoundsClass = constraint.outOfBoundsClass;
      var pinnedClass = constraint.pinnedClass;

      if (outOfBoundsClass) {
        allClasses.push(outOfBoundsClass);
      }
      if (pinnedClass) {
        allClasses.push(pinnedClass);
      }
    });

    allClasses.forEach(function (cls) {
      ['left', 'top', 'right', 'bottom'].forEach(function (side) {
        allClasses.push(cls + '-' + side);
      });
    });

    var addClasses = [];

    var tAttachment = extend({}, targetAttachment);
    var eAttachment = extend({}, this.attachment);

    this.options.constraints.forEach(function (constraint) {
      var to = constraint.to;
      var attachment = constraint.attachment;
      var pin = constraint.pin;

      if (typeof attachment === 'undefined') {
        attachment = '';
      }

      var changeAttachX = undefined,
          changeAttachY = undefined;
      if (attachment.indexOf(' ') >= 0) {
        var _attachment$split = attachment.split(' ');

        var _attachment$split2 = _slicedToArray(_attachment$split, 2);

        changeAttachY = _attachment$split2[0];
        changeAttachX = _attachment$split2[1];
      } else {
        changeAttachX = changeAttachY = attachment;
      }

      var bounds = getBoundingRect(_this, to);

      if (changeAttachY === 'target' || changeAttachY === 'both') {
        if (top < bounds[1] && tAttachment.top === 'top') {
          top += targetHeight;
          tAttachment.top = 'bottom';
        }

        if (top + height > bounds[3] && tAttachment.top === 'bottom') {
          top -= targetHeight;
          tAttachment.top = 'top';
        }
      }

      if (changeAttachY === 'together') {
        if (tAttachment.top === 'top') {
          if (eAttachment.top === 'bottom' && top < bounds[1]) {
            top += targetHeight;
            tAttachment.top = 'bottom';

            top += height;
            eAttachment.top = 'top';
          } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {
            top -= height - targetHeight;
            tAttachment.top = 'bottom';

            eAttachment.top = 'bottom';
          }
        }

        if (tAttachment.top === 'bottom') {
          if (eAttachment.top === 'top' && top + height > bounds[3]) {
            top -= targetHeight;
            tAttachment.top = 'top';

            top -= height;
            eAttachment.top = 'bottom';
          } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {
            top += height - targetHeight;
            tAttachment.top = 'top';

            eAttachment.top = 'top';
          }
        }

        if (tAttachment.top === 'middle') {
          if (top + height > bounds[3] && eAttachment.top === 'top') {
            top -= height;
            eAttachment.top = 'bottom';
          } else if (top < bounds[1] && eAttachment.top === 'bottom') {
            top += height;
            eAttachment.top = 'top';
          }
        }
      }

      if (changeAttachX === 'target' || changeAttachX === 'both') {
        if (left < bounds[0] && tAttachment.left === 'left') {
          left += targetWidth;
          tAttachment.left = 'right';
        }

        if (left + width > bounds[2] && tAttachment.left === 'right') {
          left -= targetWidth;
          tAttachment.left = 'left';
        }
      }

      if (changeAttachX === 'together') {
        if (left < bounds[0] && tAttachment.left === 'left') {
          if (eAttachment.left === 'right') {
            left += targetWidth;
            tAttachment.left = 'right';

            left += width;
            eAttachment.left = 'left';
          } else if (eAttachment.left === 'left') {
            left += targetWidth;
            tAttachment.left = 'right';

            left -= width;
            eAttachment.left = 'right';
          }
        } else if (left + width > bounds[2] && tAttachment.left === 'right') {
          if (eAttachment.left === 'left') {
            left -= targetWidth;
            tAttachment.left = 'left';

            left -= width;
            eAttachment.left = 'right';
          } else if (eAttachment.left === 'right') {
            left -= targetWidth;
            tAttachment.left = 'left';

            left += width;
            eAttachment.left = 'left';
          }
        } else if (tAttachment.left === 'center') {
          if (left + width > bounds[2] && eAttachment.left === 'left') {
            left -= width;
            eAttachment.left = 'right';
          } else if (left < bounds[0] && eAttachment.left === 'right') {
            left += width;
            eAttachment.left = 'left';
          }
        }
      }

      if (changeAttachY === 'element' || changeAttachY === 'both') {
        if (top < bounds[1] && eAttachment.top === 'bottom') {
          top += height;
          eAttachment.top = 'top';
        }

        if (top + height > bounds[3] && eAttachment.top === 'top') {
          top -= height;
          eAttachment.top = 'bottom';
        }
      }

      if (changeAttachX === 'element' || changeAttachX === 'both') {
        if (left < bounds[0]) {
          if (eAttachment.left === 'right') {
            left += width;
            eAttachment.left = 'left';
          } else if (eAttachment.left === 'center') {
            left += width / 2;
            eAttachment.left = 'left';
          }
        }

        if (left + width > bounds[2]) {
          if (eAttachment.left === 'left') {
            left -= width;
            eAttachment.left = 'right';
          } else if (eAttachment.left === 'center') {
            left -= width / 2;
            eAttachment.left = 'right';
          }
        }
      }

      if (typeof pin === 'string') {
        pin = pin.split(',').map(function (p) {
          return p.trim();
        });
      } else if (pin === true) {
        pin = ['top', 'left', 'right', 'bottom'];
      }

      pin = pin || [];

      var pinned = [];
      var oob = [];

      if (top < bounds[1]) {
        if (pin.indexOf('top') >= 0) {
          top = bounds[1];
          pinned.push('top');
        } else {
          oob.push('top');
        }
      }

      if (top + height > bounds[3]) {
        if (pin.indexOf('bottom') >= 0) {
          top = bounds[3] - height;
          pinned.push('bottom');
        } else {
          oob.push('bottom');
        }
      }

      if (left < bounds[0]) {
        if (pin.indexOf('left') >= 0) {
          left = bounds[0];
          pinned.push('left');
        } else {
          oob.push('left');
        }
      }

      if (left + width > bounds[2]) {
        if (pin.indexOf('right') >= 0) {
          left = bounds[2] - width;
          pinned.push('right');
        } else {
          oob.push('right');
        }
      }

      if (pinned.length) {
        (function () {
          var pinnedClass = undefined;
          if (typeof _this.options.pinnedClass !== 'undefined') {
            pinnedClass = _this.options.pinnedClass;
          } else {
            pinnedClass = _this.getClass('pinned');
          }

          addClasses.push(pinnedClass);
          pinned.forEach(function (side) {
            addClasses.push(pinnedClass + '-' + side);
          });
        })();
      }

      if (oob.length) {
        (function () {
          var oobClass = undefined;
          if (typeof _this.options.outOfBoundsClass !== 'undefined') {
            oobClass = _this.options.outOfBoundsClass;
          } else {
            oobClass = _this.getClass('out-of-bounds');
          }

          addClasses.push(oobClass);
          oob.forEach(function (side) {
            addClasses.push(oobClass + '-' + side);
          });
        })();
      }

      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {
        eAttachment.left = tAttachment.left = false;
      }
      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {
        eAttachment.top = tAttachment.top = false;
      }

      if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {
        _this.updateAttachClasses(eAttachment, tAttachment);
        _this.trigger('update', {
          attachment: eAttachment,
          targetAttachment: tAttachment
        });
      }
    });

    defer(function () {
      if (!(_this.options.addTargetClasses === false)) {
        updateClasses(_this.target, addClasses, allClasses);
      }
      updateClasses(_this.element, addClasses, allClasses);
    });

    return { top: top, left: left };
  }
});
/* globals TetherBase */

'use strict';

var _TetherBase$Utils = TetherBase.Utils;
var getBounds = _TetherBase$Utils.getBounds;
var updateClasses = _TetherBase$Utils.updateClasses;
var defer = _TetherBase$Utils.defer;

TetherBase.modules.push({
  position: function position(_ref) {
    var _this = this;

    var top = _ref.top;
    var left = _ref.left;

    var _cache = this.cache('element-bounds', function () {
      return getBounds(_this.element);
    });

    var height = _cache.height;
    var width = _cache.width;

    var targetPos = this.getTargetBounds();

    var bottom = top + height;
    var right = left + width;

    var abutted = [];
    if (top <= targetPos.bottom && bottom >= targetPos.top) {
      ['left', 'right'].forEach(function (side) {
        var targetPosSide = targetPos[side];
        if (targetPosSide === left || targetPosSide === right) {
          abutted.push(side);
        }
      });
    }

    if (left <= targetPos.right && right >= targetPos.left) {
      ['top', 'bottom'].forEach(function (side) {
        var targetPosSide = targetPos[side];
        if (targetPosSide === top || targetPosSide === bottom) {
          abutted.push(side);
        }
      });
    }

    var allClasses = [];
    var addClasses = [];

    var sides = ['left', 'top', 'right', 'bottom'];
    allClasses.push(this.getClass('abutted'));
    sides.forEach(function (side) {
      allClasses.push(_this.getClass('abutted') + '-' + side);
    });

    if (abutted.length) {
      addClasses.push(this.getClass('abutted'));
    }

    abutted.forEach(function (side) {
      addClasses.push(_this.getClass('abutted') + '-' + side);
    });

    defer(function () {
      if (!(_this.options.addTargetClasses === false)) {
        updateClasses(_this.target, addClasses, allClasses);
      }
      updateClasses(_this.element, addClasses, allClasses);
    });

    return true;
  }
});
/* globals TetherBase */

'use strict';

var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();

TetherBase.modules.push({
  position: function position(_ref) {
    var top = _ref.top;
    var left = _ref.left;

    if (!this.options.shift) {
      return;
    }

    var shift = this.options.shift;
    if (typeof this.options.shift === 'function') {
      shift = this.options.shift.call(this, { top: top, left: left });
    }

    var shiftTop = undefined,
        shiftLeft = undefined;
    if (typeof shift === 'string') {
      shift = shift.split(' ');
      shift[1] = shift[1] || shift[0];

      var _shift = shift;

      var _shift2 = _slicedToArray(_shift, 2);

      shiftTop = _shift2[0];
      shiftLeft = _shift2[1];

      shiftTop = parseFloat(shiftTop, 10);
      shiftLeft = parseFloat(shiftLeft, 10);
    } else {
      shiftTop = shift.top;
      shiftLeft = shift.left;
    }

    top += shiftTop;
    left += shiftLeft;

    return { top: top, left: left };
  }
});
return Tether;

}));


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(143)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(89),
  /* template */
  __webpack_require__(269),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(164)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(91),
  /* template */
  __webpack_require__(292),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(146)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(92),
  /* template */
  __webpack_require__(272),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(182)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(105),
  /* template */
  __webpack_require__(312),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(126)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(106),
  /* template */
  __webpack_require__(250),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(133)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(109),
  /* template */
  __webpack_require__(258),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(152)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(112),
  /* template */
  __webpack_require__(278),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(179)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(118),
  /* template */
  __webpack_require__(308),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = ({
    inserted(el, { value }) {
        if (value) {
            el.focus();
        }
    }
});


/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["inView"] = inView;
/* harmony export (immutable) */ __webpack_exports__["scrollIntoView"] = scrollIntoView;
/* harmony export (immutable) */ __webpack_exports__["resetScroll"] = resetScroll;
function inView(element, container) {
    if (!element) {
        return;
    }

    container = container || element.parentElement;

    const top = element.offsetTop;
    const parentTop = container.scrollTop;
    const bottom = top + element.offsetHeight;
    const parentBottom = container.offsetHeight;

    return top >= parentTop && bottom <= parentBottom;
}

function scrollIntoView(element, options = { container: null, marginTop: 0 }) {
    if (!element) {
        return;
    }

    options.container = options.container || element.parentElement;

    if (inView(element, options.container)) {
        return;
    }

    options.container.scrollTop = element.offsetTop - options.marginTop;
}

function resetScroll(element) {
    if (!element) {
        return;
    }

    element.scrollTop = 0;
}

/* harmony default export */ __webpack_exports__["default"] = ({
    inView,
    scrollIntoView,
    resetScroll
});


/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/**
 * Fast UUID generator, RFC4122 version 4 compliant.
 * @author Jeff Ward (jcward.com).
 * @license MIT license
 * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
 */

const lut = [];

for (let i = 0; i < 256; i++) {
    lut[i] = (i < 16 ? '0' : '') + (i).toString(16);
}

const generate = function () {
    const d0 = Math.random() * 0xffffffff | 0;
    const d1 = Math.random() * 0xffffffff | 0;
    const d2 = Math.random() * 0xffffffff | 0;
    const d3 = Math.random() * 0xffffffff | 0;

    /* eslint-disable */
    return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' +
        lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' +
        lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] +
        lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];
    /* eslint-enable */
};

const short = function (prefix) {
    prefix = prefix || '';

    const uuid = generate();

    return prefix + uuid.split('-')[0];
};

/* harmony default export */ __webpack_exports__["default"] = ({
    generate,
    short
});


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/* **********************************************
     Begin prism-core.js
********************************************** */

var _self = (typeof window !== 'undefined')
	? window   // if in browser
	: (
		(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)
		? self // if in worker
		: {}   // if in node js
	);

/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 * MIT license http://www.opensource.org/licenses/mit-license.php/
 * @author Lea Verou http://lea.verou.me
 */

var Prism = (function(){

// Private helper vars
var lang = /\blang(?:uage)?-(\w+)\b/i;
var uniqueId = 0;

var _ = _self.Prism = {
	util: {
		encode: function (tokens) {
			if (tokens instanceof Token) {
				return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);
			} else if (_.util.type(tokens) === 'Array') {
				return tokens.map(_.util.encode);
			} else {
				return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ');
			}
		},

		type: function (o) {
			return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];
		},

		objId: function (obj) {
			if (!obj['__id']) {
				Object.defineProperty(obj, '__id', { value: ++uniqueId });
			}
			return obj['__id'];
		},

		// Deep clone a language definition (e.g. to extend it)
		clone: function (o) {
			var type = _.util.type(o);

			switch (type) {
				case 'Object':
					var clone = {};

					for (var key in o) {
						if (o.hasOwnProperty(key)) {
							clone[key] = _.util.clone(o[key]);
						}
					}

					return clone;

				case 'Array':
					// Check for existence for IE8
					return o.map && o.map(function(v) { return _.util.clone(v); });
			}

			return o;
		}
	},

	languages: {
		extend: function (id, redef) {
			var lang = _.util.clone(_.languages[id]);

			for (var key in redef) {
				lang[key] = redef[key];
			}

			return lang;
		},

		/**
		 * Insert a token before another token in a language literal
		 * As this needs to recreate the object (we cannot actually insert before keys in object literals),
		 * we cannot just provide an object, we need anobject and a key.
		 * @param inside The key (or language id) of the parent
		 * @param before The key to insert before. If not provided, the function appends instead.
		 * @param insert Object with the key/value pairs to insert
		 * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.
		 */
		insertBefore: function (inside, before, insert, root) {
			root = root || _.languages;
			var grammar = root[inside];

			if (arguments.length == 2) {
				insert = arguments[1];

				for (var newToken in insert) {
					if (insert.hasOwnProperty(newToken)) {
						grammar[newToken] = insert[newToken];
					}
				}

				return grammar;
			}

			var ret = {};

			for (var token in grammar) {

				if (grammar.hasOwnProperty(token)) {

					if (token == before) {

						for (var newToken in insert) {

							if (insert.hasOwnProperty(newToken)) {
								ret[newToken] = insert[newToken];
							}
						}
					}

					ret[token] = grammar[token];
				}
			}

			// Update references in other language definitions
			_.languages.DFS(_.languages, function(key, value) {
				if (value === root[inside] && key != inside) {
					this[key] = ret;
				}
			});

			return root[inside] = ret;
		},

		// Traverse a language definition with Depth First Search
		DFS: function(o, callback, type, visited) {
			visited = visited || {};
			for (var i in o) {
				if (o.hasOwnProperty(i)) {
					callback.call(o, i, o[i], type || i);

					if (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {
						visited[_.util.objId(o[i])] = true;
						_.languages.DFS(o[i], callback, null, visited);
					}
					else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {
						visited[_.util.objId(o[i])] = true;
						_.languages.DFS(o[i], callback, i, visited);
					}
				}
			}
		}
	},
	plugins: {},

	highlightAll: function(async, callback) {
		var env = {
			callback: callback,
			selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
		};

		_.hooks.run("before-highlightall", env);

		var elements = env.elements || document.querySelectorAll(env.selector);

		for (var i=0, element; element = elements[i++];) {
			_.highlightElement(element, async === true, env.callback);
		}
	},

	highlightElement: function(element, async, callback) {
		// Find language
		var language, grammar, parent = element;

		while (parent && !lang.test(parent.className)) {
			parent = parent.parentNode;
		}

		if (parent) {
			language = (parent.className.match(lang) || [,''])[1].toLowerCase();
			grammar = _.languages[language];
		}

		// Set language on the element, if not present
		element.className = element.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;

		// Set language on the parent, for styling
		parent = element.parentNode;

		if (/pre/i.test(parent.nodeName)) {
			parent.className = parent.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
		}

		var code = element.textContent;

		var env = {
			element: element,
			language: language,
			grammar: grammar,
			code: code
		};

		_.hooks.run('before-sanity-check', env);

		if (!env.code || !env.grammar) {
			if (env.code) {
				env.element.textContent = env.code;
			}
			_.hooks.run('complete', env);
			return;
		}

		_.hooks.run('before-highlight', env);

		if (async && _self.Worker) {
			var worker = new Worker(_.filename);

			worker.onmessage = function(evt) {
				env.highlightedCode = evt.data;

				_.hooks.run('before-insert', env);

				env.element.innerHTML = env.highlightedCode;

				callback && callback.call(env.element);
				_.hooks.run('after-highlight', env);
				_.hooks.run('complete', env);
			};

			worker.postMessage(JSON.stringify({
				language: env.language,
				code: env.code,
				immediateClose: true
			}));
		}
		else {
			env.highlightedCode = _.highlight(env.code, env.grammar, env.language);

			_.hooks.run('before-insert', env);

			env.element.innerHTML = env.highlightedCode;

			callback && callback.call(element);

			_.hooks.run('after-highlight', env);
			_.hooks.run('complete', env);
		}
	},

	highlight: function (text, grammar, language) {
		var tokens = _.tokenize(text, grammar);
		return Token.stringify(_.util.encode(tokens), language);
	},

	tokenize: function(text, grammar, language) {
		var Token = _.Token;

		var strarr = [text];

		var rest = grammar.rest;

		if (rest) {
			for (var token in rest) {
				grammar[token] = rest[token];
			}

			delete grammar.rest;
		}

		tokenloop: for (var token in grammar) {
			if(!grammar.hasOwnProperty(token) || !grammar[token]) {
				continue;
			}

			var patterns = grammar[token];
			patterns = (_.util.type(patterns) === "Array") ? patterns : [patterns];

			for (var j = 0; j < patterns.length; ++j) {
				var pattern = patterns[j],
					inside = pattern.inside,
					lookbehind = !!pattern.lookbehind,
					greedy = !!pattern.greedy,
					lookbehindLength = 0,
					alias = pattern.alias;

				if (greedy && !pattern.pattern.global) {
					// Without the global flag, lastIndex won't work
					var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];
					pattern.pattern = RegExp(pattern.pattern.source, flags + "g");
				}

				pattern = pattern.pattern || pattern;

				// Don’t cache length as it changes during the loop
				for (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {

					var str = strarr[i];

					if (strarr.length > text.length) {
						// Something went terribly wrong, ABORT, ABORT!
						break tokenloop;
					}

					if (str instanceof Token) {
						continue;
					}

					pattern.lastIndex = 0;

					var match = pattern.exec(str),
					    delNum = 1;

					// Greedy patterns can override/remove up to two previously matched tokens
					if (!match && greedy && i != strarr.length - 1) {
						pattern.lastIndex = pos;
						match = pattern.exec(text);
						if (!match) {
							break;
						}

						var from = match.index + (lookbehind ? match[1].length : 0),
						    to = match.index + match[0].length,
						    k = i,
						    p = pos;

						for (var len = strarr.length; k < len && p < to; ++k) {
							p += strarr[k].length;
							// Move the index i to the element in strarr that is closest to from
							if (from >= p) {
								++i;
								pos = p;
							}
						}

						/*
						 * If strarr[i] is a Token, then the match starts inside another Token, which is invalid
						 * If strarr[k - 1] is greedy we are in conflict with another greedy pattern
						 */
						if (strarr[i] instanceof Token || strarr[k - 1].greedy) {
							continue;
						}

						// Number of tokens to delete and replace with the new match
						delNum = k - i;
						str = text.slice(pos, p);
						match.index -= pos;
					}

					if (!match) {
						continue;
					}

					if(lookbehind) {
						lookbehindLength = match[1].length;
					}

					var from = match.index + lookbehindLength,
					    match = match[0].slice(lookbehindLength),
					    to = from + match.length,
					    before = str.slice(0, from),
					    after = str.slice(to);

					var args = [i, delNum];

					if (before) {
						args.push(before);
					}

					var wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);

					args.push(wrapped);

					if (after) {
						args.push(after);
					}

					Array.prototype.splice.apply(strarr, args);
				}
			}
		}

		return strarr;
	},

	hooks: {
		all: {},

		add: function (name, callback) {
			var hooks = _.hooks.all;

			hooks[name] = hooks[name] || [];

			hooks[name].push(callback);
		},

		run: function (name, env) {
			var callbacks = _.hooks.all[name];

			if (!callbacks || !callbacks.length) {
				return;
			}

			for (var i=0, callback; callback = callbacks[i++];) {
				callback(env);
			}
		}
	}
};

var Token = _.Token = function(type, content, alias, matchedStr, greedy) {
	this.type = type;
	this.content = content;
	this.alias = alias;
	// Copy of the full string this token was created from
	this.length = (matchedStr || "").length|0;
	this.greedy = !!greedy;
};

Token.stringify = function(o, language, parent) {
	if (typeof o == 'string') {
		return o;
	}

	if (_.util.type(o) === 'Array') {
		return o.map(function(element) {
			return Token.stringify(element, language, o);
		}).join('');
	}

	var env = {
		type: o.type,
		content: Token.stringify(o.content, language, parent),
		tag: 'span',
		classes: ['token', o.type],
		attributes: {},
		language: language,
		parent: parent
	};

	if (env.type == 'comment') {
		env.attributes['spellcheck'] = 'true';
	}

	if (o.alias) {
		var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];
		Array.prototype.push.apply(env.classes, aliases);
	}

	_.hooks.run('wrap', env);

	var attributes = Object.keys(env.attributes).map(function(name) {
		return name + '="' + (env.attributes[name] || '').replace(/"/g, '&quot;') + '"';
	}).join(' ');

	return '<' + env.tag + ' class="' + env.classes.join(' ') + '"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';

};

if (!_self.document) {
	if (!_self.addEventListener) {
		// in Node.js
		return _self.Prism;
	}
 	// In worker
	_self.addEventListener('message', function(evt) {
		var message = JSON.parse(evt.data),
		    lang = message.language,
		    code = message.code,
		    immediateClose = message.immediateClose;

		_self.postMessage(_.highlight(code, _.languages[lang], lang));
		if (immediateClose) {
			_self.close();
		}
	}, false);

	return _self.Prism;
}

//Get current script and highlight
var script = document.currentScript || [].slice.call(document.getElementsByTagName("script")).pop();

if (script) {
	_.filename = script.src;

	if (document.addEventListener && !script.hasAttribute('data-manual')) {
		if(document.readyState !== "loading") {
			if (window.requestAnimationFrame) {
				window.requestAnimationFrame(_.highlightAll);
			} else {
				window.setTimeout(_.highlightAll, 16);
			}
		}
		else {
			document.addEventListener('DOMContentLoaded', _.highlightAll);
		}
	}
}

return _self.Prism;

})();

if (typeof module !== 'undefined' && module.exports) {
	module.exports = Prism;
}

// hack for components to work correctly in node.js
if (typeof global !== 'undefined') {
	global.Prism = Prism;
}


/* **********************************************
     Begin prism-markup.js
********************************************** */

Prism.languages.markup = {
	'comment': /<!--[\w\W]*?-->/,
	'prolog': /<\?[\w\W]+?\?>/,
	'doctype': /<!DOCTYPE[\w\W]+?>/i,
	'cdata': /<!\[CDATA\[[\w\W]*?]]>/i,
	'tag': {
		pattern: /<\/?(?!\d)[^\s>\/=$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\w\W])*\1|[^\s'">=]+))?)*\s*\/?>/i,
		inside: {
			'tag': {
				pattern: /^<\/?[^\s>\/]+/i,
				inside: {
					'punctuation': /^<\/?/,
					'namespace': /^[^\s>\/:]+:/
				}
			},
			'attr-value': {
				pattern: /=(?:('|")[\w\W]*?(\1)|[^\s>]+)/i,
				inside: {
					'punctuation': /[=>"']/
				}
			},
			'punctuation': /\/?>/,
			'attr-name': {
				pattern: /[^\s>\/]+/,
				inside: {
					'namespace': /^[^\s>\/:]+:/
				}
			}

		}
	},
	'entity': /&#?[\da-z]{1,8};/i
};

// Plugin to make entity title show the real entity, idea by Roman Komarov
Prism.hooks.add('wrap', function(env) {

	if (env.type === 'entity') {
		env.attributes['title'] = env.content.replace(/&amp;/, '&');
	}
});

Prism.languages.xml = Prism.languages.markup;
Prism.languages.html = Prism.languages.markup;
Prism.languages.mathml = Prism.languages.markup;
Prism.languages.svg = Prism.languages.markup;


/* **********************************************
     Begin prism-css.js
********************************************** */

Prism.languages.css = {
	'comment': /\/\*[\w\W]*?\*\//,
	'atrule': {
		pattern: /@[\w-]+?.*?(;|(?=\s*\{))/i,
		inside: {
			'rule': /@[\w-]+/
			// See rest below
		}
	},
	'url': /url\((?:(["'])(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,
	'selector': /[^\{\}\s][^\{\};]*?(?=\s*\{)/,
	'string': {
		pattern: /("|')(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1/,
		greedy: true
	},
	'property': /(\b|\B)[\w-]+(?=\s*:)/i,
	'important': /\B!important\b/i,
	'function': /[-a-z0-9]+(?=\()/i,
	'punctuation': /[(){};:]/
};

Prism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);

if (Prism.languages.markup) {
	Prism.languages.insertBefore('markup', 'tag', {
		'style': {
			pattern: /(<style[\w\W]*?>)[\w\W]*?(?=<\/style>)/i,
			lookbehind: true,
			inside: Prism.languages.css,
			alias: 'language-css'
		}
	});
	
	Prism.languages.insertBefore('inside', 'attr-value', {
		'style-attr': {
			pattern: /\s*style=("|').*?\1/i,
			inside: {
				'attr-name': {
					pattern: /^\s*style/i,
					inside: Prism.languages.markup.tag.inside
				},
				'punctuation': /^\s*=\s*['"]|['"]\s*$/,
				'attr-value': {
					pattern: /.+/i,
					inside: Prism.languages.css
				}
			},
			alias: 'language-css'
		}
	}, Prism.languages.markup.tag);
}

/* **********************************************
     Begin prism-clike.js
********************************************** */

Prism.languages.clike = {
	'comment': [
		{
			pattern: /(^|[^\\])\/\*[\w\W]*?\*\//,
			lookbehind: true
		},
		{
			pattern: /(^|[^\\:])\/\/.*/,
			lookbehind: true
		}
	],
	'string': {
		pattern: /(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
		greedy: true
	},
	'class-name': {
		pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,
		lookbehind: true,
		inside: {
			punctuation: /(\.|\\)/
		}
	},
	'keyword': /\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
	'boolean': /\b(true|false)\b/,
	'function': /[a-z0-9_]+(?=\()/i,
	'number': /\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,
	'operator': /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
	'punctuation': /[{}[\];(),.:]/
};


/* **********************************************
     Begin prism-javascript.js
********************************************** */

Prism.languages.javascript = Prism.languages.extend('clike', {
	'keyword': /\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,
	'number': /\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,
	// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
	'function': /[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i,
	'operator': /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*\*?|\/|~|\^|%|\.{3}/
});

Prism.languages.insertBefore('javascript', 'keyword', {
	'regex': {
		pattern: /(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,
		lookbehind: true,
		greedy: true
	}
});

Prism.languages.insertBefore('javascript', 'string', {
	'template-string': {
		pattern: /`(?:\\\\|\\?[^\\])*?`/,
		greedy: true,
		inside: {
			'interpolation': {
				pattern: /\$\{[^}]+\}/,
				inside: {
					'interpolation-punctuation': {
						pattern: /^\$\{|\}$/,
						alias: 'punctuation'
					},
					rest: Prism.languages.javascript
				}
			},
			'string': /[\s\S]+/
		}
	}
});

if (Prism.languages.markup) {
	Prism.languages.insertBefore('markup', 'tag', {
		'script': {
			pattern: /(<script[\w\W]*?>)[\w\W]*?(?=<\/script>)/i,
			lookbehind: true,
			inside: Prism.languages.javascript,
			alias: 'language-javascript'
		}
	});
}

Prism.languages.js = Prism.languages.javascript;

/* **********************************************
     Begin prism-file-highlight.js
********************************************** */

(function () {
	if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {
		return;
	}

	self.Prism.fileHighlight = function() {

		var Extensions = {
			'js': 'javascript',
			'py': 'python',
			'rb': 'ruby',
			'ps1': 'powershell',
			'psm1': 'powershell',
			'sh': 'bash',
			'bat': 'batch',
			'h': 'c',
			'tex': 'latex'
		};

		if(Array.prototype.forEach) { // Check to prevent error in IE8
			Array.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {
				var src = pre.getAttribute('data-src');

				var language, parent = pre;
				var lang = /\blang(?:uage)?-(?!\*)(\w+)\b/i;
				while (parent && !lang.test(parent.className)) {
					parent = parent.parentNode;
				}

				if (parent) {
					language = (pre.className.match(lang) || [, ''])[1];
				}

				if (!language) {
					var extension = (src.match(/\.(\w+)$/) || [, ''])[1];
					language = Extensions[extension] || extension;
				}

				var code = document.createElement('code');
				code.className = 'language-' + language;

				pre.textContent = '';

				code.textContent = 'Loading…';

				pre.appendChild(code);

				var xhr = new XMLHttpRequest();

				xhr.open('GET', src, true);

				xhr.onreadystatechange = function () {
					if (xhr.readyState == 4) {

						if (xhr.status < 400 && xhr.responseText) {
							code.textContent = xhr.responseText;

							Prism.highlightElement(code);
						}
						else if (xhr.status >= 400) {
							code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;
						}
						else {
							code.textContent = '✖ Error: File does not exist or is empty';
						}
					}
				};

				xhr.send(null);
			});
		}

	};

	document.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);

})();

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)))

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(132)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(46),
  /* template */
  __webpack_require__(256),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
  * vue-router v2.7.0
  * (c) 2017 Evan You
  * @license MIT
  */
/*  */

function assert (condition, message) {
  if (!condition) {
    throw new Error(("[vue-router] " + message))
  }
}

function warn (condition, message) {
  if (false) {
    typeof console !== 'undefined' && console.warn(("[vue-router] " + message));
  }
}

function isError (err) {
  return Object.prototype.toString.call(err).indexOf('Error') > -1
}

var View = {
  name: 'router-view',
  functional: true,
  props: {
    name: {
      type: String,
      default: 'default'
    }
  },
  render: function render (_, ref) {
    var props = ref.props;
    var children = ref.children;
    var parent = ref.parent;
    var data = ref.data;

    data.routerView = true;

    // directly use parent context's createElement() function
    // so that components rendered by router-view can resolve named slots
    var h = parent.$createElement;
    var name = props.name;
    var route = parent.$route;
    var cache = parent._routerViewCache || (parent._routerViewCache = {});

    // determine current view depth, also check to see if the tree
    // has been toggled inactive but kept-alive.
    var depth = 0;
    var inactive = false;
    while (parent && parent._routerRoot !== parent) {
      if (parent.$vnode && parent.$vnode.data.routerView) {
        depth++;
      }
      if (parent._inactive) {
        inactive = true;
      }
      parent = parent.$parent;
    }
    data.routerViewDepth = depth;

    // render previous view if the tree is inactive and kept-alive
    if (inactive) {
      return h(cache[name], data, children)
    }

    var matched = route.matched[depth];
    // render empty node if no matched route
    if (!matched) {
      cache[name] = null;
      return h()
    }

    var component = cache[name] = matched.components[name];

    // attach instance registration hook
    // this will be called in the instance's injected lifecycle hooks
    data.registerRouteInstance = function (vm, val) {
      // val could be undefined for unregistration
      var current = matched.instances[name];
      if (
        (val && current !== vm) ||
        (!val && current === vm)
      ) {
        matched.instances[name] = val;
      }
    }

    // also regiseter instance in prepatch hook
    // in case the same component instance is reused across different routes
    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
      matched.instances[name] = vnode.componentInstance;
    };

    // resolve props
    data.props = resolveProps(route, matched.props && matched.props[name]);

    return h(component, data, children)
  }
};

function resolveProps (route, config) {
  switch (typeof config) {
    case 'undefined':
      return
    case 'object':
      return config
    case 'function':
      return config(route)
    case 'boolean':
      return config ? route.params : undefined
    default:
      if (false) {
        warn(
          false,
          "props in \"" + (route.path) + "\" is a " + (typeof config) + ", " +
          "expecting an object, function or boolean."
        );
      }
  }
}

/*  */

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function (str) { return encodeURIComponent(str)
  .replace(encodeReserveRE, encodeReserveReplacer)
  .replace(commaRE, ','); };

var decode = decodeURIComponent;

function resolveQuery (
  query,
  extraQuery,
  _parseQuery
) {
  if ( extraQuery === void 0 ) extraQuery = {};

  var parse = _parseQuery || parseQuery;
  var parsedQuery;
  try {
    parsedQuery = parse(query || '');
  } catch (e) {
    "production" !== 'production' && warn(false, e.message);
    parsedQuery = {};
  }
  for (var key in extraQuery) {
    var val = extraQuery[key];
    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;
  }
  return parsedQuery
}

function parseQuery (query) {
  var res = {};

  query = query.trim().replace(/^(\?|#|&)/, '');

  if (!query) {
    return res
  }

  query.split('&').forEach(function (param) {
    var parts = param.replace(/\+/g, ' ').split('=');
    var key = decode(parts.shift());
    var val = parts.length > 0
      ? decode(parts.join('='))
      : null;

    if (res[key] === undefined) {
      res[key] = val;
    } else if (Array.isArray(res[key])) {
      res[key].push(val);
    } else {
      res[key] = [res[key], val];
    }
  });

  return res
}

function stringifyQuery (obj) {
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return ''
    }

    if (val === null) {
      return encode(key)
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return
        }
        if (val2 === null) {
          result.push(encode(key));
        } else {
          result.push(encode(key) + '=' + encode(val2));
        }
      });
      return result.join('&')
    }

    return encode(key) + '=' + encode(val)
  }).filter(function (x) { return x.length > 0; }).join('&') : null;
  return res ? ("?" + res) : ''
}

/*  */


var trailingSlashRE = /\/?$/;

function createRoute (
  record,
  location,
  redirectedFrom,
  router
) {
  var stringifyQuery$$1 = router && router.options.stringifyQuery;
  var route = {
    name: location.name || (record && record.name),
    meta: (record && record.meta) || {},
    path: location.path || '/',
    hash: location.hash || '',
    query: location.query || {},
    params: location.params || {},
    fullPath: getFullPath(location, stringifyQuery$$1),
    matched: record ? formatMatch(record) : []
  };
  if (redirectedFrom) {
    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);
  }
  return Object.freeze(route)
}

// the starting route that represents the initial state
var START = createRoute(null, {
  path: '/'
});

function formatMatch (record) {
  var res = [];
  while (record) {
    res.unshift(record);
    record = record.parent;
  }
  return res
}

function getFullPath (
  ref,
  _stringifyQuery
) {
  var path = ref.path;
  var query = ref.query; if ( query === void 0 ) query = {};
  var hash = ref.hash; if ( hash === void 0 ) hash = '';

  var stringify = _stringifyQuery || stringifyQuery;
  return (path || '/') + stringify(query) + hash
}

function isSameRoute (a, b) {
  if (b === START) {
    return a === b
  } else if (!b) {
    return false
  } else if (a.path && b.path) {
    return (
      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query)
    )
  } else if (a.name && b.name) {
    return (
      a.name === b.name &&
      a.hash === b.hash &&
      isObjectEqual(a.query, b.query) &&
      isObjectEqual(a.params, b.params)
    )
  } else {
    return false
  }
}

function isObjectEqual (a, b) {
  if ( a === void 0 ) a = {};
  if ( b === void 0 ) b = {};

  var aKeys = Object.keys(a);
  var bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length) {
    return false
  }
  return aKeys.every(function (key) {
    var aVal = a[key];
    var bVal = b[key];
    // check nested equality
    if (typeof aVal === 'object' && typeof bVal === 'object') {
      return isObjectEqual(aVal, bVal)
    }
    return String(aVal) === String(bVal)
  })
}

function isIncludedRoute (current, target) {
  return (
    current.path.replace(trailingSlashRE, '/').indexOf(
      target.path.replace(trailingSlashRE, '/')
    ) === 0 &&
    (!target.hash || current.hash === target.hash) &&
    queryIncludes(current.query, target.query)
  )
}

function queryIncludes (current, target) {
  for (var key in target) {
    if (!(key in current)) {
      return false
    }
  }
  return true
}

/*  */

// work around weird flow bug
var toTypes = [String, Object];
var eventTypes = [String, Array];

var Link = {
  name: 'router-link',
  props: {
    to: {
      type: toTypes,
      required: true
    },
    tag: {
      type: String,
      default: 'a'
    },
    exact: Boolean,
    append: Boolean,
    replace: Boolean,
    activeClass: String,
    exactActiveClass: String,
    event: {
      type: eventTypes,
      default: 'click'
    }
  },
  render: function render (h) {
    var this$1 = this;

    var router = this.$router;
    var current = this.$route;
    var ref = router.resolve(this.to, current, this.append);
    var location = ref.location;
    var route = ref.route;
    var href = ref.href;

    var classes = {};
    var globalActiveClass = router.options.linkActiveClass;
    var globalExactActiveClass = router.options.linkExactActiveClass;
    // Support global empty active class
    var activeClassFallback = globalActiveClass == null
            ? 'router-link-active'
            : globalActiveClass;
    var exactActiveClassFallback = globalExactActiveClass == null
            ? 'router-link-exact-active'
            : globalExactActiveClass;
    var activeClass = this.activeClass == null
            ? activeClassFallback
            : this.activeClass;
    var exactActiveClass = this.exactActiveClass == null
            ? exactActiveClassFallback
            : this.exactActiveClass;
    var compareTarget = location.path
      ? createRoute(null, location, null, router)
      : route;

    classes[exactActiveClass] = isSameRoute(current, compareTarget);
    classes[activeClass] = this.exact
      ? classes[exactActiveClass]
      : isIncludedRoute(current, compareTarget);

    var handler = function (e) {
      if (guardEvent(e)) {
        if (this$1.replace) {
          router.replace(location);
        } else {
          router.push(location);
        }
      }
    };

    var on = { click: guardEvent };
    if (Array.isArray(this.event)) {
      this.event.forEach(function (e) { on[e] = handler; });
    } else {
      on[this.event] = handler;
    }

    var data = {
      class: classes
    };

    if (this.tag === 'a') {
      data.on = on;
      data.attrs = { href: href };
    } else {
      // find the first <a> child and apply listener and href
      var a = findAnchor(this.$slots.default);
      if (a) {
        // in case the <a> is a static node
        a.isStatic = false;
        var extend = _Vue.util.extend;
        var aData = a.data = extend({}, a.data);
        aData.on = on;
        var aAttrs = a.data.attrs = extend({}, a.data.attrs);
        aAttrs.href = href;
      } else {
        // doesn't have <a> child, apply listener to self
        data.on = on;
      }
    }

    return h(this.tag, data, this.$slots.default)
  }
};

function guardEvent (e) {
  // don't redirect with control keys
  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }
  // don't redirect when preventDefault called
  if (e.defaultPrevented) { return }
  // don't redirect on right click
  if (e.button !== undefined && e.button !== 0) { return }
  // don't redirect if `target="_blank"`
  if (e.currentTarget && e.currentTarget.getAttribute) {
    var target = e.currentTarget.getAttribute('target');
    if (/\b_blank\b/i.test(target)) { return }
  }
  // this may be a Weex event which doesn't have this method
  if (e.preventDefault) {
    e.preventDefault();
  }
  return true
}

function findAnchor (children) {
  if (children) {
    var child;
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      if (child.tag === 'a') {
        return child
      }
      if (child.children && (child = findAnchor(child.children))) {
        return child
      }
    }
  }
}

var _Vue;

function install (Vue) {
  if (install.installed) { return }
  install.installed = true;

  _Vue = Vue;

  var isDef = function (v) { return v !== undefined; };

  var registerInstance = function (vm, callVal) {
    var i = vm.$options._parentVnode;
    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
      i(vm, callVal);
    }
  };

  Vue.mixin({
    beforeCreate: function beforeCreate () {
      if (isDef(this.$options.router)) {
        this._routerRoot = this;
        this._router = this.$options.router;
        this._router.init(this);
        Vue.util.defineReactive(this, '_route', this._router.history.current);
      } else {
        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;
      }
      registerInstance(this, this);
    },
    destroyed: function destroyed () {
      registerInstance(this);
    }
  });

  Object.defineProperty(Vue.prototype, '$router', {
    get: function get () { return this._routerRoot._router }
  });

  Object.defineProperty(Vue.prototype, '$route', {
    get: function get () { return this._routerRoot._route }
  });

  Vue.component('router-view', View);
  Vue.component('router-link', Link);

  var strats = Vue.config.optionMergeStrategies;
  // use the same hook merging strategy for route hooks
  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
}

/*  */

var inBrowser = typeof window !== 'undefined';

/*  */

function resolvePath (
  relative,
  base,
  append
) {
  var firstChar = relative.charAt(0);
  if (firstChar === '/') {
    return relative
  }

  if (firstChar === '?' || firstChar === '#') {
    return base + relative
  }

  var stack = base.split('/');

  // remove trailing segment if:
  // - not appending
  // - appending to trailing slash (last segment is empty)
  if (!append || !stack[stack.length - 1]) {
    stack.pop();
  }

  // resolve relative path
  var segments = relative.replace(/^\//, '').split('/');
  for (var i = 0; i < segments.length; i++) {
    var segment = segments[i];
    if (segment === '..') {
      stack.pop();
    } else if (segment !== '.') {
      stack.push(segment);
    }
  }

  // ensure leading slash
  if (stack[0] !== '') {
    stack.unshift('');
  }

  return stack.join('/')
}

function parsePath (path) {
  var hash = '';
  var query = '';

  var hashIndex = path.indexOf('#');
  if (hashIndex >= 0) {
    hash = path.slice(hashIndex);
    path = path.slice(0, hashIndex);
  }

  var queryIndex = path.indexOf('?');
  if (queryIndex >= 0) {
    query = path.slice(queryIndex + 1);
    path = path.slice(0, queryIndex);
  }

  return {
    path: path,
    query: query,
    hash: hash
  }
}

function cleanPath (path) {
  return path.replace(/\/\//g, '/')
}

var index$1 = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

/**
 * Expose `pathToRegexp`.
 */
var index = pathToRegexp;
var parse_1 = parse;
var compile_1 = compile;
var tokensToFunction_1 = tokensToFunction;
var tokensToRegExp_1 = tokensToRegExp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
].join('|'), 'g');

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */
function parse (str, options) {
  var tokens = [];
  var key = 0;
  var index = 0;
  var path = '';
  var defaultDelimiter = options && options.delimiter || '/';
  var res;

  while ((res = PATH_REGEXP.exec(str)) != null) {
    var m = res[0];
    var escaped = res[1];
    var offset = res.index;
    path += str.slice(index, offset);
    index = offset + m.length;

    // Ignore already escaped sequences.
    if (escaped) {
      path += escaped[1];
      continue
    }

    var next = str[index];
    var prefix = res[2];
    var name = res[3];
    var capture = res[4];
    var group = res[5];
    var modifier = res[6];
    var asterisk = res[7];

    // Push the current path onto the tokens.
    if (path) {
      tokens.push(path);
      path = '';
    }

    var partial = prefix != null && next != null && next !== prefix;
    var repeat = modifier === '+' || modifier === '*';
    var optional = modifier === '?' || modifier === '*';
    var delimiter = res[2] || defaultDelimiter;
    var pattern = capture || group;

    tokens.push({
      name: name || key++,
      prefix: prefix || '',
      delimiter: delimiter,
      optional: optional,
      repeat: repeat,
      partial: partial,
      asterisk: !!asterisk,
      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
    });
  }

  // Match any characters still remaining.
  if (index < str.length) {
    path += str.substr(index);
  }

  // If the path exists, push it onto the end.
  if (path) {
    tokens.push(path);
  }

  return tokens
}

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */
function compile (str, options) {
  return tokensToFunction(parse(str, options))
}

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */
function encodeURIComponentPretty (str) {
  return encodeURI(str).replace(/[\/?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */
function encodeAsterisk (str) {
  return encodeURI(str).replace(/[?#]/g, function (c) {
    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
  })
}

/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction (tokens) {
  // Compile all the tokens into regexps.
  var matches = new Array(tokens.length);

  // Compile all the patterns before compilation.
  for (var i = 0; i < tokens.length; i++) {
    if (typeof tokens[i] === 'object') {
      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
    }
  }

  return function (obj, opts) {
    var path = '';
    var data = obj || {};
    var options = opts || {};
    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];

      if (typeof token === 'string') {
        path += token;

        continue
      }

      var value = data[token.name];
      var segment;

      if (value == null) {
        if (token.optional) {
          // Prepend partial segment prefixes.
          if (token.partial) {
            path += token.prefix;
          }

          continue
        } else {
          throw new TypeError('Expected "' + token.name + '" to be defined')
        }
      }

      if (index$1(value)) {
        if (!token.repeat) {
          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
        }

        if (value.length === 0) {
          if (token.optional) {
            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to not be empty')
          }
        }

        for (var j = 0; j < value.length; j++) {
          segment = encode(value[j]);

          if (!matches[i].test(segment)) {
            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
          }

          path += (j === 0 ? token.prefix : token.delimiter) + segment;
        }

        continue
      }

      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

      if (!matches[i].test(segment)) {
        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
      }

      path += token.prefix + segment;
    }

    return path
  }
}

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */
function escapeString (str) {
  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
}

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1')
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */
function flags (options) {
  return options.sensitive ? '' : 'i'
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name: i,
        prefix: null,
        delimiter: null,
        optional: false,
        repeat: false,
        partial: false,
        asterisk: false,
        pattern: null
      });
    }
  }

  return attachKeys(path, keys)
}

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

  return attachKeys(regexp, keys)
}

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */
function stringToRegexp (path, keys, options) {
  return tokensToRegExp(parse(path, options), keys, options)
}

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */
function tokensToRegExp (tokens, keys, options) {
  if (!index$1(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  var strict = options.strict;
  var end = options.end !== false;
  var route = '';

  // Iterate over the tokens and create our regexp string.
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];

    if (typeof token === 'string') {
      route += escapeString(token);
    } else {
      var prefix = escapeString(token.prefix);
      var capture = '(?:' + token.pattern + ')';

      keys.push(token);

      if (token.repeat) {
        capture += '(?:' + prefix + capture + ')*';
      }

      if (token.optional) {
        if (!token.partial) {
          capture = '(?:' + prefix + '(' + capture + '))?';
        } else {
          capture = prefix + '(' + capture + ')?';
        }
      } else {
        capture = prefix + '(' + capture + ')';
      }

      route += capture;
    }
  }

  var delimiter = escapeString(options.delimiter || '/');
  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys)
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */
function pathToRegexp (path, keys, options) {
  if (!index$1(keys)) {
    options = /** @type {!Object} */ (keys || options);
    keys = [];
  }

  options = options || {};

  if (path instanceof RegExp) {
    return regexpToRegexp(path, /** @type {!Array} */ (keys))
  }

  if (index$1(path)) {
    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
  }

  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
}

index.parse = parse_1;
index.compile = compile_1;
index.tokensToFunction = tokensToFunction_1;
index.tokensToRegExp = tokensToRegExp_1;

/*  */

var regexpCompileCache = Object.create(null);

function fillParams (
  path,
  params,
  routeMsg
) {
  try {
    var filler =
      regexpCompileCache[path] ||
      (regexpCompileCache[path] = index.compile(path));
    return filler(params || {}, { pretty: true })
  } catch (e) {
    if (false) {
      warn(false, ("missing param for " + routeMsg + ": " + (e.message)));
    }
    return ''
  }
}

/*  */

function createRouteMap (
  routes,
  oldPathList,
  oldPathMap,
  oldNameMap
) {
  // the path list is used to control path matching priority
  var pathList = oldPathList || [];
  var pathMap = oldPathMap || Object.create(null);
  var nameMap = oldNameMap || Object.create(null);

  routes.forEach(function (route) {
    addRouteRecord(pathList, pathMap, nameMap, route);
  });

  // ensure wildcard routes are always at the end
  for (var i = 0, l = pathList.length; i < l; i++) {
    if (pathList[i] === '*') {
      pathList.push(pathList.splice(i, 1)[0]);
      l--;
      i--;
    }
  }

  return {
    pathList: pathList,
    pathMap: pathMap,
    nameMap: nameMap
  }
}

function addRouteRecord (
  pathList,
  pathMap,
  nameMap,
  route,
  parent,
  matchAs
) {
  var path = route.path;
  var name = route.name;
  if (false) {
    assert(path != null, "\"path\" is required in a route configuration.");
    assert(
      typeof route.component !== 'string',
      "route config \"component\" for path: " + (String(path || name)) + " cannot be a " +
      "string id. Use an actual component instead."
    );
  }

  var normalizedPath = normalizePath(path, parent);
  var pathToRegexpOptions = route.pathToRegexpOptions || {};

  if (typeof route.caseSensitive === 'boolean') {
    pathToRegexpOptions.sensitive = route.caseSensitive;
  }

  var record = {
    path: normalizedPath,
    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
    components: route.components || { default: route.component },
    instances: {},
    name: name,
    parent: parent,
    matchAs: matchAs,
    redirect: route.redirect,
    beforeEnter: route.beforeEnter,
    meta: route.meta || {},
    props: route.props == null
      ? {}
      : route.components
        ? route.props
        : { default: route.props }
  };

  if (route.children) {
    // Warn if route is named, does not redirect and has a default child route.
    // If users navigate to this route by name, the default child will
    // not be rendered (GH Issue #629)
    if (false) {
      if (route.name && !route.redirect && route.children.some(function (child) { return /^\/?$/.test(child.path); })) {
        warn(
          false,
          "Named Route '" + (route.name) + "' has a default child route. " +
          "When navigating to this named route (:to=\"{name: '" + (route.name) + "'\"), " +
          "the default child route will not be rendered. Remove the name from " +
          "this route and use the name of the default child route for named " +
          "links instead."
        );
      }
    }
    route.children.forEach(function (child) {
      var childMatchAs = matchAs
        ? cleanPath((matchAs + "/" + (child.path)))
        : undefined;
      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
    });
  }

  if (route.alias !== undefined) {
    var aliases = Array.isArray(route.alias)
      ? route.alias
      : [route.alias];

    aliases.forEach(function (alias) {
      var aliasRoute = {
        path: alias,
        children: route.children
      };
      addRouteRecord(
        pathList,
        pathMap,
        nameMap,
        aliasRoute,
        parent,
        record.path || '/' // matchAs
      );
    });
  }

  if (!pathMap[record.path]) {
    pathList.push(record.path);
    pathMap[record.path] = record;
  }

  if (name) {
    if (!nameMap[name]) {
      nameMap[name] = record;
    } else if (false) {
      warn(
        false,
        "Duplicate named routes definition: " +
        "{ name: \"" + name + "\", path: \"" + (record.path) + "\" }"
      );
    }
  }
}

function compileRouteRegex (path, pathToRegexpOptions) {
  var regex = index(path, [], pathToRegexpOptions);
  if (false) {
    var keys = {};
    regex.keys.forEach(function (key) {
      warn(!keys[key.name], ("Duplicate param keys in route with path: \"" + path + "\""));
      keys[key.name] = true;
    });
  }
  return regex
}

function normalizePath (path, parent) {
  path = path.replace(/\/$/, '');
  if (path[0] === '/') { return path }
  if (parent == null) { return path }
  return cleanPath(((parent.path) + "/" + path))
}

/*  */


function normalizeLocation (
  raw,
  current,
  append,
  router
) {
  var next = typeof raw === 'string' ? { path: raw } : raw;
  // named target
  if (next.name || next._normalized) {
    return next
  }

  // relative params
  if (!next.path && next.params && current) {
    next = assign({}, next);
    next._normalized = true;
    var params = assign(assign({}, current.params), next.params);
    if (current.name) {
      next.name = current.name;
      next.params = params;
    } else if (current.matched.length) {
      var rawPath = current.matched[current.matched.length - 1].path;
      next.path = fillParams(rawPath, params, ("path " + (current.path)));
    } else if (false) {
      warn(false, "relative params navigation requires a current route.");
    }
    return next
  }

  var parsedPath = parsePath(next.path || '');
  var basePath = (current && current.path) || '/';
  var path = parsedPath.path
    ? resolvePath(parsedPath.path, basePath, append || next.append)
    : basePath;

  var query = resolveQuery(
    parsedPath.query,
    next.query,
    router && router.options.parseQuery
  );

  var hash = next.hash || parsedPath.hash;
  if (hash && hash.charAt(0) !== '#') {
    hash = "#" + hash;
  }

  return {
    _normalized: true,
    path: path,
    query: query,
    hash: hash
  }
}

function assign (a, b) {
  for (var key in b) {
    a[key] = b[key];
  }
  return a
}

/*  */


function createMatcher (
  routes,
  router
) {
  var ref = createRouteMap(routes);
  var pathList = ref.pathList;
  var pathMap = ref.pathMap;
  var nameMap = ref.nameMap;

  function addRoutes (routes) {
    createRouteMap(routes, pathList, pathMap, nameMap);
  }

  function match (
    raw,
    currentRoute,
    redirectedFrom
  ) {
    var location = normalizeLocation(raw, currentRoute, false, router);
    var name = location.name;

    if (name) {
      var record = nameMap[name];
      if (false) {
        warn(record, ("Route with name '" + name + "' does not exist"));
      }
      if (!record) { return _createRoute(null, location) }
      var paramNames = record.regex.keys
        .filter(function (key) { return !key.optional; })
        .map(function (key) { return key.name; });

      if (typeof location.params !== 'object') {
        location.params = {};
      }

      if (currentRoute && typeof currentRoute.params === 'object') {
        for (var key in currentRoute.params) {
          if (!(key in location.params) && paramNames.indexOf(key) > -1) {
            location.params[key] = currentRoute.params[key];
          }
        }
      }

      if (record) {
        location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
        return _createRoute(record, location, redirectedFrom)
      }
    } else if (location.path) {
      location.params = {};
      for (var i = 0; i < pathList.length; i++) {
        var path = pathList[i];
        var record$1 = pathMap[path];
        if (matchRoute(record$1.regex, location.path, location.params)) {
          return _createRoute(record$1, location, redirectedFrom)
        }
      }
    }
    // no match
    return _createRoute(null, location)
  }

  function redirect (
    record,
    location
  ) {
    var originalRedirect = record.redirect;
    var redirect = typeof originalRedirect === 'function'
        ? originalRedirect(createRoute(record, location, null, router))
        : originalRedirect;

    if (typeof redirect === 'string') {
      redirect = { path: redirect };
    }

    if (!redirect || typeof redirect !== 'object') {
      if (false) {
        warn(
          false, ("invalid redirect option: " + (JSON.stringify(redirect)))
        );
      }
      return _createRoute(null, location)
    }

    var re = redirect;
    var name = re.name;
    var path = re.path;
    var query = location.query;
    var hash = location.hash;
    var params = location.params;
    query = re.hasOwnProperty('query') ? re.query : query;
    hash = re.hasOwnProperty('hash') ? re.hash : hash;
    params = re.hasOwnProperty('params') ? re.params : params;

    if (name) {
      // resolved named direct
      var targetRecord = nameMap[name];
      if (false) {
        assert(targetRecord, ("redirect failed: named route \"" + name + "\" not found."));
      }
      return match({
        _normalized: true,
        name: name,
        query: query,
        hash: hash,
        params: params
      }, undefined, location)
    } else if (path) {
      // 1. resolve relative redirect
      var rawPath = resolveRecordPath(path, record);
      // 2. resolve params
      var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
      // 3. rematch with existing query and hash
      return match({
        _normalized: true,
        path: resolvedPath,
        query: query,
        hash: hash
      }, undefined, location)
    } else {
      if (false) {
        warn(false, ("invalid redirect option: " + (JSON.stringify(redirect))));
      }
      return _createRoute(null, location)
    }
  }

  function alias (
    record,
    location,
    matchAs
  ) {
    var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
    var aliasedMatch = match({
      _normalized: true,
      path: aliasedPath
    });
    if (aliasedMatch) {
      var matched = aliasedMatch.matched;
      var aliasedRecord = matched[matched.length - 1];
      location.params = aliasedMatch.params;
      return _createRoute(aliasedRecord, location)
    }
    return _createRoute(null, location)
  }

  function _createRoute (
    record,
    location,
    redirectedFrom
  ) {
    if (record && record.redirect) {
      return redirect(record, redirectedFrom || location)
    }
    if (record && record.matchAs) {
      return alias(record, location, record.matchAs)
    }
    return createRoute(record, location, redirectedFrom, router)
  }

  return {
    match: match,
    addRoutes: addRoutes
  }
}

function matchRoute (
  regex,
  path,
  params
) {
  var m = path.match(regex);

  if (!m) {
    return false
  } else if (!params) {
    return true
  }

  for (var i = 1, len = m.length; i < len; ++i) {
    var key = regex.keys[i - 1];
    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];
    if (key) {
      params[key.name] = val;
    }
  }

  return true
}

function resolveRecordPath (path, record) {
  return resolvePath(path, record.parent ? record.parent.path : '/', true)
}

/*  */


var positionStore = Object.create(null);

function setupScroll () {
  window.addEventListener('popstate', function (e) {
    saveScrollPosition();
    if (e.state && e.state.key) {
      setStateKey(e.state.key);
    }
  });
}

function handleScroll (
  router,
  to,
  from,
  isPop
) {
  if (!router.app) {
    return
  }

  var behavior = router.options.scrollBehavior;
  if (!behavior) {
    return
  }

  if (false) {
    assert(typeof behavior === 'function', "scrollBehavior must be a function");
  }

  // wait until re-render finishes before scrolling
  router.app.$nextTick(function () {
    var position = getScrollPosition();
    var shouldScroll = behavior(to, from, isPop ? position : null);
    if (!shouldScroll) {
      return
    }
    var isObject = typeof shouldScroll === 'object';
    if (isObject && typeof shouldScroll.selector === 'string') {
      var el = document.querySelector(shouldScroll.selector);
      if (el) {
        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};
        offset = normalizeOffset(offset);
        position = getElementPosition(el, offset);
      } else if (isValidPosition(shouldScroll)) {
        position = normalizePosition(shouldScroll);
      }
    } else if (isObject && isValidPosition(shouldScroll)) {
      position = normalizePosition(shouldScroll);
    }

    if (position) {
      window.scrollTo(position.x, position.y);
    }
  });
}

function saveScrollPosition () {
  var key = getStateKey();
  if (key) {
    positionStore[key] = {
      x: window.pageXOffset,
      y: window.pageYOffset
    };
  }
}

function getScrollPosition () {
  var key = getStateKey();
  if (key) {
    return positionStore[key]
  }
}

function getElementPosition (el, offset) {
  var docEl = document.documentElement;
  var docRect = docEl.getBoundingClientRect();
  var elRect = el.getBoundingClientRect();
  return {
    x: elRect.left - docRect.left - offset.x,
    y: elRect.top - docRect.top - offset.y
  }
}

function isValidPosition (obj) {
  return isNumber(obj.x) || isNumber(obj.y)
}

function normalizePosition (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : window.pageXOffset,
    y: isNumber(obj.y) ? obj.y : window.pageYOffset
  }
}

function normalizeOffset (obj) {
  return {
    x: isNumber(obj.x) ? obj.x : 0,
    y: isNumber(obj.y) ? obj.y : 0
  }
}

function isNumber (v) {
  return typeof v === 'number'
}

/*  */

var supportsPushState = inBrowser && (function () {
  var ua = window.navigator.userAgent;

  if (
    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
    ua.indexOf('Mobile Safari') !== -1 &&
    ua.indexOf('Chrome') === -1 &&
    ua.indexOf('Windows Phone') === -1
  ) {
    return false
  }

  return window.history && 'pushState' in window.history
})();

// use User Timing api (if present) for more accurate key precision
var Time = inBrowser && window.performance && window.performance.now
  ? window.performance
  : Date;

var _key = genKey();

function genKey () {
  return Time.now().toFixed(3)
}

function getStateKey () {
  return _key
}

function setStateKey (key) {
  _key = key;
}

function pushState (url, replace) {
  saveScrollPosition();
  // try...catch the pushState call to get around Safari
  // DOM Exception 18 where it limits to 100 pushState calls
  var history = window.history;
  try {
    if (replace) {
      history.replaceState({ key: _key }, '', url);
    } else {
      _key = genKey();
      history.pushState({ key: _key }, '', url);
    }
  } catch (e) {
    window.location[replace ? 'replace' : 'assign'](url);
  }
}

function replaceState (url) {
  pushState(url, true);
}

/*  */

function runQueue (queue, fn, cb) {
  var step = function (index) {
    if (index >= queue.length) {
      cb();
    } else {
      if (queue[index]) {
        fn(queue[index], function () {
          step(index + 1);
        });
      } else {
        step(index + 1);
      }
    }
  };
  step(0);
}

/*  */

function resolveAsyncComponents (matched) {
  return function (to, from, next) {
    var hasAsync = false;
    var pending = 0;
    var error = null;

    flatMapComponents(matched, function (def, _, match, key) {
      // if it's a function and doesn't have cid attached,
      // assume it's an async component resolve function.
      // we are not using Vue's default async resolving mechanism because
      // we want to halt the navigation until the incoming component has been
      // resolved.
      if (typeof def === 'function' && def.cid === undefined) {
        hasAsync = true;
        pending++;

        var resolve = once(function (resolvedDef) {
          if (resolvedDef.__esModule && resolvedDef.default) {
            resolvedDef = resolvedDef.default;
          }
          // save resolved on async factory in case it's used elsewhere
          def.resolved = typeof resolvedDef === 'function'
            ? resolvedDef
            : _Vue.extend(resolvedDef);
          match.components[key] = resolvedDef;
          pending--;
          if (pending <= 0) {
            next();
          }
        });

        var reject = once(function (reason) {
          var msg = "Failed to resolve async component " + key + ": " + reason;
          "production" !== 'production' && warn(false, msg);
          if (!error) {
            error = isError(reason)
              ? reason
              : new Error(msg);
            next(error);
          }
        });

        var res;
        try {
          res = def(resolve, reject);
        } catch (e) {
          reject(e);
        }
        if (res) {
          if (typeof res.then === 'function') {
            res.then(resolve, reject);
          } else {
            // new syntax in Vue 2.3
            var comp = res.component;
            if (comp && typeof comp.then === 'function') {
              comp.then(resolve, reject);
            }
          }
        }
      }
    });

    if (!hasAsync) { next(); }
  }
}

function flatMapComponents (
  matched,
  fn
) {
  return flatten(matched.map(function (m) {
    return Object.keys(m.components).map(function (key) { return fn(
      m.components[key],
      m.instances[key],
      m, key
    ); })
  }))
}

function flatten (arr) {
  return Array.prototype.concat.apply([], arr)
}

// in Webpack 2, require.ensure now also returns a Promise
// so the resolve/reject functions may get called an extra time
// if the user uses an arrow function shorthand that happens to
// return that Promise.
function once (fn) {
  var called = false;
  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    if (called) { return }
    called = true;
    return fn.apply(this, args)
  }
}

/*  */

var History = function History (router, base) {
  this.router = router;
  this.base = normalizeBase(base);
  // start with a route object that stands for "nowhere"
  this.current = START;
  this.pending = null;
  this.ready = false;
  this.readyCbs = [];
  this.readyErrorCbs = [];
  this.errorCbs = [];
};

History.prototype.listen = function listen (cb) {
  this.cb = cb;
};

History.prototype.onReady = function onReady (cb, errorCb) {
  if (this.ready) {
    cb();
  } else {
    this.readyCbs.push(cb);
    if (errorCb) {
      this.readyErrorCbs.push(errorCb);
    }
  }
};

History.prototype.onError = function onError (errorCb) {
  this.errorCbs.push(errorCb);
};

History.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {
    var this$1 = this;

  var route = this.router.match(location, this.current);
  this.confirmTransition(route, function () {
    this$1.updateRoute(route);
    onComplete && onComplete(route);
    this$1.ensureURL();

    // fire ready cbs once
    if (!this$1.ready) {
      this$1.ready = true;
      this$1.readyCbs.forEach(function (cb) { cb(route); });
    }
  }, function (err) {
    if (onAbort) {
      onAbort(err);
    }
    if (err && !this$1.ready) {
      this$1.ready = true;
      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });
    }
  });
};

History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
    var this$1 = this;

  var current = this.current;
  var abort = function (err) {
    if (isError(err)) {
      if (this$1.errorCbs.length) {
        this$1.errorCbs.forEach(function (cb) { cb(err); });
      } else {
        warn(false, 'uncaught error during route navigation:');
        console.error(err);
      }
    }
    onAbort && onAbort(err);
  };
  if (
    isSameRoute(route, current) &&
    // in the case the route map has been dynamically appended to
    route.matched.length === current.matched.length
  ) {
    this.ensureURL();
    return abort()
  }

  var ref = resolveQueue(this.current.matched, route.matched);
    var updated = ref.updated;
    var deactivated = ref.deactivated;
    var activated = ref.activated;

  var queue = [].concat(
    // in-component leave guards
    extractLeaveGuards(deactivated),
    // global before hooks
    this.router.beforeHooks,
    // in-component update hooks
    extractUpdateHooks(updated),
    // in-config enter guards
    activated.map(function (m) { return m.beforeEnter; }),
    // async components
    resolveAsyncComponents(activated)
  );

  this.pending = route;
  var iterator = function (hook, next) {
    if (this$1.pending !== route) {
      return abort()
    }
    try {
      hook(route, current, function (to) {
        if (to === false || isError(to)) {
          // next(false) -> abort navigation, ensure current URL
          this$1.ensureURL(true);
          abort(to);
        } else if (
          typeof to === 'string' ||
          (typeof to === 'object' && (
            typeof to.path === 'string' ||
            typeof to.name === 'string'
          ))
        ) {
          // next('/') or next({ path: '/' }) -> redirect
          abort();
          if (typeof to === 'object' && to.replace) {
            this$1.replace(to);
          } else {
            this$1.push(to);
          }
        } else {
          // confirm transition and pass on the value
          next(to);
        }
      });
    } catch (e) {
      abort(e);
    }
  };

  runQueue(queue, iterator, function () {
    var postEnterCbs = [];
    var isValid = function () { return this$1.current === route; };
    // wait until async components are resolved before
    // extracting in-component enter guards
    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);
    var queue = enterGuards.concat(this$1.router.resolveHooks);
    runQueue(queue, iterator, function () {
      if (this$1.pending !== route) {
        return abort()
      }
      this$1.pending = null;
      onComplete(route);
      if (this$1.router.app) {
        this$1.router.app.$nextTick(function () {
          postEnterCbs.forEach(function (cb) { cb(); });
        });
      }
    });
  });
};

History.prototype.updateRoute = function updateRoute (route) {
  var prev = this.current;
  this.current = route;
  this.cb && this.cb(route);
  this.router.afterHooks.forEach(function (hook) {
    hook && hook(route, prev);
  });
};

function normalizeBase (base) {
  if (!base) {
    if (inBrowser) {
      // respect <base> tag
      var baseEl = document.querySelector('base');
      base = (baseEl && baseEl.getAttribute('href')) || '/';
      // strip full URL origin
      base = base.replace(/^https?:\/\/[^\/]+/, '');
    } else {
      base = '/';
    }
  }
  // make sure there's the starting slash
  if (base.charAt(0) !== '/') {
    base = '/' + base;
  }
  // remove trailing slash
  return base.replace(/\/$/, '')
}

function resolveQueue (
  current,
  next
) {
  var i;
  var max = Math.max(current.length, next.length);
  for (i = 0; i < max; i++) {
    if (current[i] !== next[i]) {
      break
    }
  }
  return {
    updated: next.slice(0, i),
    activated: next.slice(i),
    deactivated: current.slice(i)
  }
}

function extractGuards (
  records,
  name,
  bind,
  reverse
) {
  var guards = flatMapComponents(records, function (def, instance, match, key) {
    var guard = extractGuard(def, name);
    if (guard) {
      return Array.isArray(guard)
        ? guard.map(function (guard) { return bind(guard, instance, match, key); })
        : bind(guard, instance, match, key)
    }
  });
  return flatten(reverse ? guards.reverse() : guards)
}

function extractGuard (
  def,
  key
) {
  if (typeof def !== 'function') {
    // extend now so that global mixins are applied.
    def = _Vue.extend(def);
  }
  return def.options[key]
}

function extractLeaveGuards (deactivated) {
  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
}

function extractUpdateHooks (updated) {
  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
}

function bindGuard (guard, instance) {
  if (instance) {
    return function boundRouteGuard () {
      return guard.apply(instance, arguments)
    }
  }
}

function extractEnterGuards (
  activated,
  cbs,
  isValid
) {
  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {
    return bindEnterGuard(guard, match, key, cbs, isValid)
  })
}

function bindEnterGuard (
  guard,
  match,
  key,
  cbs,
  isValid
) {
  return function routeEnterGuard (to, from, next) {
    return guard(to, from, function (cb) {
      next(cb);
      if (typeof cb === 'function') {
        cbs.push(function () {
          // #750
          // if a router-view is wrapped with an out-in transition,
          // the instance may not have been registered at this time.
          // we will need to poll for registration until current route
          // is no longer valid.
          poll(cb, match.instances, key, isValid);
        });
      }
    })
  }
}

function poll (
  cb, // somehow flow cannot infer this is a function
  instances,
  key,
  isValid
) {
  if (instances[key]) {
    cb(instances[key]);
  } else if (isValid()) {
    setTimeout(function () {
      poll(cb, instances, key, isValid);
    }, 16);
  }
}

/*  */


var HTML5History = (function (History$$1) {
  function HTML5History (router, base) {
    var this$1 = this;

    History$$1.call(this, router, base);

    var expectScroll = router.options.scrollBehavior;

    if (expectScroll) {
      setupScroll();
    }

    window.addEventListener('popstate', function (e) {
      var current = this$1.current;
      this$1.transitionTo(getLocation(this$1.base), function (route) {
        if (expectScroll) {
          handleScroll(router, route, current, true);
        }
      });
    });
  }

  if ( History$$1 ) HTML5History.__proto__ = History$$1;
  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );
  HTML5History.prototype.constructor = HTML5History;

  HTML5History.prototype.go = function go (n) {
    window.history.go(n);
  };

  HTML5History.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      pushState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    var ref = this;
    var fromRoute = ref.current;
    this.transitionTo(location, function (route) {
      replaceState(cleanPath(this$1.base + route.fullPath));
      handleScroll(this$1.router, route, fromRoute, false);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HTML5History.prototype.ensureURL = function ensureURL (push) {
    if (getLocation(this.base) !== this.current.fullPath) {
      var current = cleanPath(this.base + this.current.fullPath);
      push ? pushState(current) : replaceState(current);
    }
  };

  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
    return getLocation(this.base)
  };

  return HTML5History;
}(History));

function getLocation (base) {
  var path = window.location.pathname;
  if (base && path.indexOf(base) === 0) {
    path = path.slice(base.length);
  }
  return (path || '/') + window.location.search + window.location.hash
}

/*  */


var HashHistory = (function (History$$1) {
  function HashHistory (router, base, fallback) {
    History$$1.call(this, router, base);
    // check history fallback deeplinking
    if (fallback && checkFallback(this.base)) {
      return
    }
    ensureSlash();
  }

  if ( History$$1 ) HashHistory.__proto__ = History$$1;
  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  HashHistory.prototype.constructor = HashHistory;

  // this is delayed until the app mounts
  // to avoid the hashchange listener being fired too early
  HashHistory.prototype.setupListeners = function setupListeners () {
    var this$1 = this;

    window.addEventListener('hashchange', function () {
      if (!ensureSlash()) {
        return
      }
      this$1.transitionTo(getHash(), function (route) {
        replaceHash(route.fullPath);
      });
    });
  };

  HashHistory.prototype.push = function push (location, onComplete, onAbort) {
    this.transitionTo(location, function (route) {
      pushHash(route.fullPath);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    this.transitionTo(location, function (route) {
      replaceHash(route.fullPath);
      onComplete && onComplete(route);
    }, onAbort);
  };

  HashHistory.prototype.go = function go (n) {
    window.history.go(n);
  };

  HashHistory.prototype.ensureURL = function ensureURL (push) {
    var current = this.current.fullPath;
    if (getHash() !== current) {
      push ? pushHash(current) : replaceHash(current);
    }
  };

  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    return getHash()
  };

  return HashHistory;
}(History));

function checkFallback (base) {
  var location = getLocation(base);
  if (!/^\/#/.test(location)) {
    window.location.replace(
      cleanPath(base + '/#' + location)
    );
    return true
  }
}

function ensureSlash () {
  var path = getHash();
  if (path.charAt(0) === '/') {
    return true
  }
  replaceHash('/' + path);
  return false
}

function getHash () {
  // We can't use window.location.hash here because it's not
  // consistent across browsers - Firefox will pre-decode it!
  var href = window.location.href;
  var index = href.indexOf('#');
  return index === -1 ? '' : href.slice(index + 1)
}

function pushHash (path) {
  window.location.hash = path;
}

function replaceHash (path) {
  var href = window.location.href;
  var i = href.indexOf('#');
  var base = i >= 0 ? href.slice(0, i) : href;
  window.location.replace((base + "#" + path));
}

/*  */


var AbstractHistory = (function (History$$1) {
  function AbstractHistory (router, base) {
    History$$1.call(this, router, base);
    this.stack = [];
    this.index = -1;
  }

  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;
  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );
  AbstractHistory.prototype.constructor = AbstractHistory;

  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
      this$1.index++;
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
    var this$1 = this;

    this.transitionTo(location, function (route) {
      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
      onComplete && onComplete(route);
    }, onAbort);
  };

  AbstractHistory.prototype.go = function go (n) {
    var this$1 = this;

    var targetIndex = this.index + n;
    if (targetIndex < 0 || targetIndex >= this.stack.length) {
      return
    }
    var route = this.stack[targetIndex];
    this.confirmTransition(route, function () {
      this$1.index = targetIndex;
      this$1.updateRoute(route);
    });
  };

  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
    var current = this.stack[this.stack.length - 1];
    return current ? current.fullPath : '/'
  };

  AbstractHistory.prototype.ensureURL = function ensureURL () {
    // noop
  };

  return AbstractHistory;
}(History));

/*  */

var VueRouter = function VueRouter (options) {
  if ( options === void 0 ) options = {};

  this.app = null;
  this.apps = [];
  this.options = options;
  this.beforeHooks = [];
  this.resolveHooks = [];
  this.afterHooks = [];
  this.matcher = createMatcher(options.routes || [], this);

  var mode = options.mode || 'hash';
  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;
  if (this.fallback) {
    mode = 'hash';
  }
  if (!inBrowser) {
    mode = 'abstract';
  }
  this.mode = mode;

  switch (mode) {
    case 'history':
      this.history = new HTML5History(this, options.base);
      break
    case 'hash':
      this.history = new HashHistory(this, options.base, this.fallback);
      break
    case 'abstract':
      this.history = new AbstractHistory(this, options.base);
      break
    default:
      if (false) {
        assert(false, ("invalid mode: " + mode));
      }
  }
};

var prototypeAccessors = { currentRoute: {} };

VueRouter.prototype.match = function match (
  raw,
  current,
  redirectedFrom
) {
  return this.matcher.match(raw, current, redirectedFrom)
};

prototypeAccessors.currentRoute.get = function () {
  return this.history && this.history.current
};

VueRouter.prototype.init = function init (app /* Vue component instance */) {
    var this$1 = this;

  "production" !== 'production' && assert(
    install.installed,
    "not installed. Make sure to call `Vue.use(VueRouter)` " +
    "before creating root instance."
  );

  this.apps.push(app);

  // main app already initialized.
  if (this.app) {
    return
  }

  this.app = app;

  var history = this.history;

  if (history instanceof HTML5History) {
    history.transitionTo(history.getCurrentLocation());
  } else if (history instanceof HashHistory) {
    var setupHashListener = function () {
      history.setupListeners();
    };
    history.transitionTo(
      history.getCurrentLocation(),
      setupHashListener,
      setupHashListener
    );
  }

  history.listen(function (route) {
    this$1.apps.forEach(function (app) {
      app._route = route;
    });
  });
};

VueRouter.prototype.beforeEach = function beforeEach (fn) {
  return registerHook(this.beforeHooks, fn)
};

VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
  return registerHook(this.resolveHooks, fn)
};

VueRouter.prototype.afterEach = function afterEach (fn) {
  return registerHook(this.afterHooks, fn)
};

VueRouter.prototype.onReady = function onReady (cb, errorCb) {
  this.history.onReady(cb, errorCb);
};

VueRouter.prototype.onError = function onError (errorCb) {
  this.history.onError(errorCb);
};

VueRouter.prototype.push = function push (location, onComplete, onAbort) {
  this.history.push(location, onComplete, onAbort);
};

VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
  this.history.replace(location, onComplete, onAbort);
};

VueRouter.prototype.go = function go (n) {
  this.history.go(n);
};

VueRouter.prototype.back = function back () {
  this.go(-1);
};

VueRouter.prototype.forward = function forward () {
  this.go(1);
};

VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
  var route = to
    ? to.matched
      ? to
      : this.resolve(to).route
    : this.currentRoute;
  if (!route) {
    return []
  }
  return [].concat.apply([], route.matched.map(function (m) {
    return Object.keys(m.components).map(function (key) {
      return m.components[key]
    })
  }))
};

VueRouter.prototype.resolve = function resolve (
  to,
  current,
  append
) {
  var location = normalizeLocation(
    to,
    current || this.history.current,
    append,
    this
  );
  var route = this.match(location, current);
  var fullPath = route.redirectedFrom || route.fullPath;
  var base = this.history.base;
  var href = createHref(base, fullPath, this.mode);
  return {
    location: location,
    route: route,
    href: href,
    // for backwards compat
    normalizedTo: location,
    resolved: route
  }
};

VueRouter.prototype.addRoutes = function addRoutes (routes) {
  this.matcher.addRoutes(routes);
  if (this.history.current !== START) {
    this.history.transitionTo(this.history.getCurrentLocation());
  }
};

Object.defineProperties( VueRouter.prototype, prototypeAccessors );

function registerHook (list, fn) {
  list.push(fn);
  return function () {
    var i = list.indexOf(fn);
    if (i > -1) { list.splice(i, 1); }
  }
}

function createHref (base, fullPath, mode) {
  var path = mode === 'hash' ? '#' + fullPath : fullPath;
  return base ? cleanPath(base + '/' + path) : path
}

VueRouter.install = install;
VueRouter.version = '2.7.0';

if (inBrowser && window.Vue) {
  window.Vue.use(VueRouter);
}

/* harmony default export */ __webpack_exports__["a"] = (VueRouter);


/***/ }),
/* 40 */
/***/ (function(module, exports) {

/**
 * Adapted from https://github.com/alice/modality
 * Version: 1.0.2
 */
document.addEventListener('DOMContentLoaded', () => {
    let hadKeyboardEvent = false;
    const keyboardModalityWhitelist = [
        'input:not([type])',
        'input[type=text]',
        'input[type=number]',
        'input[type=date]',
        'input[type=time]',
        'input[type=datetime]',
        'textarea',
        '[role=textbox]',
        '[supports-modality=keyboard]'
    ].join(',');

    let isHandlingKeyboardThrottle;

    const matcher = (() => {
        const el = document.body;

        if (el.matchesSelector) {
            return el.matchesSelector;
        }

        if (el.webkitMatchesSelector) {
            return el.webkitMatchesSelector;
        }

        if (el.mozMatchesSelector) {
            return el.mozMatchesSelector;
        }

        if (el.msMatchesSelector) {
            return el.msMatchesSelector;
        }

        console.error('Couldn\'t find any matchesSelector method on document.body.');
    })();

    const disableFocusRingByDefault = function () {
        const css = 'body:not([modality=keyboard]) :focus { outline: none; }';
        const head = document.head || document.getElementsByTagName('head')[0];
        const style = document.createElement('style');

        style.type = 'text/css';
        style.id = 'disable-focus-ring';

        if (style.styleSheet) {
            style.styleSheet.cssText = css;
        } else {
            style.appendChild(document.createTextNode(css));
        }

        head.insertBefore(style, head.firstChild);
    };

    const focusTriggersKeyboardModality = function (el) {
        let triggers = false;

        if (matcher) {
            triggers = matcher.call(el, keyboardModalityWhitelist) &&
                matcher.call(el, ':not([readonly])');
        }

        return triggers;
    };

    disableFocusRingByDefault();

    document.body.addEventListener('keydown', () => {
        hadKeyboardEvent = true;

        if (isHandlingKeyboardThrottle) {
            clearTimeout(isHandlingKeyboardThrottle);
        }

        isHandlingKeyboardThrottle = setTimeout(() => {
            hadKeyboardEvent = false;
        }, 100);
    }, true);

    document.body.addEventListener('focus', e => {
        if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {
            document.body.setAttribute('modality', 'keyboard');
        }
    }, true);

    document.body.addEventListener('blur', () => {
        document.body.removeAttribute('modality');
    }, true);
});


/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
const colourStrings = [
    'Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Pink', 'Lavender', 'Orange', 'Peach', 'Lime'
];
/* harmony export (immutable) */ __webpack_exports__["colourStrings"] = colourStrings;


const colours = [
    {
        label: 'Red',
        image: 'https://placehold.it/64/ff0000/ff0000',
        value: 'red'
    },
    {
        label: 'Blue',
        image: 'https://placehold.it/64/0000ff/0000ff',
        value: 'blue'
    }, {
        label: 'Green',
        image: 'https://placehold.it/64/008000/008000',
        value: 'green'
    },
    {
        label: 'Yellow',
        image: 'https://placehold.it/64/ffff00/ffff00',
        value: 'yellow'
    },
    {
        label: 'Purple',
        image: 'https://placehold.it/64/800080/800080',
        value: 'purple'
    },
    {
        label: 'Pink',
        image: 'https://placehold.it/64/ffc0cb/ffc0cb',
        value: 'pink'
    },
    {
        label: 'Lavender',
        image: 'https://placehold.it/64/e6e6fa/e6e6fa',
        value: 'lavender'
    },
    {
        label: 'Orange',
        image: 'https://placehold.it/64/ffa500/ffa500',
        value: 'orange'
    },
    {
        label: 'Peach',
        image: 'https://placehold.it/64/ffdab9/ffdab9',
        value: 'peach'
    },
    {
        label: 'Lime',
        image: 'https://placehold.it/64/00ff00/00ff00',
        value: 'lime'
    }
];
/* harmony export (immutable) */ __webpack_exports__["colours"] = colours;


const redShades = [
    {
        label: 'Red',
        image: 'https://placehold.it/64/ff0000/ff0000',
        value: 'red'
    },
    {
        label: 'Ced',
        value: 'ced',
        image: 'https://placehold.it/64/CF302C/CF302C'
    },
    {
        label: 'Cherry',
        value: 'cherry',
        image: 'https://placehold.it/64/9C0E04/9C0E04'
    },
    {
        label: 'Rose',
        value: 'rose',
        image: 'https://placehold.it/64/E3242B/E3242B'
    },
    {
        label: 'Jam',
        value: 'jam',
        image: 'https://placehold.it/64/5F100B/5F100B'
    },
    {
        label: 'Merlot',
        value: 'merlot',
        image: 'https://placehold.it/64/541F1B/541F1B'
    },
    {
        label: 'Garnet',
        value: 'garnet',
        image: 'https://placehold.it/64/600B04/600B04'
    },
    {
        label: 'Crimson',
        value: 'crimson',
        image: 'https://placehold.it/64/B80F08/B80F08'
    },
    {
        label: 'Ruby',
        value: 'ruby',
        image: 'https://placehold.it/64/900603/900603'
    },
    {
        label: 'Scarlet',
        value: 'scarlet',
        image: 'https://placehold.it/64/910D09/910D09'
    },
    {
        label: 'Wine',
        value: 'wine',
        image: 'https://placehold.it/64/4C0805/4C0805'
    },
    {
        label: 'Brick',
        value: 'brick',
        image: 'https://placehold.it/64/7D2910/7D2910'
    },
    {
        label: 'Apple',
        value: 'apple',
        image: 'https://placehold.it/64/A91B0D/A91B0D'
    },
    {
        label: 'Mahogany',
        value: 'mahogany',
        image: 'https://placehold.it/64/400D0A/400D0A'
    },
    {
        label: 'Blood',
        value: 'blood',
        image: 'https://placehold.it/64/710C04/710C04'
    },
    {
        label: 'Sangria',
        value: 'sangria',
        image: 'https://placehold.it/64/641612/641612'
    },
    {
        label: 'Berry',
        value: 'berry',
        image: 'https://placehold.it/64/7A1712/7A1712'
    },
    {
        label: 'Currant',
        value: 'currant',
        image: 'https://placehold.it/64/670C07/670C07'
    },
    {
        label: 'Blush',
        value: 'blush',
        image: 'https://placehold.it/64/BC544B/BC544B'
    },
    {
        label: 'Candy',
        value: 'candy',
        image: 'https://placehold.it/64/D21404/D21404'
    },
    {
        label: 'Lipstick',
        value: 'lipstick',
        image: 'https://placehold.it/64/9C1003/9C1003'
    }
];
/* harmony export (immutable) */ __webpack_exports__["redShades"] = redShades;


const blueShades = [
    {
        label: 'Blue',
        value: 'blue',
        image: 'https://placehold.it/64/0000ff/0000ff'
    },
    {
        label: 'Slate',
        value: 'slate',
        image: 'https://placehold.it/64/747C87/747C87'
    },
    {
        label: 'Sky',
        value: 'sky',
        image: 'https://placehold.it/64/62C5DA/62C5DA'
    },
    {
        label: 'Navy',
        value: 'navy',
        image: 'https://placehold.it/64/0B1173/0B1173'
    },
    {
        label: 'Indigo',
        value: 'indigo',
        image: 'https://placehold.it/64/281E5D/281E5D'
    },
    {
        label: 'Cobalt',
        value: 'cobalt',
        image: 'https://placehold.it/64/1437BF/1437BF'
    },
    {
        label: 'Teal',
        value: 'teal',
        image: 'https://placehold.it/64/48AAAD/48AAAD'
    },
    {
        label: 'Ocean',
        value: 'ocean',
        image: 'https://placehold.it/64/016064/016064'
    },
    {
        label: 'Peacock',
        value: 'peacock',
        image: 'https://placehold.it/64/022D34/022D34'
    },
    {
        label: 'Azure',
        value: 'azure',
        image: 'https://placehold.it/64/1A1EA6/1A1EA6'
    },
    {
        label: 'Cerulean',
        value: 'cerulean',
        image: 'https://placehold.it/64/0393BC/0393BC'
    },
    {
        label: 'Lapis',
        value: 'lapis',
        image: 'https://placehold.it/64/2732C2/2732C2'
    },
    {
        label: 'Spruce',
        value: 'spruce',
        image: 'https://placehold.it/64/2C3E4C/2C3E4C'
    },
    {
        label: 'Stone',
        value: 'stone',
        image: 'https://placehold.it/64/59788D/59788D'
    },
    {
        label: 'Aegean',
        value: 'aegean',
        image: 'https://placehold.it/64/1F456E/1F456E'
    },
    {
        label: 'Berry',
        value: 'berry',
        image: 'https://placehold.it/64/27146D/27146D'
    },
    {
        label: 'Denim',
        value: 'denim',
        image: 'https://placehold.it/64/151E3D/151E3D'
    },
    {
        label: 'Admiral',
        value: 'admiral',
        image: 'https://placehold.it/64/061094/061094'
    },
    {
        label: 'Sapphire',
        value: 'sapphire',
        image: 'https://placehold.it/64/52B2C0/52B2C0'
    },
    {
        label: 'Artic',
        value: 'artic',
        image: 'https://placehold.it/64/82EDFD/82EDFD'
    }
];
/* harmony export (immutable) */ __webpack_exports__["blueShades"] = blueShades;


/* harmony default export */ __webpack_exports__["default"] = ({
    colours,
    colourStrings,
    redShades,
    blueShades
});


/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = ([{
    name: 'Aruba',
    code: 'AW'
}, {
    name: 'Afghanistan',
    code: 'AF'
}, {
    name: 'Angola',
    code: 'AO'
}, {
    name: 'Anguilla',
    code: 'AI'
}, {
    name: 'Åland Islands',
    code: 'AX'
}, {
    name: 'Albania',
    code: 'AL'
}, {
    name: 'Andorra',
    code: 'AD'
}, {
    name: 'United Arab Emirates',
    code: 'AE'
}, {
    name: 'Argentina',
    code: 'AR'
}, {
    name: 'Armenia',
    code: 'AM'
}, {
    name: 'American Samoa',
    code: 'AS'
}, {
    name: 'Antarctica',
    code: 'AQ'
}, {
    name: 'French Southern and Antarctic Lands',
    code: 'TF'
}, {
    name: 'Antigua and Barbuda',
    code: 'AG'
}, {
    name: 'Australia',
    code: 'AU'
}, {
    name: 'Austria',
    code: 'AT'
}, {
    name: 'Azerbaijan',
    code: 'AZ'
}, {
    name: 'Burundi',
    code: 'BI'
}, {
    name: 'Belgium',
    code: 'BE'
}, {
    name: 'Benin',
    code: 'BJ'
}, {
    name: 'Burkina Faso',
    code: 'BF'
}, {
    name: 'Bangladesh',
    code: 'BD'
}, {
    name: 'Bulgaria',
    code: 'BG'
}, {
    name: 'Bahrain',
    code: 'BH'
}, {
    name: 'Bahamas',
    code: 'BS'
}, {
    name: 'Bosnia and Herzegovina',
    code: 'BA'
}, {
    name: 'Saint Barthélemy',
    code: 'BL'
}, {
    name: 'Belarus',
    code: 'BY'
}, {
    name: 'Belize',
    code: 'BZ'
}, {
    name: 'Bermuda',
    code: 'BM'
}, {
    name: 'Bolivia',
    code: 'BO'
}, {
    name: 'Brazil',
    code: 'BR'
}, {
    name: 'Barbados',
    code: 'BB'
}, {
    name: 'Brunei',
    code: 'BN'
}, {
    name: 'Bhutan',
    code: 'BT'
}, {
    name: 'Bouvet Island',
    code: 'BV'
}, {
    name: 'Botswana',
    code: 'BW'
}, {
    name: 'Central African Republic',
    code: 'CF'
}, {
    name: 'Canada',
    code: 'CA'
}, {
    name: 'Cocos (Keeling) Islands',
    code: 'CC'
}, {
    name: 'Switzerland',
    code: 'CH'
}, {
    name: 'Chile',
    code: 'CL'
}, {
    name: 'China',
    code: 'CN'
}, {
    name: 'Ivory Coast',
    code: 'CI'
}, {
    name: 'Cameroon',
    code: 'CM'
}, {
    name: 'DR Congo',
    code: 'CD'
}, {
    name: 'Republic of the Congo',
    code: 'CG'
}, {
    name: 'Cook Islands',
    code: 'CK'
}, {
    name: 'Colombia',
    code: 'CO'
}, {
    name: 'Comoros',
    code: 'KM'
}, {
    name: 'Cape Verde',
    code: 'CV'
}, {
    name: 'Costa Rica',
    code: 'CR'
}, {
    name: 'Cuba',
    code: 'CU'
}, {
    name: 'Curaçao',
    code: 'CW'
}, {
    name: 'Christmas Island',
    code: 'CX'
}, {
    name: 'Cayman Islands',
    code: 'KY'
}, {
    name: 'Cyprus',
    code: 'CY'
}, {
    name: 'Czech Republic',
    code: 'CZ'
}, {
    name: 'Germany',
    code: 'DE'
}, {
    name: 'Djibouti',
    code: 'DJ'
}, {
    name: 'Dominica',
    code: 'DM'
}, {
    name: 'Denmark',
    code: 'DK'
}, {
    name: 'Dominican Republic',
    code: 'DO'
}, {
    name: 'Algeria',
    code: 'DZ'
}, {
    name: 'Ecuador',
    code: 'EC'
}, {
    name: 'Egypt',
    code: 'EG'
}, {
    name: 'Eritrea',
    code: 'ER'
}, {
    name: 'Western Sahara',
    code: 'EH'
}, {
    name: 'Spain',
    code: 'ES'
}, {
    name: 'Estonia',
    code: 'EE'
}, {
    name: 'Ethiopia',
    code: 'ET'
}, {
    name: 'Finland',
    code: 'FI'
}, {
    name: 'Fiji',
    code: 'FJ'
}, {
    name: 'Falkland Islands',
    code: 'FK'
}, {
    name: 'France',
    code: 'FR'
}, {
    name: 'Faroe Islands',
    code: 'FO'
}, {
    name: 'Micronesia',
    code: 'FM'
}, {
    name: 'Gabon',
    code: 'GA'
}, {
    name: 'United Kingdom',
    code: 'GB'
}, {
    name: 'Georgia',
    code: 'GE'
}, {
    name: 'Guernsey',
    code: 'GG'
}, {
    name: 'Ghana',
    code: 'GH'
}, {
    name: 'Gibraltar',
    code: 'GI'
}, {
    name: 'Guinea',
    code: 'GN'
}, {
    name: 'Guadeloupe',
    code: 'GP'
}, {
    name: 'Gambia',
    code: 'GM'
}, {
    name: 'Guinea-Bissau',
    code: 'GW'
}, {
    name: 'Equatorial Guinea',
    code: 'GQ'
}, {
    name: 'Greece',
    code: 'GR'
}, {
    name: 'Grenada',
    code: 'GD'
}, {
    name: 'Greenland',
    code: 'GL'
}, {
    name: 'Guatemala',
    code: 'GT'
}, {
    name: 'French Guiana',
    code: 'GF'
}, {
    name: 'Guam',
    code: 'GU'
}, {
    name: 'Guyana',
    code: 'GY'
}, {
    name: 'Hong Kong',
    code: 'HK'
}, {
    name: 'Heard Island and McDonald Islands',
    code: 'HM'
}, {
    name: 'Honduras',
    code: 'HN'
}, {
    name: 'Croatia',
    code: 'HR'
}, {
    name: 'Haiti',
    code: 'HT'
}, {
    name: 'Hungary',
    code: 'HU'
}, {
    name: 'Indonesia',
    code: 'ID'
}, {
    name: 'Isle of Man',
    code: 'IM'
}, {
    name: 'India',
    code: 'IN'
}, {
    name: 'British Indian Ocean Territory',
    code: 'IO'
}, {
    name: 'Ireland',
    code: 'IE'
}, {
    name: 'Iran',
    code: 'IR'
}, {
    name: 'Iraq',
    code: 'IQ'
}, {
    name: 'Iceland',
    code: 'IS'
}, {
    name: 'Israel',
    code: 'IL'
}, {
    name: 'Italy',
    code: 'IT'
}, {
    name: 'Jamaica',
    code: 'JM'
}, {
    name: 'Jersey',
    code: 'JE'
}, {
    name: 'Jordan',
    code: 'JO'
}, {
    name: 'Japan',
    code: 'JP'
}, {
    name: 'Kazakhstan',
    code: 'KZ'
}, {
    name: 'Kenya',
    code: 'KE'
}, {
    name: 'Kyrgyzstan',
    code: 'KG'
}, {
    name: 'Cambodia',
    code: 'KH'
}, {
    name: 'Kiribati',
    code: 'KI'
}, {
    name: 'Saint Kitts and Nevis',
    code: 'KN'
}, {
    name: 'South Korea',
    code: 'KR'
}, {
    name: 'Kosovo',
    code: 'XK'
}, {
    name: 'Kuwait',
    code: 'KW'
}, {
    name: 'Laos',
    code: 'LA'
}, {
    name: 'Lebanon',
    code: 'LB'
}, {
    name: 'Liberia',
    code: 'LR'
}, {
    name: 'Libya',
    code: 'LY'
}, {
    name: 'Saint Lucia',
    code: 'LC'
}, {
    name: 'Liechtenstein',
    code: 'LI'
}, {
    name: 'Sri Lanka',
    code: 'LK'
}, {
    name: 'Lesotho',
    code: 'LS'
}, {
    name: 'Lithuania',
    code: 'LT'
}, {
    name: 'Luxembourg',
    code: 'LU'
}, {
    name: 'Latvia',
    code: 'LV'
}, {
    name: 'Macau',
    code: 'MO'
}, {
    name: 'Saint Martin',
    code: 'MF'
}, {
    name: 'Morocco',
    code: 'MA'
}, {
    name: 'Monaco',
    code: 'MC'
}, {
    name: 'Moldova',
    code: 'MD'
}, {
    name: 'Madagascar',
    code: 'MG'
}, {
    name: 'Maldives',
    code: 'MV'
}, {
    name: 'Mexico',
    code: 'MX'
}, {
    name: 'Marshall Islands',
    code: 'MH'
}, {
    name: 'Macedonia',
    code: 'MK'
}, {
    name: 'Mali',
    code: 'ML'
}, {
    name: 'Malta',
    code: 'MT'
}, {
    name: 'Myanmar',
    code: 'MM'
}, {
    name: 'Montenegro',
    code: 'ME'
}, {
    name: 'Mongolia',
    code: 'MN'
}, {
    name: 'Northern Mariana Islands',
    code: 'MP'
}, {
    name: 'Mozambique',
    code: 'MZ'
}, {
    name: 'Mauritania',
    code: 'MR'
}, {
    name: 'Montserrat',
    code: 'MS'
}, {
    name: 'Martinique',
    code: 'MQ'
}, {
    name: 'Mauritius',
    code: 'MU'
}, {
    name: 'Malawi',
    code: 'MW'
}, {
    name: 'Malaysia',
    code: 'MY'
}, {
    name: 'Mayotte',
    code: 'YT'
}, {
    name: 'Namibia',
    code: 'NA'
}, {
    name: 'New Caledonia',
    code: 'NC'
}, {
    name: 'Niger',
    code: 'NE'
}, {
    name: 'Norfolk Island',
    code: 'NF'
}, {
    name: 'Nigeria',
    code: 'NG'
}, {
    name: 'Nicaragua',
    code: 'NI'
}, {
    name: 'Niue',
    code: 'NU'
}, {
    name: 'Netherlands',
    code: 'NL'
}, {
    name: 'Norway',
    code: 'NO'
}, {
    name: 'Nepal',
    code: 'NP'
}, {
    name: 'Nauru',
    code: 'NR'
}, {
    name: 'New Zealand',
    code: 'NZ'
}, {
    name: 'Oman',
    code: 'OM'
}, {
    name: 'Pakistan',
    code: 'PK'
}, {
    name: 'Panama',
    code: 'PA'
}, {
    name: 'Pitcairn Islands',
    code: 'PN'
}, {
    name: 'Peru',
    code: 'PE'
}, {
    name: 'Philippines',
    code: 'PH'
}, {
    name: 'Palau',
    code: 'PW'
}, {
    name: 'Papua New Guinea',
    code: 'PG'
}, {
    name: 'Poland',
    code: 'PL'
}, {
    name: 'Puerto Rico',
    code: 'PR'
}, {
    name: 'North Korea',
    code: 'KP'
}, {
    name: 'Portugal',
    code: 'PT'
}, {
    name: 'Paraguay',
    code: 'PY'
}, {
    name: 'Palestine',
    code: 'PS'
}, {
    name: 'French Polynesia',
    code: 'PF'
}, {
    name: 'Qatar',
    code: 'QA'
}, {
    name: 'Réunion',
    code: 'RE'
}, {
    name: 'Romania',
    code: 'RO'
}, {
    name: 'Russia',
    code: 'RU'
}, {
    name: 'Rwanda',
    code: 'RW'
}, {
    name: 'Saudi Arabia',
    code: 'SA'
}, {
    name: 'Sudan',
    code: 'SD'
}, {
    name: 'Senegal',
    code: 'SN'
}, {
    name: 'Singapore',
    code: 'SG'
}, {
    name: 'South Georgia',
    code: 'GS'
}, {
    name: 'Svalbard and Jan Mayen',
    code: 'SJ'
}, {
    name: 'Solomon Islands',
    code: 'SB'
}, {
    name: 'Sierra Leone',
    code: 'SL'
}, {
    name: 'El Salvador',
    code: 'SV'
}, {
    name: 'San Marino',
    code: 'SM'
}, {
    name: 'Somalia',
    code: 'SO'
}, {
    name: 'Saint Pierre and Miquelon',
    code: 'PM'
}, {
    name: 'Serbia',
    code: 'RS'
}, {
    name: 'South Sudan',
    code: 'SS'
}, {
    name: 'São Tomé and Príncipe',
    code: 'ST'
}, {
    name: 'Suriname',
    code: 'SR'
}, {
    name: 'Slovakia',
    code: 'SK'
}, {
    name: 'Slovenia',
    code: 'SI'
}, {
    name: 'Sweden',
    code: 'SE'
}, {
    name: 'Swaziland',
    code: 'SZ'
}, {
    name: 'Sint Maarten',
    code: 'SX'
}, {
    name: 'Seychelles',
    code: 'SC'
}, {
    name: 'Syria',
    code: 'SY'
}, {
    name: 'Turks and Caicos Islands',
    code: 'TC'
}, {
    name: 'Chad',
    code: 'TD'
}, {
    name: 'Togo',
    code: 'TG'
}, {
    name: 'Thailand',
    code: 'TH'
}, {
    name: 'Tajikistan',
    code: 'TJ'
}, {
    name: 'Tokelau',
    code: 'TK'
}, {
    name: 'Turkmenistan',
    code: 'TM'
}, {
    name: 'Timor-Leste',
    code: 'TL'
}, {
    name: 'Tonga',
    code: 'TO'
}, {
    name: 'Trinidad and Tobago',
    code: 'TT'
}, {
    name: 'Tunisia',
    code: 'TN'
}, {
    name: 'Turkey',
    code: 'TR'
}, {
    name: 'Tuvalu',
    code: 'TV'
}, {
    name: 'Taiwan',
    code: 'TW'
}, {
    name: 'Tanzania',
    code: 'TZ'
}, {
    name: 'Uganda',
    code: 'UG'
}, {
    name: 'Ukraine',
    code: 'UA'
}, {
    name: 'United States Minor Outlying Islands',
    code: 'UM'
}, {
    name: 'Uruguay',
    code: 'UY'
}, {
    name: 'United States',
    code: 'US'
}, {
    name: 'Uzbekistan',
    code: 'UZ'
}, {
    name: 'Vatican City',
    code: 'VA'
}, {
    name: 'Saint Vincent and the Grenadines',
    code: 'VC'
}, {
    name: 'Venezuela',
    code: 'VE'
}, {
    name: 'British Virgin Islands',
    code: 'VG'
}, {
    name: 'United States Virgin Islands',
    code: 'VI'
}, {
    name: 'Vietnam',
    code: 'VN'
}, {
    name: 'Vanuatu',
    code: 'VU'
}, {
    name: 'Wallis and Futuna',
    code: 'WF'
}, {
    name: 'Samoa',
    code: 'WS'
}, {
    name: 'Yemen',
    code: 'YE'
}, {
    name: 'South Africa',
    code: 'ZA'
}, {
    name: 'Zambia',
    code: 'ZM'
}, {
    name: 'Zimbabwe',
    code: 'ZW'
}]);


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = ({
    months: {
        full: [
            'janvier',
            'février',
            'mars',
            'avril',
            'mai',
            'juin',
            'juillet',
            'août',
            'septembre',
            'octobre',
            'novembre',
            'décembre'
        ],

        abbreviated: [
            'jan',
            'fév',
            'mar',
            'avr',
            'mai',
            'jun',
            'jul',
            'aoû',
            'sep',
            'oct',
            'nov',
            'déc'
        ]
    },

    days: {
        full: [
            'dimanche',
            'lundi',
            'mardi',
            'mercredi',
            'jeudi',
            'vendredi',
            'samedi'
        ],

        abbreviated: [
            'lun',
            'mar',
            'mer',
            'jeu',
            'ven',
            'sam',
            'dim'
        ],

        initials: [
            'D',
            'L',
            'M',
            'M',
            'J',
            'V',
            'S'
        ]
    }
});


/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_helpers_modality__ = __webpack_require__(40);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_helpers_modality___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_helpers_modality__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prismjs__ = __webpack_require__(37);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prismjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prismjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_router__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__App_vue__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__App_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__App_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__routes_js__ = __webpack_require__(20);

// eslint-disable-next-line no-unused-vars








// Allow inspection, even in production mode
__WEBPACK_IMPORTED_MODULE_2_vue___default.a.config.devtools = true

__WEBPACK_IMPORTED_MODULE_2_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_3_vue_router__["a" /* default */])

const router = new __WEBPACK_IMPORTED_MODULE_3_vue_router__["a" /* default */]({
    routes: __WEBPACK_IMPORTED_MODULE_5__routes_js__["default"].routes,
    linkActiveClass: 'is-active'
})

const app = new __WEBPACK_IMPORTED_MODULE_2_vue___default.a({
    router,
    render (h) {
        return h(__WEBPACK_IMPORTED_MODULE_4__App_vue___default.a)
    }
})

app.$mount('#app')


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	Autosize 3.0.21
	license: MIT
	http://www.jacklmoore.com/autosize
*/
(function (global, factory) {
	if (true) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, module], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
		factory(exports, module);
	} else {
		var mod = {
			exports: {}
		};
		factory(mod.exports, mod);
		global.autosize = mod.exports;
	}
})(this, function (exports, module) {
	'use strict';

	var map = typeof Map === "function" ? new Map() : (function () {
		var keys = [];
		var values = [];

		return {
			has: function has(key) {
				return keys.indexOf(key) > -1;
			},
			get: function get(key) {
				return values[keys.indexOf(key)];
			},
			set: function set(key, value) {
				if (keys.indexOf(key) === -1) {
					keys.push(key);
					values.push(value);
				}
			},
			'delete': function _delete(key) {
				var index = keys.indexOf(key);
				if (index > -1) {
					keys.splice(index, 1);
					values.splice(index, 1);
				}
			}
		};
	})();

	var createEvent = function createEvent(name) {
		return new Event(name, { bubbles: true });
	};
	try {
		new Event('test');
	} catch (e) {
		// IE does not support `new Event()`
		createEvent = function (name) {
			var evt = document.createEvent('Event');
			evt.initEvent(name, true, false);
			return evt;
		};
	}

	function assign(ta) {
		if (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;

		var heightOffset = null;
		var clientWidth = ta.clientWidth;
		var cachedHeight = null;

		function init() {
			var style = window.getComputedStyle(ta, null);

			if (style.resize === 'vertical') {
				ta.style.resize = 'none';
			} else if (style.resize === 'both') {
				ta.style.resize = 'horizontal';
			}

			if (style.boxSizing === 'content-box') {
				heightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));
			} else {
				heightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
			}
			// Fix when a textarea is not on document body and heightOffset is Not a Number
			if (isNaN(heightOffset)) {
				heightOffset = 0;
			}

			update();
		}

		function changeOverflow(value) {
			{
				// Chrome/Safari-specific fix:
				// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space
				// made available by removing the scrollbar. The following forces the necessary text reflow.
				var width = ta.style.width;
				ta.style.width = '0px';
				// Force reflow:
				/* jshint ignore:start */
				ta.offsetWidth;
				/* jshint ignore:end */
				ta.style.width = width;
			}

			ta.style.overflowY = value;
		}

		function getParentOverflows(el) {
			var arr = [];

			while (el && el.parentNode && el.parentNode instanceof Element) {
				if (el.parentNode.scrollTop) {
					arr.push({
						node: el.parentNode,
						scrollTop: el.parentNode.scrollTop
					});
				}
				el = el.parentNode;
			}

			return arr;
		}

		function resize() {
			var originalHeight = ta.style.height;
			var overflows = getParentOverflows(ta);
			var docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)

			ta.style.height = 'auto';

			var endHeight = ta.scrollHeight + heightOffset;

			if (ta.scrollHeight === 0) {
				// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.
				ta.style.height = originalHeight;
				return;
			}

			ta.style.height = endHeight + 'px';

			// used to check if an update is actually necessary on window.resize
			clientWidth = ta.clientWidth;

			// prevents scroll-position jumping
			overflows.forEach(function (el) {
				el.node.scrollTop = el.scrollTop;
			});

			if (docTop) {
				document.documentElement.scrollTop = docTop;
			}
		}

		function update() {
			resize();

			var styleHeight = Math.round(parseFloat(ta.style.height));
			var computed = window.getComputedStyle(ta, null);

			// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box
			var actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;

			// The actual height not matching the style height (set via the resize method) indicates that
			// the max-height has been exceeded, in which case the overflow should be allowed.
			if (actualHeight !== styleHeight) {
				if (computed.overflowY === 'hidden') {
					changeOverflow('scroll');
					resize();
					actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;
				}
			} else {
				// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.
				if (computed.overflowY !== 'hidden') {
					changeOverflow('hidden');
					resize();
					actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;
				}
			}

			if (cachedHeight !== actualHeight) {
				cachedHeight = actualHeight;
				var evt = createEvent('autosize:resized');
				try {
					ta.dispatchEvent(evt);
				} catch (err) {
					// Firefox will throw an error on dispatchEvent for a detached element
					// https://bugzilla.mozilla.org/show_bug.cgi?id=889376
				}
			}
		}

		var pageResize = function pageResize() {
			if (ta.clientWidth !== clientWidth) {
				update();
			}
		};

		var destroy = (function (style) {
			window.removeEventListener('resize', pageResize, false);
			ta.removeEventListener('input', update, false);
			ta.removeEventListener('keyup', update, false);
			ta.removeEventListener('autosize:destroy', destroy, false);
			ta.removeEventListener('autosize:update', update, false);

			Object.keys(style).forEach(function (key) {
				ta.style[key] = style[key];
			});

			map['delete'](ta);
		}).bind(ta, {
			height: ta.style.height,
			resize: ta.style.resize,
			overflowY: ta.style.overflowY,
			overflowX: ta.style.overflowX,
			wordWrap: ta.style.wordWrap
		});

		ta.addEventListener('autosize:destroy', destroy, false);

		// IE9 does not fire onpropertychange or oninput for deletions,
		// so binding to onkeyup to catch most of those events.
		// There is no way that I know of to detect something like 'cut' in IE9.
		if ('onpropertychange' in ta && 'oninput' in ta) {
			ta.addEventListener('keyup', update, false);
		}

		window.addEventListener('resize', pageResize, false);
		ta.addEventListener('input', update, false);
		ta.addEventListener('autosize:update', update, false);
		ta.style.overflowX = 'hidden';
		ta.style.wordWrap = 'break-word';

		map.set(ta, {
			destroy: destroy,
			update: update
		});

		init();
	}

	function destroy(ta) {
		var methods = map.get(ta);
		if (methods) {
			methods.destroy();
		}
	}

	function update(ta) {
		var methods = map.get(ta);
		if (methods) {
			methods.update();
		}
	}

	var autosize = null;

	// Do nothing in Node.js environment and IE8 (or lower)
	if (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {
		autosize = function (el) {
			return el;
		};
		autosize.destroy = function (el) {
			return el;
		};
		autosize.update = function (el) {
			return el;
		};
	} else {
		autosize = function (el, options) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], function (x) {
					return assign(x, options);
				});
			}
			return el;
		};
		autosize.destroy = function (el) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], destroy);
			}
			return el;
		};
		autosize.update = function (el) {
			if (el) {
				Array.prototype.forEach.call(el.length ? el : [el], update);
			}
			return el;
		};
	}

	module.exports = autosize;
});

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _Sidebar = __webpack_require__(193);

var _Sidebar2 = _interopRequireDefault(_Sidebar);

var _UiIconButton = __webpack_require__(8);

var _UiIconButton2 = _interopRequireDefault(_UiIconButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            showSidebar: false,
            description: 'Nucleus - A delightful collection of UI components we use at Temper written with Vue, inspired by Material Design.'
        };
    },


    watch: {
        '$route': function $route() {
            var _this = this;

            this.updatePageTitle();

            this.$nextTick(function () {
                window.Prism.highlightAll();
                _this.$refs.pageContent.scrollTop = 0;
                _this.showSidebar = false;
            });
        }
    },

    mounted: function mounted() {
        this.updatePageTitle();
    },


    methods: {
        updatePageTitle: function updatePageTitle() {
            document.title = this.$route.meta.title + ' | ' + this.description;
        }
    },

    components: {
        Sidebar: _Sidebar2.default,
        UiIconButton: _UiIconButton2.default
    }
};

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCollapsible = __webpack_require__(28);

var _UiCollapsible2 = _interopRequireDefault(_UiCollapsible);

var _routes = __webpack_require__(20);

var _routes2 = _interopRequireDefault(_routes);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiSelect = __webpack_require__(31);

var _UiSelect2 = _interopRequireDefault(_UiSelect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            version: '0.1.2',
            menu: _routes2.default.menu
        };
    },


    methods: {
        onVersionSelect: function onVersionSelect(version) {
            if (version === '0.1.2') {
                return;
            }

            var root = '';
            var component = window.location.hash + (version === '0.8.9' ? '-docs' : '');

            if (window.location.hostname === 'temperworks.github.io') {
                root = 'https://temperworks.github.io/Nucleus';
            }

            window.location = root + '/' + version + '/' + component;
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiSelect: _UiSelect2.default,
        UiCollapsible: _UiCollapsible2.default
    }
};

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiAlert = __webpack_require__(224);

var _UiAlert2 = _interopRequireDefault(_UiAlert);

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            showAlert1: true,
            showAlert2: true,
            showAlert3: true,
            showAlert4: true,
            showAlert5: true,
            showAlert6: true,
            showAlert7: true
        };
    },


    methods: {
        resetAlerts: function resetAlerts() {
            this.showAlert1 = true;
            this.showAlert2 = true;
            this.showAlert3 = true;
            this.showAlert4 = true;
            this.showAlert5 = true;
            this.showAlert6 = true;
            this.showAlert7 = true;
        }
    },

    components: {
        UiAlert: _UiAlert2.default,
        UiButton: _UiButton2.default,
        UiIcon: _UiIcon2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiAutocomplete = __webpack_require__(225);

var _UiAutocomplete2 = _interopRequireDefault(_UiAutocomplete);

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

var theSimpsons = [{
    value: 'maggie',
    label: 'Maggie Simpson',
    image: 'https://i.imgur.com/eK26qtK.jpg'
}, {
    value: 'lisa',
    label: 'Lisa Simpson',
    image: 'https://i.imgur.com/wIb44g9.jpg'
}, {
    value: 'bart',
    label: 'Bart Simpson',
    image: 'https://i.imgur.com/XkEz9zg.jpg'
}, {
    value: 'marge',
    label: 'Marge Simpson',
    image: 'https://i.imgur.com/MuFcpQ4.jpg'
}, {
    value: 'homer',
    label: 'Homer Simpson',
    image: 'https://i.imgur.com/aYPRWX4.jpg'
}];

var grannies = [{
    value: 'mona',
    label: 'Mona Simpson',
    image: 'https://i.imgur.com/z5xy1eW.jpg'
}, {
    value: 'abe',
    label: 'Abe Simpson',
    image: 'https://i.imgur.com/3UF8hrf.jpg'
}];

exports.default = {
    data: function data() {
        return {
            months: months,
            theSimpsons: theSimpsons,
            addedGrannies: false,
            autocomplete1: '',
            autocomplete2: '',
            autocomplete3: '',
            autocomplete4: '',
            autocomplete4Touched: false,
            autocomplete5: '',
            autocomplete6: '',
            autocomplete7: ''
        };
    },


    methods: {
        addGrannies: function addGrannies() {
            this.theSimpsons = this.theSimpsons.concat(grannies);
            this.addedGrannies = true;
        }
    },

    components: {
        UiAutocomplete: _UiAutocomplete2.default,
        UiButton: _UiButton2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiMenu = __webpack_require__(13);

var _UiMenu2 = _interopRequireDefault(_UiMenu);

var _UiRadioGroup = __webpack_require__(7);

var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);

var _UiSwitch = __webpack_require__(15);

var _UiSwitch2 = _interopRequireDefault(_UiSwitch);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var menuOptions = [{
    id: 'edit',
    label: 'Edit',
    icon: 'edit',
    secondaryText: 'Ctrl+E'
}, {
    id: 'duplicate',
    label: 'Duplicate',
    icon: 'content_copy',
    secondaryText: 'Ctrl+D'
}, {
    id: 'share',
    label: 'Share',
    icon: 'share',
    secondaryText: 'Ctrl+Shift+S',
    disabled: true
}, {
    type: 'divider'
}, {
    id: 'delete',
    label: 'Delete',
    icon: 'delete',
    secondaryText: 'Del'
}];

exports.default = {
    data: function data() {
        return {
            size: 'normal',
            iconPosition: 'left',
            loading: true,
            menuOptions: menuOptions
        };
    },


    components: {
        UiButton: _UiButton2.default,
        UiMenu: _UiMenu2.default,
        UiRadioGroup: _UiRadioGroup2.default,
        UiSwitch: _UiSwitch2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiBreadcrumbContainer = __webpack_require__(228);

var _UiBreadcrumbContainer2 = _interopRequireDefault(_UiBreadcrumbContainer);

var _UiCard = __webpack_require__(233);

var _UiCard2 = _interopRequireDefault(_UiCard);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            breadcrumbs: [{
                title: 'Home',
                url: '#'
            }, {
                title: 'Bartending',
                url: '#'
            }, {
                title: 'Strandtent de Pit',
                url: '#'
            }]
        };
    },

    components: {
        UiBreadcrumbContainer: _UiBreadcrumbContainer2.default,
        UiCard: _UiCard2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default,
        'card-title': _UiCard2.default.Components.Title,
        'card-subtitle': _UiCard2.default.Components.Subtitle,
        'card-divider': _UiCard2.default.Components.Divider
    }
};

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCheckbox = __webpack_require__(26);

var _UiCheckbox2 = _interopRequireDefault(_UiCheckbox);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            check1: true,
            check2: false,
            check3: true,
            check4: false,
            check5: true
        };
    },


    components: {
        UiCheckbox: _UiCheckbox2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCheckboxGroup = __webpack_require__(234);

var _UiCheckboxGroup2 = _interopRequireDefault(_UiCheckboxGroup);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultGroup = [{
    label: 'Red',
    value: 'red'
}, {
    label: 'Green',
    value: 'green'
}, {
    label: 'Blue',
    value: 'blue'
}]; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var secondGroup = [{
    label: 'Yellow',
    value: 'yellow',
    disabled: true
}, {
    label: 'Red',
    value: 'red'
}, {
    label: 'Green',
    value: 'green'
}, {
    label: 'Blue',
    value: 'blue'
}];

exports.default = {
    data: function data() {
        return {
            group1: [],
            group2: ['red', 'blue'],
            group3: [],
            group4: [],
            group5: [],
            group6: ['yellow'],
            group7: [],
            options: {
                defaultGroup: defaultGroup,
                secondGroup: secondGroup
            }
        };
    },


    components: {
        UiCheckboxGroup: _UiCheckboxGroup2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCollapsible = __webpack_require__(28);

var _UiCollapsible2 = _interopRequireDefault(_UiCollapsible);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    components: {
        UiCollapsible: _UiCollapsible2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiConfirm = __webpack_require__(235);

var _UiConfirm2 = _interopRequireDefault(_UiConfirm);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            confirmResult: '',
            publishRequestInProgress: false,
            deleteRequestInProgress: false
        };
    },


    methods: {
        showConfirm: function showConfirm(ref) {
            this.$refs[ref].open();
        },
        hideConfirm: function hideConfirm(ref) {
            this.$refs[ref].close();
        },
        onConfirm: function onConfirm() {
            this.confirmResult = 'You confirmed the request.';
        },
        onDeny: function onDeny() {
            this.confirmResult = 'You denied the request.';
        },
        onConfirmPublish: function onConfirmPublish() {
            var _this = this;

            this.publishRequestInProgress = true;

            setTimeout(function () {
                _this.publishRequestInProgress = false;
                _this.hideConfirm('publishConfirm');
                _this.confirmResult = 'The post was published.';
            }, 5000);
        },
        onDenyPublish: function onDenyPublish() {
            this.confirmResult = 'You chose to NOT publish the post.';
        },
        onConfirmDelete: function onConfirmDelete() {
            this.confirmResult = 'You chose to delete the post.';
        },
        onDenyDelete: function onDenyDelete() {
            this.confirmResult = 'You chose to keep the post.';
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiConfirm: _UiConfirm2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiDatepicker = __webpack_require__(236);

var _UiDatepicker2 = _interopRequireDefault(_UiDatepicker);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

var _datePickerLangFr = __webpack_require__(43);

var _datePickerLangFr2 = _interopRequireDefault(_datePickerLangFr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        var twoWeeksFromNow = new Date();
        twoWeeksFromNow.setDate(twoWeeksFromNow.getDate() + 14);

        return {
            picker1: null,
            picker2: null,
            picker3: null,
            picker4: new Date(new Date().getFullYear(), 11, 25),
            picker5: null,
            picker6: null,
            picker7: null,
            picker8: null,
            picker9: null,
            picker10: null,
            picker10Min: new Date(),
            picker10Max: twoWeeksFromNow,
            picker11: null,
            picker12: null,
            picker12Lang: _datePickerLangFr2.default,
            picker13: null,
            picker14: null,
            picker15: new Date()
        };
    },


    methods: {
        picker9Formatter: function picker9Formatter(date) {
            return date.toLocaleDateString();
        },
        picker11Filter: function picker11Filter(date) {
            return date.getDay() !== 0 && date.getDay() !== 6;
        }
    },

    components: {
        UiDatepicker: _UiDatepicker2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiFab = __webpack_require__(237);

var _UiFab2 = _interopRequireDefault(_UiFab);

var _UiRadioGroup = __webpack_require__(7);

var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            size: 'normal'
        };
    },


    components: {
        UiFab: _UiFab2.default,
        UiRadioGroup: _UiRadioGroup2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiFileupload = __webpack_require__(238);

var _UiFileupload2 = _interopRequireDefault(_UiFileupload);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiRadioGroup = __webpack_require__(7);

var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            size: 'normal',
            file11PreviewImage: ''
        };
    },


    methods: {
        onFile11Change: function onFile11Change(files) {
            this.file11PreviewImage = URL.createObjectURL(files[0]);
        }
    },

    components: {
        UiFileupload: _UiFileupload2.default,
        UiIcon: _UiIcon2.default,
        UiRadioGroup: _UiRadioGroup2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    components: {
        UiIcon: _UiIcon2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIconButton = __webpack_require__(8);

var _UiIconButton2 = _interopRequireDefault(_UiIconButton);

var _UiMenu = __webpack_require__(13);

var _UiMenu2 = _interopRequireDefault(_UiMenu);

var _UiRadioGroup = __webpack_require__(7);

var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);

var _UiSwitch = __webpack_require__(15);

var _UiSwitch2 = _interopRequireDefault(_UiSwitch);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var menuOptions = [{
    label: 'Note',
    icon: 'edit'
}, {
    label: 'Photo',
    icon: 'photo'
}, {
    label: 'Document',
    icon: 'description'
}, {
    type: 'divider'
}, {
    label: 'Collection',
    icon: 'collections_bookmark'
}];

exports.default = {
    data: function data() {
        return {
            size: 'normal',
            loading: true,
            menuOptions: menuOptions
        };
    },


    components: {
        UiIconButton: _UiIconButton2.default,
        UiMenu: _UiMenu2.default,
        UiRadioGroup: _UiRadioGroup2.default,
        UiSwitch: _UiSwitch2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiMenu = __webpack_require__(13);

var _UiMenu2 = _interopRequireDefault(_UiMenu);

var _UiPopover = __webpack_require__(9);

var _UiPopover2 = _interopRequireDefault(_UiPopover);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var menuOptions = [{
    id: 'edit',
    label: 'Edit',
    icon: 'edit',
    secondaryText: 'Ctrl+E'
}, {
    id: 'duplicate',
    label: 'Duplicate',
    icon: 'content_copy',
    secondaryText: 'Ctrl+D'
}, {
    id: 'share',
    label: 'Share',
    icon: 'share',
    secondaryText: 'Ctrl+Shift+S',
    disabled: true
}, {
    type: 'divider'
}, {
    id: 'delete',
    label: 'Delete',
    icon: 'delete',
    secondaryText: 'Del'
}];

exports.default = {
    data: function data() {
        return {
            menuOptions: menuOptions
        };
    },


    components: {
        UiMenu: _UiMenu2.default,
        UiPopover: _UiPopover2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiModal = __webpack_require__(16);

var _UiModal2 = _interopRequireDefault(_UiModal);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    methods: {
        openModal: function openModal(ref) {
            this.$refs[ref].open();
        },
        closeModal: function closeModal(ref) {
            this.$refs[ref].close();
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiModal: _UiModal2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiPopover = __webpack_require__(9);

var _UiPopover2 = _interopRequireDefault(_UiPopover);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    methods: {
        openPopover: function openPopover() {
            setTimeout(this.$refs.popover6.toggle, 0);
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiPopover: _UiPopover2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiPreloader = __webpack_require__(240);

var _UiPreloader2 = _interopRequireDefault(_UiPreloader);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            loading: true
        };
    },


    components: {
        UiButton: _UiButton2.default,
        UiPreloader: _UiPreloader2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiProgressCircular = __webpack_require__(14);

var _UiProgressCircular2 = _interopRequireDefault(_UiProgressCircular);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            progress: 0,
            loading: true,
            progressInterval: null
        };
    },
    mounted: function mounted() {
        var _this = this;

        this.progressInterval = setInterval(function () {
            if (_this.progress >= 100) {
                _this.progress = 0;
            } else {
                _this.progress += 5;
            }
        }, 500);
    },
    beforeDestroy: function beforeDestroy() {
        clearInterval(this.progressInterval);
    },


    components: {
        UiButton: _UiButton2.default,
        UiProgressCircular: _UiProgressCircular2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiProgressLinear = __webpack_require__(29);

var _UiProgressLinear2 = _interopRequireDefault(_UiProgressLinear);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            progress: 0,
            isLoading: true,
            progressInterval: null
        };
    },
    mounted: function mounted() {
        var _this = this;

        this.progressInterval = setInterval(function () {
            if (_this.progress >= 100) {
                _this.progress = 0;
            } else {
                _this.progress += 5;
            }
        }, 400);
    },
    beforeDestroy: function beforeDestroy() {
        clearInterval(this.progressInterval);
    },


    components: {
        UiButton: _UiButton2.default,
        UiProgressLinear: _UiProgressLinear2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiRadio = __webpack_require__(30);

var _UiRadio2 = _interopRequireDefault(_UiRadio);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            radio1: '',
            radio2: '',
            radio3: '',
            radio4: '',
            radio5: '',
            radio6: '',
            radio7: '',
            radio8: '',
            radio9: ''
        };
    },


    components: {
        UiRadio: _UiRadio2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiRadioGroup = __webpack_require__(7);

var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultGroup = [{
    label: 'Ned',
    value: 'ned'
}, {
    label: 'Rod',
    value: 'rod'
}, {
    label: 'Todd',
    value: 'todd'
}]; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var secondGroup = [{
    label: 'Ned',
    value: 'ned'
}, {
    label: 'Maude',
    value: 'maude',
    disabled: true
}, {
    label: 'Rod',
    value: 'rod'
}, {
    label: 'Todd',
    value: 'todd'
}];

exports.default = {
    data: function data() {
        return {
            group1: '',
            group2: 'rod',
            group3: '',
            group4: '',
            group5: '',
            group6: '',
            group7: '',
            options: {
                defaultGroup: defaultGroup,
                secondGroup: secondGroup
            }
        };
    },


    components: {
        UiRadioGroup: _UiRadioGroup2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tvShows = [{
    name: 'Better Call Saul',
    image: 'https://i.imgur.com/SwZPSS2.jpg'
}, {
    name: 'Breaking Bad',
    image: 'https://i.imgur.com/tz6FJeN.jpg'
}, {
    name: 'Sherlock',
    image: 'https://i.imgur.com/Pf1TkJY.jpg'
}, {
    name: 'The Simpsons',
    image: 'https://i.imgur.com/HJmBlzf.jpg'
}]; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var theSimpsons = [{
    value: 'maggie',
    text: 'Maggie Simpson',
    image: 'https://i.imgur.com/eK26qtK.jpg'
}, {
    value: 'lisa',
    text: 'Lisa Simpson',
    image: 'https://i.imgur.com/wIb44g9.jpg'
}, {
    value: 'bart',
    text: 'Bart Simpson',
    image: 'https://i.imgur.com/XkEz9zg.jpg'
}];

var ImagePane = {
    name: 'image-pane',
    template: '\n        <div class="image-pane" ref="image" :style="{ \'background-image\': \'url(\' + image + \')\' }">\n            <ui-ripple-ink trigger="image"></ui-ripple-ink>\n        </div>\n    ',

    props: {
        image: String
    },

    components: {
        UiRippleInk: _UiRippleInk2.default
    }
};

exports.default = {
    data: function data() {
        return {
            tvShows: tvShows,
            theSimpsons: theSimpsons
        };
    },


    components: {
        ImagePane: ImagePane,
        UiRippleInk: _UiRippleInk2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiSelect = __webpack_require__(31);

var _UiSelect2 = _interopRequireDefault(_UiSelect);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

var _lodash = __webpack_require__(23);

var _lodash2 = _interopRequireDefault(_lodash);

var _util = __webpack_require__(12);

var _countries = __webpack_require__(42);

var _countries2 = _interopRequireDefault(_countries);

var _colours = __webpack_require__(41);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            select1: '',
            select2: '',
            select2o5: '',
            select3: 'Orange',
            select4: '',
            select5: {
                label: 'Lavender',
                image: 'https://placehold.it/64/e6e6fa/e6e6fa',
                value: 'lavender'
            },
            select6: '',
            select7: '',
            select8: [{
                label: 'Orange',
                image: 'https://placehold.it/64/ffa500/ffa500',
                value: 'orange'
            }, {
                label: 'Lime',
                image: 'https://placehold.it/64/00ff00/00ff00',
                value: 'lime'
            }],
            select9: [],
            select10: [],
            select10Touched: false,
            select11: '',
            select11Options: [],
            select11Loading: false,
            select11NoResults: false,
            select11LoadingTimeout: null,
            select12: {
                name: 'Australia',
                code: 'AU'
            },
            select12o5: '',
            select13: '',
            select14: 'Peach',
            colours: _colours.colours,
            colourStrings: _colours.colourStrings,
            countries: _countries2.default
        };
    },


    methods: {
        onQueryChange: function onQueryChange(query) {
            if (query.length === 0) {
                return;
            }

            this.fetchRemoteResults(query);
        },


        fetchRemoteResults: (0, _lodash2.default)(function (query) {
            var _this = this;

            this.select11Loading = true;

            if (this.select11LoadingTimeout) {
                clearTimeout(this.select11LoadingTimeout);
                this.select11LoadingTimeout = null;
            }

            this.select11LoadingTimeout = setTimeout(function () {
                query = query.toLowerCase();

                if ((0, _util.startsWith)(query, 'red')) {
                    _this.select11Options = _colours.redShades;
                    _this.select11NoResults = false;
                } else if ((0, _util.startsWith)(query, 'blue')) {
                    _this.select11Options = _colours.blueShades;
                    _this.select11NoResults = false;
                } else {
                    _this.select11Options = [];
                    _this.select11NoResults = true;
                }

                _this.select11Loading = false;
                _this.select11LoadingTimeout = null;
            }, 1200);
        }, 500)
    },

    components: {
        UiSelect: _UiSelect2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiSlider = __webpack_require__(242);

var _UiSlider2 = _interopRequireDefault(_UiSlider);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            slider1: 25,
            slider2: 50,
            slider3: 60,
            slider4: 40,
            slider5: 75
        };
    },


    methods: {
        resetSliders: function resetSliders() {
            this.slider1 = 25;
            this.slider2 = 50;
            this.slider3 = 60;
            this.slider4 = 40;
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiSlider: _UiSlider2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiSnackbar = __webpack_require__(32);

var _UiSnackbar2 = _interopRequireDefault(_UiSnackbar);

var _UiSnackbarContainer = __webpack_require__(243);

var _UiSnackbarContainer2 = _interopRequireDefault(_UiSnackbarContainer);

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiRadioGroup = __webpack_require__(7);

var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);

var _UiSwitch = __webpack_require__(15);

var _UiSwitch2 = _interopRequireDefault(_UiSwitch);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

var _UiTextbox = __webpack_require__(33);

var _UiTextbox2 = _interopRequireDefault(_UiTextbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            position: 'left',
            transition: 'slide',
            queueSnackbars: false,
            action: '',
            duration: 5,
            actionColor: 'accent',
            message: 'Post deleted'
        };
    },


    methods: {
        createSnackbar: function createSnackbar() {
            this.$refs.snackbarContainer.createSnackbar({
                message: this.message,
                action: this.action,
                actionColor: this.actionColor,
                duration: this.duration * 1000
            });
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiRadioGroup: _UiRadioGroup2.default,
        UiSnackbar: _UiSnackbar2.default,
        UiSnackbarContainer: _UiSnackbarContainer2.default,
        UiSwitch: _UiSwitch2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default,
        UiTextbox: _UiTextbox2.default
    }
};

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiSwitch = __webpack_require__(15);

var _UiSwitch2 = _interopRequireDefault(_UiSwitch);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            switch1: true,
            switch2: false,
            switch3: true,
            switch4: false,
            switch5: true
        };
    },


    components: {
        UiSwitch: _UiSwitch2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            showCollectionsTab: true,
            disableAuthorsTab: true
        };
    },


    methods: {
        selectFavouritesTab: function selectFavouritesTab() {
            this.$refs.tabSet1.setActiveTab('favourites');
        },
        toggleCollectionsTab: function toggleCollectionsTab() {
            this.showCollectionsTab = !this.showCollectionsTab;
        },
        toggleAuthorsTab: function toggleAuthorsTab() {
            this.disableAuthorsTab = !this.disableAuthorsTab;
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiIcon: _UiIcon2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default
    }
};

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

var _UiTextbox = __webpack_require__(33);

var _UiTextbox2 = _interopRequireDefault(_UiTextbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    data: function data() {
        return {
            textbox1: '',
            textbox2: '',
            textbox3: '',
            textbox4: 'John Doe',
            textbox5: 'Jane Doe',
            textbox6: '',
            textbox7: '',
            textbox8: '',
            textbox9: '',
            textbox10: '',
            textbox10Touched: false,
            textbox11: '',
            textbox12: 0,
            textbox13: '',
            textbox14: '',
            textbox15: 'My name is Jane Doe...'
        };
    },


    components: {
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default,
        UiTextbox: _UiTextbox2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIconButton = __webpack_require__(8);

var _UiIconButton2 = _interopRequireDefault(_UiIconButton);

var _UiMenu = __webpack_require__(13);

var _UiMenu2 = _interopRequireDefault(_UiMenu);

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

var _UiToolbar = __webpack_require__(245);

var _UiToolbar2 = _interopRequireDefault(_UiToolbar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var menuOptions = [{
    label: 'Settings'
}, {
    label: 'About'
}, {
    label: 'Help'
}]; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    data: function data() {
        return {
            menuOptions: menuOptions
        };
    },


    components: {
        UiIconButton: _UiIconButton2.default,
        UiMenu: _UiMenu2.default,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default,
        UiToolbar: _UiToolbar2.default
    }
};

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiTab = __webpack_require__(1);

var _UiTab2 = _interopRequireDefault(_UiTab);

var _UiTabs = __webpack_require__(2);

var _UiTabs2 = _interopRequireDefault(_UiTabs);

var _UiTooltip = __webpack_require__(17);

var _UiTooltip2 = _interopRequireDefault(_UiTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var theSimpsons = [{
    position: 'top center',
    name: 'Maggie Simpson',
    image: 'https://i.imgur.com/eK26qtK.jpg'
}, {
    position: 'bottom center',
    name: 'Lisa Simpson',
    image: 'https://i.imgur.com/wIb44g9.jpg'
}, {
    position: 'right middle',
    name: 'Bart Simpson',
    image: 'https://i.imgur.com/XkEz9zg.jpg'
}]; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var ImagePane = {
    name: 'image-pane',
    template: '\n        <div class="image-pane" ref="image" :style="{ \'background-image\': \'url(\' + image + \')\' }">\n            <ui-tooltip trigger="image" :position="tooltipPosition">{{ name }}</ui-tooltip>\n        </div>\n    ',

    props: {
        image: String,
        name: String,
        tooltipPosition: String
    },

    components: {
        UiTooltip: _UiTooltip2.default
    }
};

exports.default = {
    data: function data() {
        return {
            theSimpsons: theSimpsons
        };
    },


    components: {
        ImagePane: ImagePane,
        UiTab: _UiTab2.default,
        UiTabs: _UiTabs2.default,
        UiTooltip: _UiTooltip2.default
    }
};

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCloseButton = __webpack_require__(27);

var _UiCloseButton2 = _interopRequireDefault(_UiCloseButton);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-alert',

    props: {
        type: {
            type: String,
            default: 'info' // 'info', 'success', 'warning', or 'error'
        },
        removeIcon: {
            type: Boolean,
            default: false
        },
        dismissible: {
            type: Boolean,
            default: true
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-alert--type-' + this.type];
        }
    },

    methods: {
        dismissAlert: function dismissAlert() {
            this.$emit('dismiss');
        }
    },

    components: {
        UiCloseButton: _UiCloseButton2.default,
        UiIcon: _UiIcon2.default
    }
};

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _autofocus = __webpack_require__(34);

var _autofocus2 = _interopRequireDefault(_autofocus);

var _UiAutocompleteSuggestion = __webpack_require__(226);

var _UiAutocompleteSuggestion2 = _interopRequireDefault(_UiAutocompleteSuggestion);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

var _fuzzysearch = __webpack_require__(22);

var _fuzzysearch2 = _interopRequireDefault(_fuzzysearch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-autocomplete',

    props: {
        name: String,
        placeholder: String,
        value: {
            type: [String, Number],
            required: true
        },
        icon: String,
        iconPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        label: String,
        floatingLabel: {
            type: Boolean,
            default: false
        },
        help: String,
        error: String,
        readonly: {
            type: Boolean,
            default: false
        },
        disabled: {
            type: Boolean,
            default: false
        },
        type: {
            type: String,
            default: 'simple' // 'simple' or 'image'
        },
        suggestions: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        limit: {
            type: Number,
            default: 8
        },
        append: {
            type: Boolean,
            default: false
        },
        appendDelimiter: {
            type: String,
            default: ', '
        },
        minChars: {
            type: Number,
            default: 2
        },
        showOnUpDown: {
            type: Boolean,
            default: true
        },
        autofocus: {
            type: Boolean,
            default: false
        },
        filter: Function,
        highlightOnFirstMatch: {
            type: Boolean,
            default: true
        },
        cycleHighlight: {
            type: Boolean,
            default: true
        },
        keys: {
            type: Object,
            default: function _default() {
                return _config2.default.data.UiAutocomplete.keys;
            }
        },
        invalid: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            initialValue: this.value,
            isActive: false,
            isTouched: false,
            showDropdown: false,
            highlightedIndex: -1
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-autocomplete--type-' + this.type, 'ui-autocomplete--icon-position-' + this.iconPosition, { 'is-active': this.isActive }, { 'is-invalid': this.invalid }, { 'is-touched': this.isTouched }, { 'is-disabled': this.disabled }, { 'has-label': this.hasLabel }, { 'has-floating-label': this.hasFloatingLabel }];
        },
        labelClasses: function labelClasses() {
            return {
                'is-inline': this.hasFloatingLabel && this.isLabelInline,
                'is-floating': this.hasFloatingLabel && !this.isLabelInline
            };
        },
        hasLabel: function hasLabel() {
            return Boolean(this.label) || Boolean(this.$slots.default);
        },
        hasFloatingLabel: function hasFloatingLabel() {
            return this.hasLabel && this.floatingLabel;
        },
        isLabelInline: function isLabelInline() {
            return this.value.length === 0 && !this.isActive;
        },
        hasFeedback: function hasFeedback() {
            return Boolean(this.help) || Boolean(this.error);
        },
        showError: function showError() {
            return this.invalid && Boolean(this.error);
        },
        showHelp: function showHelp() {
            return !this.showError && Boolean(this.help);
        },
        matchingSuggestions: function matchingSuggestions() {
            var _this = this;

            return this.suggestions.filter(function (suggestion, index) {
                if (_this.filter) {
                    return _this.filter(suggestion, _this.value);
                }

                return _this.defaultFilter(suggestion, index);
            }).slice(0, this.limit);
        }
    },

    watch: {
        value: function value() {
            if (this.isActive && this.value.length >= this.minChars) {
                this.openDropdown();
            }

            this.highlightedIndex = this.highlightOnFirstMatch ? 0 : -1;
        }
    },

    mounted: function mounted() {
        document.addEventListener('click', this.onExternalClick);
    },
    beforeDestroy: function beforeDestroy() {
        document.removeEventListener('click', this.onExternalClick);
    },


    methods: {
        defaultFilter: function defaultFilter(suggestion) {
            var text = suggestion[this.keys.label] || suggestion;
            var query = this.value;

            if (typeof query === 'string') {
                query = query.toLowerCase();
            }

            return (0, _fuzzysearch2.default)(query, text.toLowerCase());
        },
        selectSuggestion: function selectSuggestion(suggestion) {
            var _this2 = this;

            var value = void 0;

            if (this.append) {
                value += this.appendDelimiter + (suggestion[this.keys.value] || suggestion);
            } else {
                value = suggestion[this.keys.value] || suggestion;
            }

            this.updateValue(value);
            this.$emit('select', suggestion);

            this.$nextTick(function () {
                _this2.closeDropdown();
                _this2.$refs.input.focus();
            });
        },
        highlightSuggestion: function highlightSuggestion(index) {
            var firstIndex = 0;
            var lastIndex = this.$refs.suggestions.length - 1;

            if (index === -2) {
                // Allows for cycling from first to last when cycleHighlight is disabled
                index = lastIndex;
            } else if (index < firstIndex) {
                index = this.cycleHighlight ? lastIndex : index;
            } else if (index > lastIndex) {
                index = this.cycleHighlight ? firstIndex : -1;
            }

            this.highlightedIndex = index;

            if (this.showOnUpDown) {
                this.openDropdown();
            }

            if (index < firstIndex || index > lastIndex) {
                this.$emit('highlight-overflow', index);
            } else {
                this.$emit('highlight', this.$refs.suggestions[index].suggestion, index);
            }
        },
        selectHighlighted: function selectHighlighted(index, e) {
            if (this.showDropdown && this.$refs.suggestions.length > 0) {
                e.preventDefault();
                this.selectSuggestion(this.$refs.suggestions[index].suggestion);
            }
        },
        openDropdown: function openDropdown() {
            if (!this.showDropdown) {
                this.showDropdown = true;
                this.$emit('dropdown-open');
            }
        },
        closeDropdown: function closeDropdown() {
            var _this3 = this;

            if (this.showDropdown) {
                this.$nextTick(function () {
                    _this3.showDropdown = false;
                    _this3.highlightedIndex = -1;
                    _this3.$emit('dropdown-close');
                });
            }
        },
        updateValue: function updateValue(value) {
            this.$emit('input', value);
        },
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);
        },
        onChange: function onChange(e) {
            this.$emit('change', this.value, e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);

            if (!this.isTouched) {
                this.isTouched = true;
                this.$emit('touch');
            }
        },
        onExternalClick: function onExternalClick(e) {
            if (!this.$el.contains(e.target) && this.showDropdown) {
                this.closeDropdown();
            }
        },
        reset: function reset() {
            // Blur input before resetting to avoid "required" errors
            // when the input is blurred after reset
            if (document.isActiveElement === this.$refs.input) {
                document.isActiveElement.blur();
            }

            // Reset state
            this.$emit('input', this.initialValue);
            this.isTouched = false;
        }
    },

    components: {
        UiAutocompleteSuggestion: _UiAutocompleteSuggestion2.default,
        UiIcon: _UiIcon2.default
    },

    directives: {
        autofocus: _autofocus2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-autocomplete-suggestion',

    props: {
        suggestion: {
            type: [String, Object],
            required: true
        },
        type: {
            type: String,
            default: 'simple' // 'simple' or 'image'
        },
        highlighted: {
            type: Boolean,
            default: false
        },
        keys: {
            type: Object,
            default: function _default() {
                return {
                    label: 'label',
                    image: 'image'
                };
            }
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-autocomplete-suggestion--type-' + this.type, { 'is-highlighted': this.highlighted }];
        },
        imageStyle: function imageStyle() {
            return { 'background-image': 'url(' + this.suggestion[this.keys.image] + ')' };
        }
    }
};

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-breadcrumb',

    props: {
        item: {
            type: Object,
            required: true
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-breadcrumb--type-' + this.type];
        }
    },

    methods: {},

    components: {}
};

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiBreadcrumb = __webpack_require__(227);

var _UiBreadcrumb2 = _interopRequireDefault(_UiBreadcrumb);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-breadcrumb-container',

    props: {
        items: {
            type: Array,
            default: [],
            required: true
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-breadcrumb-container--type-' + this.type];
        }
    },

    methods: {},

    components: {
        UiBreadcrumb: _UiBreadcrumb2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiPopover = __webpack_require__(9);

var _UiPopover2 = _interopRequireDefault(_UiPopover);

var _UiProgressCircular = __webpack_require__(14);

var _UiProgressCircular2 = _interopRequireDefault(_UiProgressCircular);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-button',

    props: {
        type: {
            type: String,
            default: 'primary' // 'primary' or 'secondary'
        },
        buttonType: {
            type: String,
            default: 'submit' // HTML default
        },
        color: {
            type: String,
            default: 'default' // 'default', 'primary', 'accent', 'green', 'orange', or 'red'
        },
        size: {
            type: String,
            default: 'normal' // 'small', 'normal', 'large'
        },
        raised: {
            type: Boolean,
            default: false
        },
        icon: String,
        iconPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        loading: {
            type: Boolean,
            default: false
        },
        hasDropdown: {
            type: Boolean,
            default: false
        },
        dropdownPosition: {
            type: String,
            default: 'bottom left'
        },
        openDropdownOn: {
            type: String,
            default: 'click' // 'click', 'hover', 'focus', or 'always'
        },
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            focusRing: {
                top: 0,
                left: 0,
                size: 0
            }
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-button--type-' + this.type, 'ui-button--color-' + this.color, 'ui-button--icon-position-' + this.iconPosition, 'ui-button--size-' + this.size, { 'is-raised': this.raised }, { 'is-loading': this.loading }, { 'is-disabled': this.disabled || this.loading }, { 'has-dropdown': this.hasDropdown }];
        },
        focusRingStyle: function focusRingStyle() {
            return {
                height: this.focusRing.size + 'px',
                width: this.focusRing.size + 'px',
                top: this.focusRing.top + 'px',
                left: this.focusRing.left + 'px'
            };
        },
        progressColor: function progressColor() {
            if (this.color === 'default' || this.type === 'secondary') {
                return 'black';
            }

            return 'white';
        }
    },

    methods: {
        onClick: function onClick(e) {
            this.$emit('click', e);
        },
        onFocus: function onFocus() {
            var bounds = {
                width: this.$el.clientWidth,
                height: this.$el.clientHeight
            };

            this.focusRing.size = bounds.width - 16; // 8px of padding on left and right
            this.focusRing.top = -1 * (this.focusRing.size - bounds.height) / 2;
            this.focusRing.left = (bounds.width - this.focusRing.size) / 2;
        },
        onDropdownOpen: function onDropdownOpen() {
            this.$emit('dropdown-open');
        },
        onDropdownClose: function onDropdownClose() {
            this.$emit('dropdown-close');
        },
        openDropdown: function openDropdown() {
            if (this.$refs.dropdown) {
                this.$refs.dropdown.open();
            }
        },
        closeDropdown: function closeDropdown() {
            if (this.$refs.dropdown) {
                this.$refs.dropdown.close();
            }
        },
        toggleDropdown: function toggleDropdown() {
            if (this.$refs.dropdown) {
                this.$refs.dropdown.toggle();
            }
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiPopover: _UiPopover2.default,
        UiProgressCircular: _UiProgressCircular2.default,
        UiRippleInk: _UiRippleInk2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCalendarControls = __webpack_require__(230);

var _UiCalendarControls2 = _interopRequireDefault(_UiCalendarControls);

var _UiCalendarMonth = __webpack_require__(231);

var _UiCalendarMonth2 = _interopRequireDefault(_UiCalendarMonth);

var _date = __webpack_require__(11);

var _date2 = _interopRequireDefault(_date);

var _elementScroll = __webpack_require__(35);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-calendar',

    props: {
        value: Date,
        minDate: Date,
        maxDate: Date,
        lang: {
            type: Object,
            default: function _default() {
                return _date2.default.defaultLang;
            }
        },
        yearRange: {
            type: Array,
            default: function _default() {
                var thisYear = new Date().getFullYear();

                // Generates a range of 200 years
                // (100 years into the past and 100 years into the future, including the current year)
                return Array.apply(null, Array(200)).map(function (item, index) {
                    return thisYear - 100 + index;
                });
            }
        },
        dateFilter: Function,
        color: {
            type: String,
            default: 'primary' // 'primary' or 'accent'
        },
        orientation: {
            type: String,
            default: 'portrait' // 'portrait' or 'landscape'
        }
    },

    data: function data() {
        return {
            today: new Date(),
            dateInView: this.getDateInRange(this.value, new Date()),
            showYearPicker: false
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-calendar--color-' + this.color, 'ui-calendar--orientation-' + this.orientation];
        },
        headerYear: function headerYear() {
            return this.value ? this.value.getFullYear() : this.today.getFullYear();
        },
        headerDay: function headerDay() {
            return this.value ? _date2.default.getDayAbbreviated(this.value, this.lang) : _date2.default.getDayAbbreviated(this.today, this.lang);
        },
        headerDate: function headerDate() {
            var date = this.value ? this.value : this.today;

            return _date2.default.getMonthAbbreviated(date, this.lang) + ' ' + _date2.default.getDayOfMonth(date, this.lang);
        }
    },

    watch: {
        value: function value() {
            if (this.value) {
                this.dateInView = _date2.default.clone(this.value);
            }
        },
        showYearPicker: function showYearPicker() {
            var _this = this;

            if (this.showYearPicker) {
                this.$nextTick(function () {
                    var el = _this.$refs.years.querySelector('.is-selected') || _this.$refs.years.querySelector('.is-current-year');

                    (0, _elementScroll.scrollIntoView)(el, { marginTop: 126 });
                });
            }
        }
    },

    methods: {
        selectYear: function selectYear(year) {
            var newDate = _date2.default.clone(this.dateInView);
            newDate.setFullYear(year);

            this.dateInView = this.getDateInRange(newDate);
            this.showYearPicker = false;
        },
        getDateInRange: function getDateInRange(date, fallback) {
            date = date || fallback;

            if (this.minDate && date.getTime() < this.minDate.getTime()) {
                return this.minDate;
            }

            if (this.maxDate && date.getTime() > this.maxDate.getTime()) {
                return this.maxDate;
            }

            return date;
        },
        getYearClasses: function getYearClasses(year) {
            return {
                'is-current-year': this.isYearCurrent(year),
                'is-selected': this.isYearSelected(year)
            };
        },
        isYearCurrent: function isYearCurrent(year) {
            return year === this.today.getFullYear();
        },
        isYearSelected: function isYearSelected(year) {
            return this.value && year === this.value.getFullYear();
        },
        isYearOutOfRange: function isYearOutOfRange(year) {
            if (this.minDate && year < this.minDate.getFullYear()) {
                return true;
            }

            if (this.maxDate && year > this.maxDate.getFullYear()) {
                return true;
            }

            return false;
        },
        onDateSelect: function onDateSelect(date) {
            this.$emit('input', date);
            this.$emit('date-select', date);
        },
        onGoToDate: function onGoToDate(date) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { isForward: true };

            this.$refs.month.goToDate(date, options);
        },
        onMonthChange: function onMonthChange(newDate) {
            this.dateInView = newDate;
            this.$emit('month-change', newDate);
        }
    },

    components: {
        UiCalendarControls: _UiCalendarControls2.default,
        UiCalendarMonth: _UiCalendarMonth2.default
    }
};

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiIconButton = __webpack_require__(8);

var _UiIconButton2 = _interopRequireDefault(_UiIconButton);

var _date = __webpack_require__(11);

var _date2 = _interopRequireDefault(_date);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-calendar-controls',

    props: {
        lang: Object,
        dateInView: Date,
        minDate: Date,
        maxDate: Date
    },

    computed: {
        monthAndYear: function monthAndYear() {
            return _date2.default.getMonthFull(this.dateInView, this.lang) + ' ' + this.dateInView.getFullYear();
        },
        previousMonthDisabled: function previousMonthDisabled() {
            if (!this.minDate) {
                return false;
            }

            var lastDayOfPreviousMonth = _date2.default.clone(this.dateInView);

            // Setting the date to zero goes to the last day in previous month
            lastDayOfPreviousMonth.setDate(0);

            return this.minDate.getTime() > lastDayOfPreviousMonth.getTime();
        },
        nextMonthDisabled: function nextMonthDisabled() {
            if (!this.maxDate) {
                return false;
            }

            var firstDayOfNextMonth = _date2.default.clone(this.dateInView);

            // Set the month ot next month, and the day to the first day
            // If the month overflows, it increments the year
            firstDayOfNextMonth.setMonth(this.dateInView.getMonth() + 1, 1);

            return this.maxDate.getTime() < firstDayOfNextMonth.getTime();
        }
    },

    methods: {
        goToPreviousMonth: function goToPreviousMonth() {
            var date = _date2.default.clone(this.dateInView);
            date.setMonth(date.getMonth() - 1);

            this.goToDate(date, { isForward: false });
        },
        goToNextMonth: function goToNextMonth() {
            var date = _date2.default.clone(this.dateInView);
            date.setMonth(date.getMonth() + 1);

            this.goToDate(date, { isForward: true });
        },
        goToDate: function goToDate(date) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { isForward: true };

            this.$emit('go-to-date', date, options);
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiIconButton: _UiIconButton2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCalendarWeek = __webpack_require__(232);

var _UiCalendarWeek2 = _interopRequireDefault(_UiCalendarWeek);

var _date = __webpack_require__(11);

var _date2 = _interopRequireDefault(_date);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-calendar-month',

    props: {
        lang: Object,
        dateFilter: Function,
        dateInView: Date,
        selected: Date,
        maxDate: Date,
        minDate: Date
    },

    data: function data() {
        return {
            dateOutOfView: _date2.default.clone(this.dateInView),
            isSliding: false,
            slideDirection: '',

            // Detects IE and not Edge: http://stackoverflow.com/a/22082397
            isIE: Boolean(window.MSInputMethodContext) && Boolean(document.documentMode),
            ieTimeout: null
        };
    },


    computed: {
        weekClasses: function weekClasses() {
            var _ref;

            return [(_ref = {}, _ref['ui-calendar-month--slide-' + this.slideDirection] = this.isSliding, _ref), { 'is-sliding': this.isSliding }];
        },
        currentWeekStartDates: function currentWeekStartDates() {
            return this.getWeekStartDates(this.dateInView);
        },
        otherWeekStartDates: function otherWeekStartDates() {
            return this.getWeekStartDates(this.dateOutOfView);
        }
    },

    methods: {
        getWeekStartDates: function getWeekStartDates(dateInWeek) {
            var date = _date2.default.clone(dateInWeek);

            date.setDate(1); // Jump to the start of the month
            date = _date2.default.moveToDayOfWeek(date, 0); // Jump to the start of the week

            var current = _date2.default.clone(date);
            current.setDate(current.getDate() + 7);

            var starts = [date];
            var month = current.getMonth();

            while (current.getMonth() === month) {
                starts.push(_date2.default.clone(current));
                current.setDate(current.getDate() + 7);
            }

            return starts;
        },
        goToDate: function goToDate(date) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { isForward: true };

            this.isSliding = true;
            this.slideDirection = options.isForward ? 'left' : 'right';
            this.dateOutOfView = _date2.default.clone(date);

            // A hack for IE: sometimes when rapidly scrolling through months, the
            // transitionend event is not fired, causing the month to not change.
            // This ensures that onTransitionEnd() is called after 300ms.
            if (this.isIE) {
                this.ieTimeout = setTimeout(this.onTransitionEnd, 300);
            }
        },
        onDateSelect: function onDateSelect(date) {
            this.$emit('date-select', date);
        },
        onTransitionEnd: function onTransitionEnd() {
            if (this.ieTimeout) {
                clearTimeout(this.ieTimeout);
                this.ieTimeout = null;

                // Abort if the transition has already ended
                if (!this.isSliding) {
                    return;
                }
            }

            this.isSliding = false;
            this.slideDirection = '';

            this.$emit('change', _date2.default.clone(this.dateOutOfView));
            this.$emit('transition-end');
        }
    },

    components: {
        UiCalendarWeek: _UiCalendarWeek2.default
    }
};

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _date = __webpack_require__(11);

var _date2 = _interopRequireDefault(_date);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-calendar-week',

    props: {
        month: Number,
        weekStart: Date,
        minDate: Date,
        maxDate: Date,
        selected: Date,
        dateFilter: Function,
        visible: {
            type: Boolean,
            default: true
        }
    },

    data: function data() {
        return {
            today: new Date()
        };
    },


    computed: {
        dates: function dates() {
            return this.buildDays(this.weekStart);
        }
    },

    methods: {
        buildDays: function buildDays(weekStart) {
            var days = [_date2.default.clone(weekStart)];
            var day = _date2.default.clone(weekStart);

            for (var i = 1; i <= 6; i++) {
                day = _date2.default.clone(day);
                day.setDate(day.getDate() + 1);

                days.push(day);
            }

            return days;
        },
        getDateClasses: function getDateClasses(date) {
            return [{ 'is-today': _date2.default.isSameDay(date, this.today) }, { 'is-in-other-month': this.isDateInOtherMonth(date) }, { 'is-selected': this.selected && _date2.default.isSameDay(date, this.selected) }, { 'is-disabled': this.isDateDisabled(date) }];
        },
        selectDate: function selectDate(date) {
            if (this.isDateDisabled(date)) {
                return;
            }

            this.$emit('date-select', date);
        },
        getDayOfMonth: function getDayOfMonth(date) {
            return _date2.default.getDayOfMonth(date);
        },
        isDateInOtherMonth: function isDateInOtherMonth(date) {
            return this.month !== date.getMonth();
        },
        isDateDisabled: function isDateDisabled(date) {
            var isDisabled = this.minDate && _date2.default.isBefore(date, this.minDate) || this.maxDate && _date2.default.isAfter(date, this.maxDate);

            if (isDisabled) {
                return true;
            }

            return this.dateFilter ? !this.dateFilter(date) : false;
        }
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vue = __webpack_require__(21);

var _vue2 = _interopRequireDefault(_vue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    Components: {
        Title: {
            template: '\n                <h3 class="ui-card__title"><slot></slot></h3>\n            '
        },
        Subtitle: {
            template: '\n                <h4 class="ui-card__subtitle"><slot></slot></h4>\n            '
        },
        Divider: {
            template: '\n                <div class="ui-card__divider"></div>\n            '
        }
    },
    name: 'ui-card',

    props: {
        type: {
            type: String,
            default: 'default' // 'default', 'small'.... more to come
        },
        raised: {
            type: Boolean,
            default: false
        },
        title: {
            type: String,
            default: ''
        },
        subtitle: {
            type: String,
            default: null
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-card--type-' + this.type, { 'is-raised': this.raised }];
        }
    },
    methods: {
        dismissAlert: function dismissAlert() {
            this.$emit('dismiss');
        }
    },

    components: {}
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _util = __webpack_require__(12);

exports.default = {
    name: 'ui-checkbox',

    props: {
        name: String,
        label: String,
        value: {
            required: true
        },
        trueValue: {
            default: true
        },
        falseValue: {
            default: false
        },
        submittedValue: {
            type: String,
            default: 'on' // HTML default
        },
        checked: {
            type: Boolean,
            default: false
        },
        boxPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        color: {
            type: String,
            default: 'primary' // 'primary' or 'accent'
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false,
            isChecked: (0, _util.looseEqual)(this.value, this.trueValue) || this.checked
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-checkbox--color-' + this.color, 'ui-checkbox--box-position-' + this.boxPosition, { 'is-checked': this.isChecked }, { 'is-active': this.isActive }, { 'is-disabled': this.disabled }];
        }
    },

    watch: {
        value: function value() {
            this.isChecked = (0, _util.looseEqual)(this.value, this.trueValue);
        }
    },

    created: function created() {
        this.$emit('input', this.isChecked ? this.trueValue : this.falseValue);
    },


    methods: {
        onClick: function onClick(e) {
            this.isChecked = e.target.checked;
            this.$emit('input', e.target.checked ? this.trueValue : this.falseValue);
        },
        onChange: function onChange(e) {
            this.$emit('change', this.isChecked ? this.trueValue : this.falseValue, e);
        },
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);
        }
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCheckbox = __webpack_require__(26);

var _UiCheckbox2 = _interopRequireDefault(_UiCheckbox);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

var _util = __webpack_require__(12);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-checkbox-group',

    props: {
        name: String,
        options: {
            type: Array,
            required: true
        },
        value: {
            type: Array,
            required: true
        },
        keys: {
            type: Object,
            default: function _default() {
                return _config2.default.data.UiCheckboxGroup.keys;
            }
        },
        label: String,
        color: {
            type: String,
            default: 'primary' // 'primary' or 'accent'
        },
        boxPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        vertical: {
            type: Boolean,
            default: false
        },
        help: String,
        error: String,
        invalid: {
            type: Boolean,
            default: false
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false,
            ignoreChange: false,
            checkboxValues: [],
            initialValue: JSON.parse(JSON.stringify(this.value))
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-checkbox-group--color-' + this.color, 'ui-checkbox-group--box-position-' + this.boxPosition, { 'is-vertical': this.vertical }, { 'is-active': this.isActive }, { 'is-invalid': this.invalid }, { 'is-disabled': this.disabled }];
        },
        hasFeedback: function hasFeedback() {
            return Boolean(this.help) || this.showError;
        },
        showError: function showError() {
            return this.invalid && Boolean(this.error);
        },
        showHelp: function showHelp() {
            return !this.showError && Boolean(this.help);
        }
    },

    methods: {
        reset: function reset() {
            var _this = this;

            this.ignoreChange = true;
            this.options.forEach(function (option, index) {
                _this.checkboxValues[index] = _this.isOptionCheckedByDefault(option);
            });
            this.ignoreChange = false;

            this.$emit('input', this.initialValue.length > 0 ? [].concat(this.initialValue) : []);
        },
        isOptionCheckedByDefault: function isOptionCheckedByDefault(option) {
            return (0, _util.looseIndexOf)(this.initialValue, option[this.keys.value] || option) > -1;
        },
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);
        },
        onChange: function onChange(args, option) {
            if (this.ignoreChange) {
                return;
            }

            var checked = args[0];
            var e = args[1];

            var value = [];
            var optionValue = option[this.keys.value] || option;
            var i = (0, _util.looseIndexOf)(this.value, optionValue);

            if (checked && i < 0) {
                value = this.value.concat(optionValue);
            }

            if (!checked && i > -1) {
                value = this.value.slice(0, i).concat(this.value.slice(i + 1));
            }

            this.$emit('input', value);
            this.$emit('change', value, e);
        }
    },

    components: {
        UiCheckbox: _UiCheckbox2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-close-button',

    props: {
        size: {
            type: String,
            default: 'normal' // 'small', 'normal', or 'large'
        },
        color: {
            type: String,
            default: 'black' // 'black', or 'white'
        },
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-close-button--size-' + this.size, 'ui-close-button--color-' + this.color, { 'is-disabled': this.disabled || this.loading }];
        }
    },

    methods: {
        onClick: function onClick(e) {
            this.$emit('click', e);
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiRippleInk: _UiRippleInk2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

var _RespondsToWindowResize = __webpack_require__(19);

var _RespondsToWindowResize2 = _interopRequireDefault(_RespondsToWindowResize);

var _uuid = __webpack_require__(36);

var _uuid2 = _interopRequireDefault(_uuid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-collapsible',

    props: {
        open: {
            type: Boolean,
            default: false
        },
        title: String,
        removeIcon: {
            type: Boolean,
            default: false
        },
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        disabled: {
            type: Boolean,
            default: false
        },
        type: {
            type: String,
            default: '' // flat
        }
    },

    data: function data() {
        return {
            height: 0,
            isReady: false,
            isOpen: this.open,
            useInitialHeight: false,
            id: _uuid2.default.short('ui-collapsible-')
        };
    },


    computed: {
        classes: function classes() {
            return [{ 'is-open': this.isOpen }, { 'is-disabled': this.disabled }, { 'ui-collapsible--flat': this.type === 'flat' }];
        },
        calculatedHeight: function calculatedHeight() {
            return this.height === 0 || this.useInitialHeight ? 'initial' : this.height + 'px';
        }
    },

    watch: {
        open: function open() {
            if (this.isOpen !== this.open) {
                this.isOpen = this.open;
            }
        }
    },

    mounted: function mounted() {
        var _this = this;

        this.isReady = true;
        this.refreshHeight();

        this.$on('window-resize', function () {
            _this.refreshHeight();
        });
    },


    methods: {
        onEnter: function onEnter() {
            this.$emit('open');
            this.refreshHeight();
        },
        onLeave: function onLeave() {
            this.$emit('close');
        },
        toggleCollapsible: function toggleCollapsible() {
            if (this.disabled) {
                return;
            }

            this.isOpen = !this.isOpen;
        },
        refreshHeight: function refreshHeight() {
            var _this2 = this;

            var body = this.$refs.body;

            this.useInitialHeight = true;
            body.style.display = 'block';

            this.$nextTick(function () {
                _this2.height = body.scrollHeight + 1;
                _this2.useInitialHeight = false;

                if (!_this2.isOpen) {
                    body.style.display = 'none';
                }
            });
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiRippleInk: _UiRippleInk2.default
    },

    mixins: [_RespondsToWindowResize2.default]
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiModal = __webpack_require__(16);

var _UiModal2 = _interopRequireDefault(_UiModal);

var _classlist = __webpack_require__(10);

var _classlist2 = _interopRequireDefault(_classlist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-confirm',

    props: {
        title: {
            type: String,
            default: 'UiConfirm'
        },
        type: {
            type: String,
            default: 'primary' // any of the color prop values of UiButton
        },
        confirmButtonText: {
            type: String,
            default: 'OK'
        },
        confirmButtonIcon: String,
        denyButtonText: {
            type: String,
            default: 'Cancel'
        },
        denyButtonIcon: String,
        autofocus: {
            type: String,
            default: 'deny-button' // 'confirm-button', 'deny-button' or 'none'
        },
        closeOnConfirm: {
            type: Boolean,
            default: true
        },
        dismissOn: String,
        transition: String,
        loading: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        confirmButtonColor: function confirmButtonColor() {
            var typeToColor = {
                default: 'default',
                primary: 'primary',
                accent: 'accent',
                success: 'green',
                warning: 'orange',
                danger: 'red'
            };

            return typeToColor[this.type];
        }
    },

    methods: {
        open: function open() {
            this.$refs.modal.open();
        },
        close: function close() {
            this.$refs.modal.close();
        },
        confirm: function confirm() {
            this.$emit('confirm');

            if (this.closeOnConfirm) {
                this.$refs.modal.close();
            }
        },
        deny: function deny() {
            this.$refs.modal.close();
            this.$emit('deny');
        },
        onModalOpen: function onModalOpen() {
            var button = void 0;

            if (this.autofocus === 'confirm-button') {
                button = this.$refs.confirmButton.$el;
            } else if (this.autofocus === 'deny-button') {
                button = this.$refs.denyButton.$el;
            }

            if (button) {
                _classlist2.default.add(button, 'has-focus-ring');
                button.addEventListener('blur', this.removeAutoFocus);
                button.focus();
            }

            this.$emit('open');
        },
        onModalClose: function onModalClose() {
            this.$emit('close');
        },
        removeAutoFocus: function removeAutoFocus() {
            var button = void 0;

            if (this.autofocus === 'confirm-button') {
                button = this.$refs.confirmButton.$el;
            } else if (this.autofocus === 'deny-button') {
                button = this.$refs.denyButton.$el;
            }

            if (button) {
                _classlist2.default.remove(button, 'has-focus-ring');

                // This listener should run only once
                button.removeEventListener('blur', this.removeAutoFocus);
            }
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiModal: _UiModal2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

var _UiCalendar = __webpack_require__(229);

var _UiCalendar2 = _interopRequireDefault(_UiCalendar);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiModal = __webpack_require__(16);

var _UiModal2 = _interopRequireDefault(_UiModal);

var _UiPopover = __webpack_require__(9);

var _UiPopover2 = _interopRequireDefault(_UiPopover);

var _date = __webpack_require__(11);

var _date2 = _interopRequireDefault(_date);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-datepicker',

    props: {
        name: String,
        value: Date,
        minDate: Date,
        maxDate: Date,
        yearRange: Array,
        lang: {
            type: Object,
            default: function _default() {
                return _date2.default.defaultLang;
            }
        },
        customFormatter: Function,
        dateFilter: Function,
        color: {
            type: String,
            default: 'primary' // 'primary' or 'accent'
        },
        orientation: {
            type: String,
            default: 'portrait' // 'portrait' or 'landscape'
        },
        pickerType: {
            type: String,
            default: 'popover' // 'popover' or 'modal'
        },
        okButtonText: {
            type: String,
            default: 'OK'
        },
        cancelButtonText: {
            type: String,
            default: 'Cancel'
        },
        placeholder: String,
        icon: String,
        iconPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        label: String,
        floatingLabel: {
            type: Boolean,
            default: false
        },
        invalid: {
            type: Boolean,
            default: false
        },
        help: String,
        error: String,
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false,
            isTouched: false,
            valueAtModalOpen: null,
            initialValue: JSON.stringify(this.value)
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-datepicker--icon-position-' + this.iconPosition, 'ui-datepicker--orientation-' + this.orientation, { 'is-active': this.isActive }, { 'is-invalid': this.invalid }, { 'is-touched': this.isTouched }, { 'is-disabled': this.disabled }, { 'has-label': this.hasLabel }, { 'has-floating-label': this.hasFloatingLabel }];
        },
        labelClasses: function labelClasses() {
            return {
                'is-inline': this.hasFloatingLabel && this.isLabelInline,
                'is-floating': this.hasFloatingLabel && !this.isLabelInline
            };
        },
        hasLabel: function hasLabel() {
            return Boolean(this.label) || Boolean(this.$slots.default);
        },
        hasFloatingLabel: function hasFloatingLabel() {
            return this.hasLabel && this.floatingLabel;
        },
        isLabelInline: function isLabelInline() {
            return !this.value && !this.isActive;
        },
        hasFeedback: function hasFeedback() {
            return Boolean(this.help) || Boolean(this.error);
        },
        showError: function showError() {
            return this.invalid && Boolean(this.error);
        },
        showHelp: function showHelp() {
            return !this.showError && Boolean(this.help);
        },
        displayText: function displayText() {
            if (!this.value) {
                return '';
            }

            return this.customFormatter ? this.customFormatter(this.value, this.lang) : _date2.default.humanize(this.value, this.lang);
        },
        hasDisplayText: function hasDisplayText() {
            return Boolean(this.displayText.length);
        },
        submittedValue: function submittedValue() {
            return this.value ? this.value.getFullYear() + '-' + this.value.getMonth() + '-' + this.value.getDate() : '';
        },
        usesPopover: function usesPopover() {
            return this.pickerType === 'popover';
        },
        usesModal: function usesModal() {
            return this.pickerType === 'modal';
        }
    },

    mounted: function mounted() {
        document.addEventListener('click', this.onExternalClick);
    },
    beforeDestroy: function beforeDestroy() {
        document.removeEventListener('click', this.onExternalClick);
    },


    methods: {
        onDateSelect: function onDateSelect(date) {
            this.$emit('input', date);
            this.closePicker();
        },
        openPicker: function openPicker() {
            if (this.disabled) {
                return;
            }

            this.$refs[this.usesModal ? 'modal' : 'popover'].open();
        },
        closePicker: function closePicker() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { autoBlur: false };

            if (this.usesPopover) {
                this.$refs.popover.close();
            }

            if (options.autoBlur) {
                this.isActive = false;
            } else {
                this.$refs.label.focus();
            }
        },
        onClick: function onClick() {
            if (this.usesModal && !this.disabled) {
                this.$refs.modal.open();
            }
        },
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);

            if (this.usesPopover && this.$refs.popover.dropInstance.isOpened()) {
                this.closePicker({ autoBlur: true });
            }
        },
        onPickerOpen: function onPickerOpen() {
            if (this.usesModal) {
                this.valueAtModalOpen = this.value ? _date2.default.clone(this.value) : null;
            }

            this.isActive = true;
            this.$emit('open');
        },
        onPickerClose: function onPickerClose() {
            this.$emit('close');

            if (!this.isTouched) {
                this.isTouched = true;
                this.$emit('touch');
            }
        },
        onPickerCancel: function onPickerCancel() {
            this.$emit('input', this.valueAtModalOpen);
            this.$refs.modal.close();
        },
        onExternalClick: function onExternalClick(e) {
            if (this.disabled) {
                return;
            }

            var clickWasInternal = this.$el.contains(e.target) || this.$refs[this.usesPopover ? 'popover' : 'modal'].$el.contains(e.target);

            if (clickWasInternal) {
                return;
            }

            if (this.isActive) {
                this.isActive = false;
            }
        },
        reset: function reset() {
            this.$emit('input', JSON.parse(this.initialValue));
        },
        resetTouched: function resetTouched() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { touched: false };

            this.isTouched = options.touched;
        }
    },

    components: {
        UiButton: _UiButton2.default,
        UiCalendar: _UiCalendar2.default,
        UiIcon: _UiIcon2.default,
        UiModal: _UiModal2.default,
        UiPopover: _UiPopover2.default
    }
};

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _UiTooltip = __webpack_require__(17);

var _UiTooltip2 = _interopRequireDefault(_UiTooltip);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-fab',

    props: {
        size: {
            type: String,
            default: 'normal' // 'normal' or 'small'
        },
        color: {
            type: String,
            default: 'default' // 'default', primary', or 'accent'
        },
        icon: String,
        ariaLabel: String,
        tooltip: String,
        openTooltipOn: String,
        tooltipPosition: String,
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-fab--color-' + this.color, 'ui-fab--size-' + this.size];
        }
    },

    methods: {
        onClick: function onClick(e) {
            this.$emit('click', e);
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiRippleInk: _UiRippleInk2.default,
        UiTooltip: _UiTooltip2.default
    }
};

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-fileupload',

    props: {
        name: {
            type: String,
            required: true
        },
        label: String,
        accept: String,
        multiple: {
            type: Boolean,
            default: false
        },
        required: {
            type: Boolean,
            default: false
        },
        type: {
            type: String,
            default: 'primary' // 'primary' or 'secondary'
        },
        color: {
            type: String,
            default: 'default' // 'default', 'primary', 'accent'
        },
        size: {
            type: String,
            default: 'normal' // 'small', 'normal', 'large'
        },
        raised: {
            type: Boolean,
            default: false
        },
        iconPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false,
            hasSelection: false,
            hasMultiple: false,
            displayText: '',
            focusRing: {
                top: 0,
                left: 0,
                size: 0,
                initialized: false
            }
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-fileupload--type-' + this.type, 'ui-fileupload--color-' + this.color, 'ui-fileupload--icon-position-' + this.iconPosition, 'ui-fileupload--size-' + this.size, { 'is-active': this.isActive }, { 'is-multiple': this.hasMultiple }, { 'is-raised': this.raised }, { 'is-disabled': this.disabled }];
        },
        placeholder: function placeholder() {
            if (this.label) {
                return this.label;
            }

            return this.multiple ? 'Choose files' : 'Choose a file';
        },
        focusRingStyle: function focusRingStyle() {
            return {
                height: this.focusRing.size + 'px',
                width: this.focusRing.size + 'px',
                top: this.focusRing.top + 'px',
                left: this.focusRing.left + 'px'
            };
        }
    },

    methods: {
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);

            if (!this.focusRing.initialized) {
                this.initializeFocusRing();
            }
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);
        },
        onChange: function onChange(e) {
            var _this = this;

            var displayText = void 0;
            var input = this.$refs.input;

            if (input.files && input.files.length > 1) {
                displayText = input.files.length + ' files selected';
            } else {
                displayText = e.target.value.split('\\').pop();
            }

            if (displayText) {
                this.hasSelection = true;
                this.displayText = displayText;
                this.hasMultiple = input.files.length > 1;

                this.$nextTick(function () {
                    return _this.refreshFocusRing();
                });
            }

            this.$emit('change', input.files, e);
        },
        initializeFocusRing: function initializeFocusRing() {
            this.refreshFocusRing();
            this.focusRing.initialized = true;
        },
        refreshFocusRing: function refreshFocusRing() {
            var bounds = {
                width: this.$el.clientWidth,
                height: this.$el.clientHeight
            };

            this.focusRing.size = bounds.width - 16; // 8px of padding on left and right
            this.focusRing.top = -1 * (this.focusRing.size - bounds.height) / 2;
            this.focusRing.left = (bounds.width - this.focusRing.size) / 2;
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiRippleInk: _UiRippleInk2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-icon',

    props: {
        icon: String,
        iconSet: {
            type: String,
            default: 'material-icons'
        },
        ariaLabel: String,
        removeText: {
            type: Boolean,
            default: false
        },
        useSvg: {
            type: Boolean,
            default: false
        }
    }
};

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiPopover = __webpack_require__(9);

var _UiPopover2 = _interopRequireDefault(_UiPopover);

var _UiProgressCircular = __webpack_require__(14);

var _UiProgressCircular2 = _interopRequireDefault(_UiProgressCircular);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _UiTooltip = __webpack_require__(17);

var _UiTooltip2 = _interopRequireDefault(_UiTooltip);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-icon-button',

    props: {
        type: {
            type: String,
            default: 'primary' // 'primary' or 'secondary'
        },
        buttonType: {
            type: String,
            default: 'button'
        },
        color: {
            type: String,
            default: 'default' // 'default', 'primary', 'accent', 'green', 'orange', or 'red'
        },
        size: {
            type: String,
            default: 'normal' // 'small', normal', or 'large'
        },
        icon: String,
        ariaLabel: String,
        loading: {
            type: Boolean,
            default: false
        },
        hasDropdown: {
            type: Boolean,
            default: false
        },
        dropdownPosition: {
            type: String,
            default: 'bottom left'
        },
        openDropdownOn: {
            type: String,
            default: 'click' // 'click', 'hover', 'focus', or 'always'
        },
        tooltip: String,
        openTooltipOn: String,
        tooltipPosition: String,
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-icon-button--type-' + this.type, 'ui-icon-button--color-' + this.color, 'ui-icon-button--size-' + this.size, { 'is-loading': this.loading }, { 'is-disabled': this.disabled || this.loading }, { 'has-dropdown': this.hasDropdown }];
        },
        progressColor: function progressColor() {
            if (this.type === 'primary') {
                if (this.color === 'default' || this.color === 'black') {
                    return 'black';
                }

                return 'white';
            }

            if (this.color === 'white') {
                return 'white';
            }

            return 'black';
        }
    },

    methods: {
        onClick: function onClick(e) {
            this.$emit('click', e);
        },
        onDropdownOpen: function onDropdownOpen() {
            this.$emit('dropdown-open');
        },
        onDropdownClose: function onDropdownClose() {
            this.$emit('dropdown-close');
        },
        openDropdown: function openDropdown() {
            if (this.$refs.dropdown) {
                this.$refs.dropdown.open();
            }
        },
        closeDropdown: function closeDropdown() {
            if (this.$refs.dropdown) {
                this.$refs.dropdown.close();
            }
        },
        toggleDropdown: function toggleDropdown() {
            if (this.$refs.dropdown) {
                this.$refs.dropdown.toggle();
            }
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiPopover: _UiPopover2.default,
        UiProgressCircular: _UiProgressCircular2.default,
        UiRippleInk: _UiRippleInk2.default,
        UiTooltip: _UiTooltip2.default
    }
};

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiMenuOption = __webpack_require__(239);

var _UiMenuOption2 = _interopRequireDefault(_UiMenuOption);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-menu',

    props: {
        options: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        hasIcons: {
            type: Boolean,
            default: false
        },
        iconProps: Object,
        hasSecondaryText: {
            type: Boolean,
            default: false
        },
        containFocus: {
            type: Boolean,
            default: false
        },
        keys: {
            type: Object,
            default: function _default() {
                return _config2.default.data.UiMenu.keys;
            }
        },
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        raised: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        classes: function classes() {
            return {
                'is-raised': this.raised,
                'has-icons': this.hasIcons,
                'has-secondary-text': this.hasSecondaryText
            };
        }
    },

    methods: {
        selectOption: function selectOption(option) {
            if (option.disabled || option.type === 'divider') {
                return;
            }

            this.$emit('select', option);
            this.closeMenu();
        },
        closeMenu: function closeMenu() {
            this.$emit('close');
        },
        redirectFocus: function redirectFocus(e) {
            e.stopPropagation();
            this.$el.querySelector('.ui-menu-option').focus();
        }
    },

    components: {
        UiMenuOption: _UiMenuOption2.default
    }
};

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-menu-option',

    props: {
        type: String,
        label: String,
        icon: String,
        iconProps: {
            type: Object,
            default: function _default() {
                return {};
            }
        },
        secondaryText: String,
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        classes: function classes() {
            return {
                'is-divider': this.isDivider,
                'is-disabled': this.disabled
            };
        },
        isDivider: function isDivider() {
            return this.type === 'divider';
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiRippleInk: _UiRippleInk2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiCloseButton = __webpack_require__(27);

var _UiCloseButton2 = _interopRequireDefault(_UiCloseButton);

var _classlist = __webpack_require__(10);

var _classlist2 = _interopRequireDefault(_classlist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-modal',

    props: {
        title: {
            type: String,
            default: 'UiModal title'
        },
        size: {
            type: String,
            default: 'normal' // 'small', 'normal', or 'large'
        },
        role: {
            type: String,
            default: 'dialog' // 'dialog' or 'alertdialog'
        },
        transition: {
            type: String,
            default: 'scale' // 'scale', or 'fade'
        },
        removeHeader: {
            type: Boolean,
            default: false
        },
        removeCloseButton: {
            type: Boolean,
            default: false
        },
        preventShift: {
            type: Boolean,
            default: false
        },
        dismissible: {
            type: Boolean,
            default: true
        },
        dismissOn: {
            type: String,
            default: 'backdrop esc close-button'
        }
    },

    data: function data() {
        return {
            isOpen: false,
            lastfocusedElement: null
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-modal--size-' + this.size, { 'has-footer': this.hasFooter }, { 'is-open': this.isOpen }];
        },
        hasFooter: function hasFooter() {
            return Boolean(this.$slots.footer);
        },
        toggleTransition: function toggleTransition() {
            return 'ui-modal--transition-' + this.transition;
        },
        dismissOnBackdrop: function dismissOnBackdrop() {
            return this.dismissOn.indexOf('backdrop') > -1;
        },
        dismissOnCloseButton: function dismissOnCloseButton() {
            return this.dismissOn.indexOf('close-button') > -1;
        },
        dismissOnEsc: function dismissOnEsc() {
            return this.dismissOn.indexOf('esc') > -1;
        }
    },

    watch: {
        isOpen: function isOpen() {
            var _this = this;

            this.$nextTick(function () {
                _this[_this.isOpen ? 'onOpen' : 'onClose']();
            });
        }
    },

    beforeDestroy: function beforeDestroy() {
        if (this.isOpen) {
            this.teardownModal();
        }
    },


    methods: {
        open: function open() {
            this.isOpen = true;
        },
        close: function close() {
            this.isOpen = false;
        },
        closeModal: function closeModal(e) {
            if (!this.dismissible) {
                return;
            }

            // Make sure the element clicked was the backdrop and not a child whose click
            // event has bubbled up
            if (e.currentTarget === this.$refs.backdrop && e.target !== e.currentTarget) {
                return;
            }

            this.isOpen = false;
        },
        onOpen: function onOpen() {
            this.lastfocusedElement = document.activeElement;
            this.$refs.container.focus();

            _classlist2.default.add(document.body, 'ui-modal--is-open');
            document.addEventListener('focus', this.restrictFocus, true);

            this.$emit('open');
        },
        onClose: function onClose() {
            this.teardownModal();
            this.$emit('close');
        },
        redirectFocus: function redirectFocus() {
            this.$refs.container.focus();
        },
        restrictFocus: function restrictFocus(e) {
            if (!this.$refs.container.contains(e.target)) {
                e.stopPropagation();
                this.$refs.container.focus();
            }
        },
        teardownModal: function teardownModal() {
            // classlist.remove(document.body, 'ui-modal--is-open');
            document.removeEventListener('focus', this.restrictFocus, true);

            if (this.lastfocusedElement) {
                this.lastfocusedElement.focus();
            }
        },
        onEnter: function onEnter() {
            this.$emit('reveal');
        },
        onLeave: function onLeave() {
            this.$emit('hide');

            _classlist2.default.remove(document.body, 'ui-modal--is-open');
        }
    },

    components: {
        UiCloseButton: _UiCloseButton2.default
    }
};

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classlist = __webpack_require__(10);

var _classlist2 = _interopRequireDefault(_classlist);

var _tetherDrop = __webpack_require__(24);

var _tetherDrop2 = _interopRequireDefault(_tetherDrop);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-popover',

    props: {
        trigger: {
            type: String,
            required: true
        },
        dropdownPosition: {
            type: String,
            default: 'bottom left'
        },
        openOn: {
            type: String,
            default: 'click' // 'click', 'hover', 'focus', or 'always'
        },
        containFocus: {
            type: Boolean,
            default: false
        },
        focusRedirector: Function,
        raised: {
            type: Boolean,
            default: true
        }
    },

    data: function data() {
        return {
            dropInstance: null,
            lastfocusedElement: null
        };
    },


    computed: {
        triggerEl: function triggerEl() {
            return this.$parent.$refs[this.trigger];
        }
    },

    mounted: function mounted() {
        if (this.triggerEl) {
            this.initializeDropdown();
        }
    },
    beforeDestroy: function beforeDestroy() {
        if (this.dropInstance) {
            this.dropInstance.destroy();
        }
    },


    methods: {
        initializeDropdown: function initializeDropdown() {
            this.dropInstance = new _tetherDrop2.default({
                target: this.triggerEl,
                content: this.$el,
                position: this.dropdownPosition,
                constrainToWindow: true,
                openOn: this.openOn
            });

            // TO FIX: Workaround for Tether not positioning
            // correctly for positions other than 'bottom left'
            if (this.dropdownPosition !== 'bottom left') {
                this.dropInstance.open();
                this.dropInstance.close();
                this.dropInstance.open();
                this.dropInstance.close();
            }

            this.dropInstance.on('open', this.onOpen);
            this.dropInstance.on('close', this.onClose);
        },
        openDropdown: function openDropdown() {
            if (this.dropInstance) {
                this.dropInstance.open();
            }
        },
        closeDropdown: function closeDropdown() {
            if (this.dropInstance) {
                this.dropInstance.close();
            }
        },
        toggleDropdown: function toggleDropdown(e) {
            if (this.dropInstance) {
                this.dropInstance.toggle(e);
            }
        },


        /**
         * Ensures drop is horizontally within viewport (vertical is already solved by drop.js).
         * https://github.com/HubSpot/drop/issues/16
         */
        positionDrop: function positionDrop() {
            var drop = this.dropInstance;
            var windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;

            var width = drop.drop.getBoundingClientRect().width;
            var left = drop.target.getBoundingClientRect().left;
            var availableSpace = windowWidth - left;

            if (width > availableSpace) {
                var direction = width > availableSpace ? 'right' : 'left';

                drop.tether.attachment.left = direction;
                drop.tether.targetAttachment.left = direction;

                drop.position();
            }
        },
        onOpen: function onOpen() {
            this.positionDrop();
            _classlist2.default.add(this.triggerEl, 'has-dropdown-open');

            this.lastfocusedElement = document.activeElement;
            this.$el.focus();

            this.$emit('open');
        },
        onClose: function onClose() {
            _classlist2.default.remove(this.triggerEl, 'has-dropdown-open');

            if (this.lastfocusedElement) {
                this.lastfocusedElement.focus();
            }

            this.$emit('close');
        },
        restrictFocus: function restrictFocus(e) {
            if (!this.containFocus) {
                this.closeDropdown();
                return;
            }

            e.stopPropagation();

            if (this.focusRedirector) {
                this.focusRedirector(e);
            } else {
                this.$el.focus();
            }
        },
        open: function open() {
            this.openDropdown();
        },
        close: function close() {
            this.closeDropdown();
        },
        toggle: function toggle() {
            this.toggleDropdown();
        }
    }
};

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-preloader',

    props: {
        show: {
            type: Boolean,
            required: true
        }
    }
};

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-progress-circular',

    props: {
        type: {
            type: String,
            default: 'indeterminate' // 'indeterminate' or 'determinate'
        },
        color: {
            type: String,
            default: 'primary' // 'primary', 'accent', multi-color', 'black', or 'white'
        },
        progress: {
            type: Number,
            default: 0
        },
        size: {
            type: Number,
            default: 32
        },
        stroke: Number,
        autoStroke: {
            type: Boolean,
            default: true
        },
        disableTransition: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-progress-circular--color-' + this.color, 'ui-progress-circular--type-' + this.type];
        },
        strokeDashArray: function strokeDashArray() {
            var circumference = 2 * Math.PI * this.radius;

            // Use first 3 decimal places, rounded as appropriate
            return Math.round(circumference * 1000) / 1000;
        },
        strokeDashOffset: function strokeDashOffset() {
            var progress = this.moderateProgress(this.progress);
            var circumference = 2 * Math.PI * this.radius;

            return (100 - progress) / 100 * circumference;
        },
        radius: function radius() {
            var stroke = this.stroke ? this.stroke : 4;
            return (this.size - stroke) / 2;
        },
        calculatedStroke: function calculatedStroke() {
            if (this.stroke) {
                return this.stroke;
            }

            if (this.autoStroke) {
                return parseInt(this.size / 8, 10);
            }

            return 4;
        }
    },

    methods: {
        moderateProgress: function moderateProgress(progress) {
            if (isNaN(progress) || progress < 0) {
                return 0;
            }

            if (progress > 100) {
                return 100;
            }

            return progress;
        }
    }
};

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-progress-linear',

    props: {
        type: {
            type: String,
            default: 'indeterminate' // 'determinate' or 'indeterminate'
        },
        color: {
            type: String,
            default: 'primary' // 'primary', 'accent', 'black' or 'white'
        },
        progress: {
            type: Number,
            default: 0
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-progress-linear--color-' + this.color, 'ui-progress-linear--type-' + this.type];
        },
        moderatedProgress: function moderatedProgress() {
            if (this.progress < 0) {
                return 0;
            }

            if (this.progress > 100) {
                return 100;
            }

            return this.progress;
        }
    }
};

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-radio',

    props: {
        name: String,
        label: String,
        value: {
            type: [Number, String],
            required: true
        },
        trueValue: {
            type: [Number, String],
            required: true
        },
        checked: {
            type: Boolean,
            default: false
        },
        color: {
            type: String,
            default: 'primary' // 'primary' or 'accent'
        },
        buttonPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-radio--color-' + this.color, 'ui-radio--button-position-' + this.buttonPosition, { 'is-active': this.isActive }, { 'is-checked': this.isChecked }, { 'is-disabled': this.disabled }];
        },
        isChecked: function isChecked() {
            // eslint-disable-next-line eqeqeq
            return String(this.value).length > 0 && this.value == this.trueValue;
        }
    },

    created: function created() {
        if (this.checked) {
            this.$emit('input', this.trueValue);
        }
    },


    methods: {
        toggleCheck: function toggleCheck() {
            if (!this.disabled) {
                this.$emit('input', this.trueValue);
            }
        },
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);
        },
        onChange: function onChange(e) {
            this.$emit('change', this.isChecked, e);
        }
    }
};

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiRadio = __webpack_require__(30);

var _UiRadio2 = _interopRequireDefault(_UiRadio);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-radio-group',

    props: {
        name: {
            type: String,
            required: true
        },
        label: String,
        options: {
            type: Array,
            required: true
        },
        value: {
            type: [Number, String],
            required: true
        },
        keys: {
            type: Object,
            default: function _default() {
                return _config2.default.data.UiRadioGroup.keys;
            }
        },
        color: {
            type: String,
            default: 'primary' // 'primary' or 'accent'
        },
        buttonPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        vertical: {
            type: Boolean,
            default: false
        },
        help: String,
        error: String,
        invalid: {
            type: Boolean,
            default: false
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false,
            initialValue: this.value,
            selectedOptionValue: this.value
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-radio-group--color-' + this.color, 'ui-radio-group--button-position-' + this.buttonPosition, { 'is-vertical': this.vertical }, { 'is-active': this.isActive }, { 'is-invalid': this.invalid }, { 'is-disabled': this.disabled }];
        },
        hasFeedback: function hasFeedback() {
            return Boolean(this.help) || this.showError;
        },
        showError: function showError() {
            return this.invalid && Boolean(this.error);
        },
        showHelp: function showHelp() {
            return !this.showError && Boolean(this.help);
        }
    },

    watch: {
        selectedOptionValue: function selectedOptionValue() {
            this.$emit('input', this.selectedOptionValue);
            this.$emit('change', this.selectedOptionValue);
        },
        value: function value() {
            this.selectedOptionValue = this.value;
        }
    },

    methods: {
        reset: function reset() {
            this.$emit('input', this.initialValue);
        },
        isOptionCheckedByDefault: function isOptionCheckedByDefault(option) {
            // eslint-disable-next-line eqeqeq
            return this.initialValue == option[this.keys.value] || this.initialValue == option || option[this.keys.checked];
        },
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);
        }
    },

    components: {
        UiRadio: _UiRadio2.default
    }
};

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classlist = __webpack_require__(10);

var _classlist2 = _interopRequireDefault(_classlist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var startRipple = function startRipple(eventType, event) {
    var holder = event.currentTarget || event.target;

    if (holder && !_classlist2.default.has(holder, 'ui-ripple-ink')) {
        holder = holder.querySelector('.ui-ripple-ink');
    }

    if (!holder) {
        return;
    }

    // Store the event use to generate this ripple on the holder: don't allow
    // further events of different types until we're done. Prevents double
    // ripples from mousedown/touchstart.
    var prev = holder.getAttribute('data-ui-event');

    if (prev && prev !== eventType) {
        return;
    }

    holder.setAttribute('data-ui-event', eventType);

    // Create and position the ripple
    var rect = holder.getBoundingClientRect();
    var x = event.offsetX;
    var y = void 0;

    if (x === undefined) {
        x = event.clientX - rect.left;
        y = event.clientY - rect.top;
    } else {
        y = event.offsetY;
    }

    var ripple = document.createElement('div');
    var max = void 0;

    if (rect.width === rect.height) {
        max = rect.width * 1.412;
    } else {
        max = Math.sqrt(rect.width * rect.width + rect.height * rect.height);
    }

    var dim = max * 2 + 'px';

    ripple.style.width = dim;
    ripple.style.height = dim;
    ripple.style.marginLeft = -max + x + 'px';
    ripple.style.marginTop = -max + y + 'px';

    // Activate/add the element
    ripple.className = 'ui-ripple-ink__ink';
    holder.appendChild(ripple);

    setTimeout(function () {
        _classlist2.default.add(ripple, 'is-held');
    }, 0);

    var releaseEvent = eventType === 'mousedown' ? 'mouseup' : 'touchend';

    var handleRelease = function handleRelease() {
        document.removeEventListener(releaseEvent, handleRelease);

        _classlist2.default.add(ripple, 'is-done');

        // Larger than the animation duration in CSS
        setTimeout(function () {
            holder.removeChild(ripple);

            if (holder.children.length === 0) {
                holder.removeAttribute('data-ui-event');
            }
        }, 650);
    };

    document.addEventListener(releaseEvent, handleRelease);
}; //
//
//
//

/**
 * Adapted from rippleJS (https://github.com/samthor/rippleJS, version 1.0.3)
 * removed jQuery, convert to ES6
 */


var handleMouseDown = function handleMouseDown(e) {
    // Trigger on left click only
    if (e.button === 0) {
        startRipple(e.type, e);
    }
};

var handleTouchStart = function handleTouchStart(e) {
    if (e.changedTouches) {
        for (var i = 0; i < e.changedTouches.length; ++i) {
            startRipple(e.type, e.changedTouches[i]);
        }
    }
};

exports.default = {
    name: 'ui-ripple-ink',

    props: {
        trigger: {
            type: String,
            required: true
        }
    },

    watch: {
        trigger: function trigger() {
            this.initialize();
        }
    },

    mounted: function mounted() {
        var _this = this;

        this.$nextTick(function () {
            _this.initialize();
        });
    },
    beforeDestroy: function beforeDestroy() {
        var triggerEl = this.trigger ? this.$parent.$refs[this.trigger] : null;

        if (!triggerEl) {
            return;
        }

        triggerEl.removeEventListener('mousedown', handleMouseDown);
        triggerEl.removeEventListener('touchstart', handleTouchStart);
    },


    methods: {
        initialize: function initialize() {
            var triggerEl = this.trigger ? this.$parent.$refs[this.trigger] : null;

            if (!triggerEl) {
                return;
            }

            triggerEl.addEventListener('touchstart', handleTouchStart);
            triggerEl.addEventListener('mousedown', handleMouseDown);
        }
    }
};

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiProgressCircular = __webpack_require__(14);

var _UiProgressCircular2 = _interopRequireDefault(_UiProgressCircular);

var _UiSelectOption = __webpack_require__(241);

var _UiSelectOption2 = _interopRequireDefault(_UiSelectOption);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

var _fuzzysearch = __webpack_require__(22);

var _fuzzysearch2 = _interopRequireDefault(_fuzzysearch);

var _util = __webpack_require__(12);

var _elementScroll = __webpack_require__(35);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-select',

    props: {
        name: String,
        value: {
            type: [String, Number, Object, Array],
            required: true
        },
        options: {
            type: Array,
            default: function _default() {
                return [];
            }
        },
        placeholder: String,
        icon: String,
        iconPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        label: String,
        floatingLabel: {
            type: Boolean,
            default: false
        },
        type: {
            type: String,
            default: 'basic' // 'basic' or 'image'
        },
        multiple: {
            type: Boolean,
            default: false
        },
        multipleDelimiter: {
            type: String,
            default: ', '
        },
        hasSearch: {
            type: Boolean,
            default: false
        },
        searchPlaceholder: {
            type: String,
            default: 'Search'
        },
        filter: Function,
        disableFilter: {
            type: Boolean,
            default: false
        },
        loading: {
            type: Boolean,
            default: false
        },
        noResults: {
            type: Boolean,
            default: false
        },
        keys: {
            type: Object,
            default: function _default() {
                return _config2.default.data.UiSelect.keys;
            }
        },
        invalid: {
            type: Boolean,
            default: false
        },
        help: String,
        error: String,
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            query: '',
            isActive: false,
            isTouched: false,
            selectedIndex: -1,
            highlightedIndex: -1,
            showDropdown: false,
            initialValue: JSON.stringify(this.value)
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-select--type-' + this.type, 'ui-select--icon-position-' + this.iconPosition, { 'is-active': this.isActive }, { 'is-invalid': this.invalid }, { 'is-touched': this.isTouched }, { 'is-disabled': this.disabled }, { 'is-multiple': this.multiple }, { 'has-label': this.hasLabel }, { 'has-floating-label': this.hasFloatingLabel }];
        },
        labelClasses: function labelClasses() {
            return {
                'is-inline': this.hasFloatingLabel && this.isLabelInline,
                'is-floating': this.hasFloatingLabel && !this.isLabelInline
            };
        },
        hasLabel: function hasLabel() {
            return Boolean(this.label) || Boolean(this.$slots.default);
        },
        hasFloatingLabel: function hasFloatingLabel() {
            return this.hasLabel && this.floatingLabel;
        },
        isLabelInline: function isLabelInline() {
            return this.value.length === 0 && !this.isActive;
        },
        hasFeedback: function hasFeedback() {
            return Boolean(this.help) || Boolean(this.error);
        },
        showError: function showError() {
            return this.invalid && Boolean(this.error);
        },
        showHelp: function showHelp() {
            return !this.showError && Boolean(this.help);
        },
        filteredOptions: function filteredOptions() {
            var _this = this;

            if (this.disableFilter) {
                return this.options;
            }

            return this.options.filter(function (option, index) {
                if (_this.filter) {
                    return _this.filter(option, _this.query);
                }

                return _this.defaultFilter(option, index);
            });
        },
        displayText: function displayText() {
            var _this2 = this;

            if (this.multiple) {
                if (this.value.length > 0) {
                    return this.value.map(function (value) {
                        return value[_this2.keys.label] || value;
                    }).join(this.multipleDelimiter);
                }

                return '';
            }

            return this.value ? this.value[this.keys.label] || this.value : '';
        },
        hasDisplayText: function hasDisplayText() {
            return Boolean(this.displayText.length);
        },
        hasNoResults: function hasNoResults() {
            if (this.loading || this.query.length === 0) {
                return false;
            }

            return this.disableFilter ? this.noResults : this.filteredOptions.length === 0;
        },
        submittedValue: function submittedValue() {
            var _this3 = this;

            // Assuming that if there is no name, then there's no
            // need to computed the submittedValue
            if (!this.name || !this.value) {
                return;
            }

            if (Array.isArray(this.value)) {
                return this.value.map(function (option) {
                    return option[_this3.keys.value] || option;
                }).join(',');
            }

            return this.value[this.keys.value] || this.value;
        }
    },

    watch: {
        filteredOptions: function filteredOptions() {
            this.highlightedIndex = 0;
            (0, _elementScroll.resetScroll)(this.$refs.optionsList);
        },
        showDropdown: function showDropdown() {
            if (this.showDropdown) {
                this.onOpen();
                this.$emit('dropdown-open');
            } else {
                this.onClose();
                this.$emit('dropdown-close');
            }
        },
        query: function query() {
            this.$emit('query-change', this.query);
        }
    },

    created: function created() {
        if (!this.value || this.value === '') {
            this.setValue(null);
        }
    },
    mounted: function mounted() {
        document.addEventListener('click', this.onExternalClick);
    },
    beforeDestroy: function beforeDestroy() {
        document.removeEventListener('click', this.onExternalClick);
    },


    methods: {
        setValue: function setValue(value) {
            value = value ? value : this.multiple ? [] : '';

            this.$emit('input', value);
            this.$emit('change', value);
        },
        highlightOption: function highlightOption(index) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { autoScroll: true };

            if (this.highlightedIndex === index || this.$refs.options.length === 0) {
                return;
            }

            var firstIndex = 0;
            var lastIndex = this.$refs.options.length - 1;

            if (index < firstIndex) {
                index = lastIndex;
            } else if (index > lastIndex) {
                index = firstIndex;
            }

            this.highlightedIndex = index;

            if (options.autoScroll) {
                this.scrollOptionIntoView(this.$refs.options[index].$el);
            }
        },
        selectHighlighted: function selectHighlighted(index, e) {
            if (this.$refs.options.length > 0) {
                e.preventDefault();
                this.selectOption(this.$refs.options[index].option, index);
            }
        },
        selectOption: function selectOption(option, index) {
            var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { autoClose: true };

            var shouldSelect = this.multiple && !this.isOptionSelected(option);

            if (this.multiple) {
                this.updateOption(option, { select: shouldSelect });
            } else {
                this.setValue(option);
                this.selectedIndex = index;
            }

            this.$emit('select', option, {
                selected: this.multiple ? shouldSelect : true
            });

            this.highlightedIndex = index;
            this.clearQuery();

            if (!this.multiple && options.autoClose) {
                this.closeDropdown();
            }
        },
        isOptionSelected: function isOptionSelected(option) {
            if (this.multiple) {
                return (0, _util.looseIndexOf)(this.value, option) > -1;
            }

            return (0, _util.looseEqual)(this.value, option);
        },
        updateOption: function updateOption(option) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { select: true };

            var value = [];
            var updated = false;
            var i = (0, _util.looseIndexOf)(this.value, option);

            if (options.select && i < 0) {
                value = this.value.concat(option);
                updated = true;
            }

            if (!options.select && i > -1) {
                value = this.value.slice(0, i).concat(this.value.slice(i + 1));
                updated = true;
            }

            if (updated) {
                this.setValue(value);
            }
        },
        defaultFilter: function defaultFilter(option) {
            var query = this.query.toLowerCase();
            var text = option[this.keys.label] || option;

            if (typeof text === 'string') {
                text = text.toLowerCase();
            }

            return (0, _fuzzysearch2.default)(query, text);
        },
        clearQuery: function clearQuery() {
            this.query = '';
        },
        toggleDropdown: function toggleDropdown() {
            this[this.showDropdown ? 'closeDropdown' : 'openDropdown']();
        },
        openDropdown: function openDropdown() {
            if (this.disabled) {
                return;
            }

            this.showDropdown = true;

            // IE: clicking label doesn't focus the select element
            // to set isActive to true
            if (!this.isActive) {
                this.isActive = true;
            }
        },
        closeDropdown: function closeDropdown() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { autoBlur: false };

            this.showDropdown = false;

            if (!this.isTouched) {
                this.isTouched = true;
                this.$emit('touch');
            }

            if (options.autoBlur) {
                this.isActive = false;
            } else {
                this.$refs.label.focus();
            }
        },
        onFocus: function onFocus(e) {
            if (this.isActive) {
                return;
            }

            this.isActive = true;
            this.$emit('focus', e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);

            if (this.showDropdown) {
                this.closeDropdown({ autoBlur: true });
            }
        },
        onOpen: function onOpen() {
            var _this4 = this;

            this.$nextTick(function () {
                _this4.$refs[_this4.hasSearch ? 'searchInput' : 'dropdown'].focus();
                _this4.scrollOptionIntoView(_this4.$refs.optionsList.querySelector('.is-selected'));
            });
        },
        onClose: function onClose() {
            this.highlightedIndex = this.multiple ? -1 : this.selectedIndex;
        },
        onExternalClick: function onExternalClick(e) {
            if (!this.$el.contains(e.target)) {
                if (this.showDropdown) {
                    this.closeDropdown({ autoBlur: true });
                } else if (this.isActive) {
                    this.isActive = false;
                }
            }
        },
        scrollOptionIntoView: function scrollOptionIntoView(optionEl) {
            (0, _elementScroll.scrollIntoView)(optionEl, {
                container: this.$refs.optionsList,
                marginTop: 180
            });
        },
        reset: function reset() {
            this.setValue(JSON.parse(this.initialValue));
            this.clearQuery();
            this.resetTouched();

            this.selectedIndex = -1;
            this.highlightedIndex = -1;
        },
        resetTouched: function resetTouched() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { touched: false };

            this.isTouched = options.touched;
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiProgressCircular: _UiProgressCircular2.default,
        UiSelectOption: _UiSelectOption2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-select-option',

    props: {
        option: {
            type: [String, Object],
            required: true
        },
        type: {
            type: String,
            default: 'basic' // 'basic' or 'image'
        },
        multiple: {
            type: Boolean,
            default: false
        },
        highlighted: {
            type: Boolean,
            default: false
        },
        selected: {
            type: Boolean,
            default: false
        },
        keys: {
            type: Object,
            default: function _default() {
                return {
                    label: 'label',
                    image: 'image'
                };
            }
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-select-option--type-' + this.type, { 'is-highlighted': this.highlighted }, { 'is-selected': this.selected }];
        },
        imageStyle: function imageStyle() {
            return { 'background-image': 'url(' + this.option[this.keys.image] + ')' };
        }
    },

    components: {
        UiIcon: _UiIcon2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _classlist = __webpack_require__(10);

var _classlist2 = _interopRequireDefault(_classlist);

var _RespondsToWindowResize = __webpack_require__(19);

var _RespondsToWindowResize2 = _interopRequireDefault(_RespondsToWindowResize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-slider',

    props: {
        name: String,
        icon: String,
        value: {
            type: Number,
            required: true
        },
        step: {
            type: Number,
            default: 10
        },
        snapToSteps: {
            type: Boolean,
            default: false
        },
        showMarker: {
            type: Boolean,
            default: false
        },
        markerValue: Number,
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            initialValue: this.value,
            isActive: false,
            isDragging: false,
            thumbSize: 0,
            trackLength: 0,
            trackOffset: 0,
            localValue: this.value
        };
    },


    computed: {
        classes: function classes() {
            return [{ 'is-dragging': this.isDragging }, { 'is-disabled': this.disabled }, { 'is-active': this.isActive }, { 'has-icon': this.hasIcon }, { 'has-marker': this.showMarker }];
        },
        hasIcon: function hasIcon() {
            return Boolean(this.$slots.icon) || Boolean(this.icon);
        },
        fillStyle: function fillStyle() {
            return { transform: 'scaleX(' + this.localValue / 100 + ')' };
        },
        thumbStyle: function thumbStyle() {
            return {
                transform: 'translateX(' + (this.localValue / 100 * this.trackLength - this.thumbSize / 2) + 'px)'
            };
        },
        markerText: function markerText() {
            return this.markerValue ? this.markerValue : this.value;
        },
        snapPoints: function snapPoints() {
            var points = [];
            var index = 0;
            var point = index * this.step;

            while (point <= 100) {
                points.push(point);
                index++;
                point = index * this.step;
            }

            return points;
        }
    },

    watch: {
        value: function value() {
            this.setValue(this.value);
        },
        isDragging: function isDragging() {
            var operation = this.isDragging ? 'add' : 'remove';
            _classlist2.default[operation](document.body, 'ui-slider--is-dragging');
        }
    },

    mounted: function mounted() {
        this.initializeSlider();
    },
    beforeDestroy: function beforeDestroy() {
        this.teardownSlider();
    },


    methods: {
        reset: function reset() {
            this.setValue(this.initialValue);
        },
        onFocus: function onFocus() {
            this.isActive = true;
            this.$emit('focus');
        },
        onBlur: function onBlur() {
            this.isActive = false;
            this.$emit('blur');
        },
        onExternalClick: function onExternalClick(e) {
            if (!this.$el.contains(e.target)) {
                this.onBlur();
            }
        },
        setValue: function setValue(value) {
            if (value > 100) {
                value = 100;
            } else if (value < 0) {
                value = 0;
            }

            if (value === this.localValue) {
                return;
            }

            this.localValue = value;
            this.$emit('input', value);
            this.$emit('change', value);
        },
        incrementValue: function incrementValue() {
            this.setValue(this.localValue + this.step);
        },
        decrementValue: function decrementValue() {
            this.setValue(this.localValue - this.step);
        },
        getTrackOffset: function getTrackOffset() {
            var el = this.$refs.track;
            var offset = el.offsetLeft;

            while (el.offsetParent) {
                el = el.offsetParent;
                offset += el.offsetLeft;
            }

            return offset;
        },
        getPointStyle: function getPointStyle(point) {
            return {
                left: point + '%'
            };
        },
        refreshSize: function refreshSize() {
            this.thumbSize = this.$refs.thumb.offsetWidth;
            this.trackLength = this.$refs.track.offsetWidth;
            this.trackOffset = this.getTrackOffset(this.$refs.track);
        },
        initializeSlider: function initializeSlider() {
            var _this = this;

            document.addEventListener('touchend', this.onDragStop);
            document.addEventListener('mouseup', this.onDragStop);
            document.addEventListener('click', this.onExternalClick);

            this.$on('window-resize', function () {
                _this.refreshSize();
                _this.isDragging = false;
            });

            this.refreshSize();
            this.initializeDrag();
        },
        teardownSlider: function teardownSlider() {
            document.removeEventListener('touchend', this.onDragStop);
            document.removeEventListener('mouseup', this.onDragStop);
            document.removeEventListener('click', this.onExternalClick);
        },
        initializeDrag: function initializeDrag() {
            var value = this.getEdge(this.localValue ? this.localValue : 0, 0, 100);
            this.setValue(value);
        },
        onDragStart: function onDragStart(e) {
            if (this.disabled) {
                return;
            }

            if (!this.isActive) {
                this.onFocus();
            }

            this.isDragging = true;
            this.dragUpdate(e);

            document.addEventListener('touchmove', this.onDragMove);
            document.addEventListener('mousemove', this.onDragMove);

            this.$emit('dragstart', this.localValue, e);
        },
        onDragMove: function onDragMove(e) {
            this.dragUpdate(e);
        },
        dragUpdate: function dragUpdate(e) {
            var position = e.touches ? e.touches[0].pageX : e.pageX;
            var value = this.getEdge((position - this.trackOffset) / this.trackLength * 100, 0, 100);

            if (this.isDragging) {
                this.setValue(Math.round(value));
            }
        },
        onDragStop: function onDragStop(e) {
            this.isDragging = false;

            if (this.snapToSteps && this.value % this.step !== 0) {
                this.setValue(this.getNearestSnapPoint());
            }

            document.removeEventListener('touchmove', this.onDragMove);
            document.removeEventListener('mousemove', this.onDragMove);

            this.$emit('dragend', this.localValue, e);
        },
        getNearestSnapPoint: function getNearestSnapPoint() {
            var previousSnapPoint = Math.floor(this.value / this.step) * this.step;
            var nextSnapPoint = previousSnapPoint + this.step;
            var midpoint = (previousSnapPoint + nextSnapPoint) / 2;

            return this.value >= midpoint ? nextSnapPoint : previousSnapPoint;
        },
        getEdge: function getEdge(a, b, c) {
            if (a < b) {
                return b;
            }

            if (a > c) {
                return c;
            }

            return a;
        }
    },

    components: {
        UiIcon: _UiIcon2.default
    },

    mixins: [_RespondsToWindowResize2.default]
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiButton = __webpack_require__(4);

var _UiButton2 = _interopRequireDefault(_UiButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-snackbar',

    props: {
        message: String,
        action: String,
        actionColor: {
            type: String,
            default: 'accent' // 'primary' or 'accent'
        },
        transition: {
            type: String,
            default: 'slide' // 'slide' or 'fade'
        }
    },

    computed: {
        transitionName: function transitionName() {
            return 'ui-snackbar--transition-' + this.transition;
        }
    },

    methods: {
        onClick: function onClick() {
            this.$emit('click');
        },
        onActionClick: function onActionClick() {
            this.$emit('action-click');
        },
        onEnter: function onEnter() {
            this.$emit('show');
        },
        onLeave: function onLeave() {
            this.$emit('hide');
        }
    },

    components: {
        UiButton: _UiButton2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiSnackbar = __webpack_require__(32);

var _UiSnackbar2 = _interopRequireDefault(_UiSnackbar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-snackbar-container',

    props: {
        queueSnackbars: {
            type: Boolean,
            default: false
        },
        duration: {
            type: Number,
            default: 5000
        },
        allowHtml: {
            type: Boolean,
            default: false
        },
        position: {
            type: String,
            default: 'left' // 'left', 'center', 'right'
        },
        transition: {
            type: String,
            default: 'slide' // 'slide' or 'fade'
        }
    },

    data: function data() {
        return {
            queue: [],
            snackbarTimeout: null
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-snackbar-container--position-' + this.position];
        }
    },

    beforeDestroy: function beforeDestroy() {
        this.resetTimeout();
    },


    methods: {
        createSnackbar: function createSnackbar(snackbar) {
            snackbar.show = false;
            snackbar.duration = snackbar.duration || this.duration;

            this.queue.push(snackbar);

            if (this.queue.length === 1) {
                // If there's only one item in the queue,
                // it's the new snackbar, show it immediately
                return this.showNextSnackbar();
            } else if (!this.queueSnackbars) {
                // If we're not queuing snackbars, hide the current one.
                // This will trigger onHide(), which will show the new snackbar
                this.queue[0].show = false;
            }
        },
        showNextSnackbar: function showNextSnackbar() {
            if (this.queue.length === 0) {
                return;
            }

            // Show the first snackbar in the queue.
            // Will trigger onShow(), which will hide the snackbar after its duration
            this.queue[0].show = true;
        },
        onShow: function onShow(snackbar) {
            var _this = this;

            // Abort if the snackbar is not the first in the queue
            // (since v-show triggers @show for all the snackbars, regardless of actual visibility)
            if (this.queue.indexOf(snackbar) !== 0) {
                return;
            }

            // Hide the snackbar after it's duration is complete.
            // Will trigger onHide(), which will remove it from
            // the queue and show the next snackbar
            this.snackbarTimeout = setTimeout(function () {
                _this.queue[0].show = false;
            }, snackbar.duration);

            this.$emit('snackbar-show', snackbar);
            this.callHook('onShow', snackbar);
        },
        onHide: function onHide(snackbar, index) {
            if (this.queueSnackbars || this.queue.length === 1) {
                // Remove the snackbar from the queue
                this.queue.splice(index, 1);
            } else {
                // If snackbars are created too rapidly, a backlog grows even if we're
                // not queuing, due to the leave transition we have to wait for.
                //
                // When this happens, remove the current snackbar and all
                // other snackbars except the last.
                this.queue.splice(index, this.queue.length - 1);
            }

            this.$emit('snackbar-hide', snackbar);
            this.callHook('onHide', snackbar);

            this.resetTimeout();
            this.showNextSnackbar();
        },
        onClick: function onClick(snackbar) {
            snackbar.show = false;
            this.callHook('onClick', snackbar);
        },
        onActionClick: function onActionClick(snackbar) {
            this.callHook('onActionClick', snackbar);
        },
        callHook: function callHook(hook, snackbar) {
            if (typeof snackbar[hook] === 'function') {
                snackbar[hook].call(undefined, snackbar);
            }
        },
        resetTimeout: function resetTimeout() {
            clearTimeout(this.snackbarTimeout);
            this.snackbarTimeout = null;
        }
    },

    components: {
        UiSnackbar: _UiSnackbar2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _util = __webpack_require__(12);

exports.default = {
    name: 'ui-switch',

    props: {
        name: String,
        label: String,
        value: {
            required: true
        },
        trueValue: {
            default: true
        },
        falseValue: {
            default: false
        },
        submittedValue: {
            type: String,
            default: 'on' // HTML default
        },
        checked: {
            type: Boolean,
            default: false
        },
        color: {
            type: String,
            default: 'primary' // 'primary' or 'accent'
        },
        switchPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false,
            isChecked: (0, _util.looseEqual)(this.value, this.trueValue) || this.checked,
            initialValue: this.value
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-switch--color-' + this.color, 'ui-switch--switch-position-' + this.switchPosition, { 'is-active': this.isActive }, { 'is-checked': this.isChecked }, { 'is-disabled': this.disabled }];
        }
    },

    watch: {
        value: function value() {
            this.isChecked = (0, _util.looseEqual)(this.value, this.trueValue);
        }
    },

    created: function created() {
        this.$emit('input', this.isChecked ? this.trueValue : this.falseValue);
    },


    methods: {
        onClick: function onClick(e) {
            this.isChecked = e.target.checked;
            this.$emit('input', e.target.checked ? this.trueValue : this.falseValue);
        },
        onChange: function onChange(e) {
            this.$emit('change', this.isChecked ? this.trueValue : this.falseValue, e);
        },
        onFocus: function onFocus() {
            this.isActive = true;
            this.$emit('focus');
        },
        onBlur: function onBlur() {
            this.isActive = false;
            this.$emit('blur');
        }
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _uuid = __webpack_require__(36);

var _uuid2 = _interopRequireDefault(_uuid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-tab',

    props: {
        id: {
            type: String,
            default: function _default() {
                return _uuid2.default.short('ui-tab-');
            }
        },
        title: String,
        icon: String,
        iconProps: {
            type: Object,
            default: function _default() {
                return {};
            }
        },
        show: {
            type: Boolean,
            default: true
        },
        selected: {
            type: Boolean,
            default: false
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false
        };
    },


    watch: {
        show: function show() {
            this.$parent.handleTabShowChange(this);
        },
        disabled: function disabled() {
            this.$parent.handleTabDisableChange(this);
        }
    },

    created: function created() {
        this.$parent.registerTab(this);
    },


    methods: {
        activate: function activate() {
            this.isActive = true;
            this.$emit('select', this.id);
        },
        deactivate: function deactivate() {
            this.isActive = false;
            this.$emit('deselect', this.id);
        }
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _UiRippleInk = __webpack_require__(6);

var _UiRippleInk2 = _interopRequireDefault(_UiRippleInk);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-tab-header-item',

    props: {
        id: String,
        type: {
            type: String,
            default: 'text' // 'text', 'icon', or 'icon-and-text'
        },
        title: String,
        icon: String,
        iconProps: {
            type: Object,
            default: function _default() {
                return {};
            }
        },
        active: {
            type: Boolean,
            default: false
        },
        show: {
            type: Boolean,
            default: true
        },
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-tab-header-item--type-' + this.type, { 'is-active': this.active }, { 'is-disabled': this.disabled }];
        }
    },

    components: {
        UiIcon: _UiIcon2.default,
        UiRippleInk: _UiRippleInk2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _RespondsToWindowResize = __webpack_require__(19);

var _RespondsToWindowResize2 = _interopRequireDefault(_RespondsToWindowResize);

var _UiTabHeaderItem = __webpack_require__(244);

var _UiTabHeaderItem2 = _interopRequireDefault(_UiTabHeaderItem);

var _config = __webpack_require__(5);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-tabs',

    props: {
        type: {
            type: String,
            default: 'text' // 'icon', text', or 'icon-and-text'
        },
        backgroundColor: {
            type: String,
            default: 'default' // 'default', 'primary', 'accent', or 'clear'
        },
        textColor: {
            type: String,
            default: 'black' // 'black', or 'white'
        },
        textColorActive: {
            type: String,
            default: 'primary' // 'primary', 'accent', or 'white'
        },
        indicatorColor: {
            type: String,
            default: 'primary' // 'primary', 'accent', or 'white'
        },
        fullwidth: {
            type: Boolean,
            default: false
        },
        raised: {
            type: Boolean,
            default: false
        },
        disableRipple: {
            type: Boolean,
            default: _config2.default.data.disableRipple
        }
    },

    data: function data() {
        return {
            tabs: [],
            activeTabId: null,
            activeTabIndex: -1,
            activeTabElement: null,
            activeTabPosition: {
                left: 0,
                width: 0
            },
            tabContainerWidth: 0
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-tabs--type-' + this.type, 'ui-tabs--text-color-' + this.textColor, 'ui-tabs--text-color-active-' + this.textColorActive, 'ui-tabs--background-color-' + this.backgroundColor, 'ui-tabs--indicator-color-' + this.textColorActive, { 'is-raised': this.raised }, { 'is-fullwidth': this.fullwidth }];
        },
        indicatorLeft: function indicatorLeft() {
            return this.activeTabPosition.left + 'px';
        },
        indicatorRight: function indicatorRight() {
            return this.tabContainerWidth - (this.activeTabPosition.left + this.activeTabPosition.width) + 'px';
        }
    },

    watch: {
        activeTabId: function activeTabId() {
            var _this = this;

            this.tabs.forEach(function (tab, index) {
                if (_this.activeTabId === tab.id) {
                    tab.activate();
                    _this.activeTabIndex = index;
                } else if (tab.isActive) {
                    tab.deactivate();
                }
            });
        },
        activeTabElement: function activeTabElement() {
            this.refreshIndicator();
        }
    },

    mounted: function mounted() {
        var _this2 = this;

        // Set the tab container width and the active tab element
        // (to show the active tab indicator)
        this.$nextTick(function () {
            _this2.tabContainerWidth = _this2.$refs.tabsContainer.offsetWidth;
            _this2.activeTabElement = _this2.$refs.tabsContainer.querySelector('.is-active');
        });

        // Refresh the active tab indication when the window size changes
        this.$on('window-resize', function () {
            _this2.tabContainerWidth = _this2.$refs.tabsContainer.offsetWidth;
            _this2.refreshIndicator();
        });
    },


    methods: {
        // Called externally from UiTab
        registerTab: function registerTab(tab) {
            this.tabs.push(tab);

            // Select the tab if there's no tab selected (i.e. the tab is the only tab)
            // or the tab's selected prop is true
            if (this.activeTabId === null || tab.selected) {
                this.activeTabId = tab.id;
            }
        },


        // Called externally from UiTab
        handleTabShowChange: function handleTabShowChange(tab) {
            // Switch to the nearest available tab if the tab being hidden is currently active
            if (this.activeTabId === tab.id && !tab.show) {
                var newTab = this.findNearestAvailableTab({ preferPrevious: true });

                if (newTab) {
                    this.selectTab(newTab.$el, newTab);
                }
            }

            // Refresh the active tab indicator
            this.refreshIndicator();
        },


        // Called externally from UiTab
        handleTabDisableChange: function handleTabDisableChange(tab) {
            // Switch to the nearest available tab if the tab being disabled is currently active
            if (this.activeTabId === tab.id && tab.disabled) {
                var newTab = this.findNearestAvailableTab({ preferPrevious: true });

                if (newTab) {
                    this.selectTab(newTab.$el, newTab);
                }
            }
        },
        selectTab: function selectTab(e, tab) {
            // e can be Element (if called by selectPrevious or selectNext) or Event
            // (if called by click listener)
            var newTabElement = e.currentTarget ? e.currentTarget : e;

            // Abort if the tab is disabled or already selected
            if (tab.disabled || this.activeTabElement === newTabElement) {
                return;
            }

            this.activeTabElement = newTabElement;
            this.activeTabId = tab.id;

            this.$emit('tab-change', tab.id);
        },
        selectPreviousTab: function selectPreviousTab() {
            // Abort if the current tab is the first tab
            if (this.activeTabIndex === 0) {
                return;
            }

            var previousTab = this.findTabByIndex(this.activeTabIndex, { findPrevious: true });

            if (!previousTab) {
                return;
            }

            this.selectTab(previousTab.$el, previousTab);
            this.activeTabElement.focus();
        },
        selectNextTab: function selectNextTab() {
            // Abort if the current tab is the last tab
            if (this.activeTabIndex === this.$refs.tabElements.length - 1) {
                return;
            }

            var nextTab = this.findTabByIndex(this.activeTabIndex);

            if (!nextTab) {
                return;
            }

            this.selectTab(nextTab.$el, nextTab);
            this.activeTabElement.focus();
        },
        findTabByIndex: function findTabByIndex(currentTabIndex) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { findPrevious: false };

            var tab = null;

            if (options.findPrevious) {
                for (var i = currentTabIndex - 1; i >= 0; i--) {
                    if (!this.$refs.tabElements[i].disabled && this.$refs.tabElements[i].show) {
                        tab = this.$refs.tabElements[i];
                        break;
                    }
                }
            } else {
                for (var _i = currentTabIndex + 1; _i < this.$refs.tabElements.length; _i++) {
                    if (!this.$refs.tabElements[_i].disabled && this.$refs.tabElements[_i].show) {
                        tab = this.$refs.tabElements[_i];
                        break;
                    }
                }
            }

            return tab;
        },
        findTabById: function findTabById(id) {
            var tab = null;
            var numberOfTabs = this.$refs.tabElements.length;

            for (var i = 0; i <= numberOfTabs; i++) {
                if (id === this.$refs.tabElements[i].id) {
                    tab = this.$refs.tabElements[i];
                    break;
                }
            }

            return tab;
        },
        findNearestAvailableTab: function findNearestAvailableTab() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { preferPrevious: false };

            var tab = this.findTabByIndex(this.activeTabIndex, {
                findPrevious: options.preferPrevious
            });

            if (tab) {
                return tab;
            }

            return this.findTabByIndex(this.activeTabIndex, {
                findPrevious: !options.preferPrevious
            });
        },


        // Used externally to programmatically change the active tab
        setActiveTab: function setActiveTab(tabId) {
            var tab = this.findTabById(tabId);

            if (tab && !tab.disabled) {
                this.selectTab(tab.$el, tab);
            }
        },


        // Used locally and externally to refresh the active tab indicator position
        refreshIndicator: function refreshIndicator() {
            this.activeTabPosition = {
                left: this.activeTabElement ? this.activeTabElement.offsetLeft : 0,
                width: this.activeTabElement ? this.activeTabElement.offsetWidth : 0
            };
        }
    },

    components: {
        UiTabHeaderItem: _UiTabHeaderItem2.default,
        RenderVnodes: {
            name: 'render-vnodes',
            functional: true,
            props: ['nodes'],
            render: function render(createElement, context) {
                return createElement('div', context.props.nodes);
            }
        }
    },

    mixins: [_RespondsToWindowResize2.default]
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _autofocus = __webpack_require__(34);

var _autofocus2 = _interopRequireDefault(_autofocus);

var _UiIcon = __webpack_require__(3);

var _UiIcon2 = _interopRequireDefault(_UiIcon);

var _autosize = __webpack_require__(45);

var _autosize2 = _interopRequireDefault(_autosize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-textbox',

    props: {
        name: String,
        placeholder: String,
        value: {
            type: [String, Number],
            required: true
        },
        icon: String,
        iconPosition: {
            type: String,
            default: 'left' // 'left' or 'right'
        },
        label: String,
        floatingLabel: {
            type: Boolean,
            default: false
        },
        type: {
            type: String,
            default: 'text' // all the possible HTML5 input types, except those that have a special UI
        },
        multiLine: {
            type: Boolean,
            default: false
        },
        rows: {
            type: Number,
            default: 2
        },
        autocomplete: String,
        autofocus: {
            type: Boolean,
            default: false
        },
        autosize: {
            type: Boolean,
            default: true
        },
        min: Number,
        max: Number,
        step: {
            type: String,
            default: 'any'
        },
        maxlength: Number,
        enforceMaxlength: {
            type: Boolean,
            default: false
        },
        required: {
            type: Boolean,
            default: false
        },
        readonly: {
            type: Boolean,
            default: false
        },
        help: String,
        error: String,
        invalid: {
            type: Boolean,
            default: false
        },
        disabled: {
            type: Boolean,
            default: false
        }
    },

    data: function data() {
        return {
            isActive: false,
            isTouched: false,
            initialValue: this.value,
            autosizeInitialized: false
        };
    },


    computed: {
        classes: function classes() {
            return ['ui-textbox--icon-position-' + this.iconPosition, { 'is-active': this.isActive }, { 'is-invalid': this.invalid }, { 'is-touched': this.isTouched }, { 'is-multi-line': this.multiLine }, { 'has-counter': this.maxlength }, { 'is-disabled': this.disabled }, { 'has-label': this.hasLabel }, { 'has-floating-label': this.hasFloatingLabel }];
        },
        labelClasses: function labelClasses() {
            return {
                'is-inline': this.hasFloatingLabel && this.isLabelInline,
                'is-floating': this.hasFloatingLabel && !this.isLabelInline
            };
        },
        hasLabel: function hasLabel() {
            return Boolean(this.label) || Boolean(this.$slots.default);
        },
        hasFloatingLabel: function hasFloatingLabel() {
            return this.hasLabel && this.floatingLabel;
        },
        isLabelInline: function isLabelInline() {
            return this.value.length === 0 && !this.isActive;
        },
        minValue: function minValue() {
            if (this.type === 'number' && this.min !== undefined) {
                return this.min;
            }

            return null;
        },
        maxValue: function maxValue() {
            if (this.type === 'number' && this.max !== undefined) {
                return this.max;
            }

            return null;
        },
        stepValue: function stepValue() {
            return this.type === 'number' ? this.step : null;
        },
        hasFeedback: function hasFeedback() {
            return Boolean(this.help) || Boolean(this.error);
        },
        showError: function showError() {
            return this.invalid && Boolean(this.error);
        },
        showHelp: function showHelp() {
            return !this.showError && Boolean(this.help);
        }
    },

    mounted: function mounted() {
        if (this.multiLine && this.autosize) {
            (0, _autosize2.default)(this.$refs.textarea);
            this.autosizeInitialized = true;
        }
    },
    beforeDestroy: function beforeDestroy() {
        if (this.autosizeInitialized) {
            _autosize2.default.destroy(this.$refs.textarea);
        }
    },


    methods: {
        updateValue: function updateValue(value) {
            this.$emit('input', value);
        },
        onChange: function onChange(e) {
            this.$emit('change', this.value, e);
        },
        onFocus: function onFocus(e) {
            this.isActive = true;
            this.$emit('focus', e);
        },
        onBlur: function onBlur(e) {
            this.isActive = false;
            this.$emit('blur', e);

            if (!this.isTouched) {
                this.isTouched = true;
                this.$emit('touch');
            }
        },
        onKeydown: function onKeydown(e) {
            this.$emit('keydown', e);
        },
        onKeydownEnter: function onKeydownEnter(e) {
            this.$emit('keydown-enter', e);
        },
        reset: function reset() {
            // Blur the input if it's focused to prevent required errors
            // when it's value is reset
            if (document.activeElement === this.$refs.input || document.activeElement === this.$refs.textarea) {
                document.activeElement.blur();
            }

            this.updateValue(this.initialValue);
            this.resetTouched();
        },
        resetTouched: function resetTouched() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { touched: false };

            this.isTouched = options.touched;
        },
        refreshSize: function refreshSize() {
            if (this.autosizeInitialized) {
                _autosize2.default.update(this.$refs.textarea);
            }
        }
    },

    components: {
        UiIcon: _UiIcon2.default
    },

    directives: {
        autofocus: _autofocus2.default
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _UiIconButton = __webpack_require__(8);

var _UiIconButton2 = _interopRequireDefault(_UiIconButton);

var _UiProgressLinear = __webpack_require__(29);

var _UiProgressLinear2 = _interopRequireDefault(_UiProgressLinear);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
    name: 'ui-toolbar',

    props: {
        type: {
            type: String,
            default: 'default' // 'default', 'colored' or 'clear' - colored is brand primary color
        },
        textColor: {
            type: String,
            default: 'black' // 'black' or 'white'
        },
        title: String,
        brand: String,
        removeBrandDivider: {
            type: Boolean,
            default: false
        },
        navIcon: {
            type: String,
            default: 'menu'
        },
        removeNavIcon: {
            type: Boolean,
            default: false
        },
        raised: {
            type: Boolean,
            default: true
        },
        progressPosition: {
            type: String,
            default: 'bottom' // 'top' or 'bottom'
        },
        loading: {
            type: Boolean,
            default: false
        }
    },

    computed: {
        classes: function classes() {
            return ['ui-toolbar--type-' + this.type, 'ui-toolbar--text-color-' + this.textColor, 'ui-toolbar--progress-position-' + this.progressPosition, { 'is-raised': this.raised }];
        },
        progressColor: function progressColor() {
            return this.textColor === 'black' ? 'primary' : 'white';
        },
        hasBrandDivider: function hasBrandDivider() {
            return this.removeBrandDivider ? false : this.brand || this.$slots.brand;
        }
    },

    methods: {
        navIconClick: function navIconClick() {
            this.$emit('nav-icon-click');
        }
    },

    components: {
        UiIconButton: _UiIconButton2.default,
        UiProgressLinear: _UiProgressLinear2.default
    }
};

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _tetherTooltip = __webpack_require__(192);

var _tetherTooltip2 = _interopRequireDefault(_tetherTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    name: 'ui-tooltip',

    props: {
        trigger: {
            type: String,
            required: true
        },
        position: {
            type: String,
            default: 'bottom center'
        },
        openOn: {
            type: String,
            default: 'hover focus'
        },
        openDelay: {
            type: Number,
            default: 0
        }
    },

    data: function data() {
        return {
            tooltip: null
        };
    },


    watch: {
        trigger: function trigger() {
            if (this.tooltip === null) {
                this.initialize();
            }
        }
    },

    mounted: function mounted() {
        if (this.tooltip === null) {
            this.initialize();
        }
    },
    beforeDestroy: function beforeDestroy() {
        if (this.tooltip !== null) {
            this.tooltip.destroy();
        }
    },


    methods: {
        initialize: function initialize() {
            if (this.trigger !== undefined) {
                this.tooltip = new _tetherTooltip2.default({
                    target: this.$parent.$refs[this.trigger],
                    content: this.$refs.tooltip,
                    classes: 'ui-tooltip--theme-default',
                    position: this.position,
                    openOn: this.openOn,
                    openDelay: this.openDelay
                });
            }
        }
    }
}; //
//
//
//
//
//

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isObj = __webpack_require__(191);
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Sources cannot be null or undefined');
	}

	return Object(val);
}

function assignKey(to, from, key) {
	var val = from[key];

	if (val === undefined || val === null) {
		return;
	}

	if (hasOwnProperty.call(to, key)) {
		if (to[key] === undefined || to[key] === null) {
			throw new TypeError('Cannot convert undefined or null to object (' + key + ')');
		}
	}

	if (!hasOwnProperty.call(to, key) || !isObj(val)) {
		to[key] = val;
	} else {
		to[key] = assign(Object(to[key]), from[key]);
	}
}

function assign(to, from) {
	if (to === from) {
		return to;
	}

	from = Object(from);

	for (var key in from) {
		if (hasOwnProperty.call(from, key)) {
			assignKey(to, from, key);
		}
	}

	if (Object.getOwnPropertySymbols) {
		var symbols = Object.getOwnPropertySymbols(from);

		for (var i = 0; i < symbols.length; i++) {
			if (propIsEnumerable.call(from, symbols[i])) {
				assignKey(to, from, symbols[i]);
			}
		}
	}

	return to;
}

module.exports = function deepAssign(target) {
	target = toObject(target);

	for (var s = 1; s < arguments.length; s++) {
		assign(target, arguments[s]);
	}

	return target;
};


/***/ }),
/* 122 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 123 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 124 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 125 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 126 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 127 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 128 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 129 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 130 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 131 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 132 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 133 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 134 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 135 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 136 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 137 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 138 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 139 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 140 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 141 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 142 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 143 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 144 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 145 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 146 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 147 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 148 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 149 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 150 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 151 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 152 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 153 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 154 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 155 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 156 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 157 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 158 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 159 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 160 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 161 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 162 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 163 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 164 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 165 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 166 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 167 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 168 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 169 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 170 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 171 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 172 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 173 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 174 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 175 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 176 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 177 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 178 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 179 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 180 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 181 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 182 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 183 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 184 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 185 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 186 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 187 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 188 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 189 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 190 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function (x) {
	var type = typeof x;
	return x !== null && (type === 'object' || type === 'function');
};


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! tether-tooltip 1.1.0 */

(function(root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(24),__webpack_require__(25)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if (typeof exports === 'object') {
    module.exports = factory(require('tether-drop'), require('tether'));
  } else {
    root.Tooltip = factory(root.Drop, root.Tether);
  }
}(this, function(Drop, Tether) {

/* global Tether Drop */

'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var extend = Tether.Utils.extend;

var _Drop = Drop.createContext({
  classPrefix: 'tooltip'
});

var defaults = {
  position: 'top center',
  openOn: 'hover',
  classes: 'tooltip-theme-arrows',
  constrainToWindow: true,
  constrainToScrollParent: false
};

var tooltipCount = 0;

var Tooltip = (function () {
  function Tooltip(options) {
    _classCallCheck(this, Tooltip);

    this.options = options;

    if (!this.options.target) {
      throw new Error('Tooltip Error: You must provide a target for Tooltip to attach to');
    }

    var position = this.options.target.getAttribute('data-tooltip-position');
    if (position) {
      if (typeof this.options.position === 'undefined') {
        this.options.position = position;
      }
    }

    var content = this.options.target.getAttribute('data-tooltip');

    if (content) {
      if (typeof this.options.content === 'undefined') {
        var contentEl = document.createElement('div');
        contentEl.innerHTML = content;

        // Add ARIA attributes (see #50)
        contentEl.setAttribute('role', 'tooltip');
        contentEl.id = 'drop-tooltip-' + tooltipCount;
        this.options.target.setAttribute('aria-describedby', contentEl.id);
        tooltipCount += 1;

        this.options.content = contentEl;
      }
    }

    if (!this.options.content) {
      throw new Error('Tooltip Error: You must provide content for Tooltip to display');
    }

    this.options = extend({}, defaults, this.options);

    this.drop = new _Drop(this.options);
  }

  _createClass(Tooltip, [{
    key: 'close',
    value: function close() {
      this.drop.close();
    }
  }, {
    key: 'open',
    value: function open() {
      this.drop.open();
    }
  }, {
    key: 'toggle',
    value: function toggle() {
      this.drop.toggle();
    }
  }, {
    key: 'remove',
    value: function remove() {
      this.drop.remove();
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      this.drop.destroy();
    }
  }, {
    key: 'position',
    value: function position() {
      this.drop.position();
    }
  }]);

  return Tooltip;
})();

var initialized = [];

Tooltip.init = function () {
  var tooltipElements = document.querySelectorAll('[data-tooltip]');
  var len = tooltipElements.length;
  for (var i = 0; i < len; ++i) {
    var el = tooltipElements[i];
    if (initialized.indexOf(el) === -1) {
      new Tooltip({
        target: el
      });
      initialized.push(el);
    }
  }
};

document.addEventListener('DOMContentLoaded', function () {
  if (Tooltip.autoinit !== false) {
    Tooltip.init();
  }
});
return Tooltip;

}));


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(47),
  /* template */
  __webpack_require__(281),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(48),
  /* template */
  __webpack_require__(257),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(150)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(49),
  /* template */
  __webpack_require__(276),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(161)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(50),
  /* template */
  __webpack_require__(288),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(155)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(51),
  /* template */
  __webpack_require__(282),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(149)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(52),
  /* template */
  __webpack_require__(275),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(53),
  /* template */
  __webpack_require__(263),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(54),
  /* template */
  __webpack_require__(302),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(185)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(55),
  /* template */
  __webpack_require__(315),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(137)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(56),
  /* template */
  __webpack_require__(262),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(123)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(57),
  /* template */
  __webpack_require__(247),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(169)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(58),
  /* template */
  __webpack_require__(297),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(175)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(59),
  /* template */
  __webpack_require__(304),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(166)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(60),
  /* template */
  __webpack_require__(294),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(172)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(61),
  /* template */
  __webpack_require__(300),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(122)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(62),
  /* template */
  __webpack_require__(246),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(189)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(63),
  /* template */
  __webpack_require__(319),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(163)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(64),
  /* template */
  __webpack_require__(291),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(151)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(65),
  /* template */
  __webpack_require__(277),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(167)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(66),
  /* template */
  __webpack_require__(295),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(144)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(67),
  /* template */
  __webpack_require__(270),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(68),
  /* template */
  __webpack_require__(290),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(181)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(69),
  /* template */
  __webpack_require__(311),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(153)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(70),
  /* template */
  __webpack_require__(279),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(124)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(71),
  /* template */
  __webpack_require__(248),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(158)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(72),
  /* template */
  __webpack_require__(285),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(176)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(73),
  /* template */
  __webpack_require__(305),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(74),
  /* template */
  __webpack_require__(309),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(134)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(75),
  /* template */
  __webpack_require__(259),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(135)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(76),
  /* template */
  __webpack_require__(260),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(173)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(77),
  /* template */
  __webpack_require__(301),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(128)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(78),
  /* template */
  __webpack_require__(252),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(138)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(79),
  /* template */
  __webpack_require__(264),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(131)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(80),
  /* template */
  __webpack_require__(255),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(129)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(81),
  /* template */
  __webpack_require__(253),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(188)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(82),
  /* template */
  __webpack_require__(318),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(183)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(84),
  /* template */
  __webpack_require__(313),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(148)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(85),
  /* template */
  __webpack_require__(274),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(184)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(86),
  /* template */
  __webpack_require__(314),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(142)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(87),
  /* template */
  __webpack_require__(268),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(171)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(88),
  /* template */
  __webpack_require__(299),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(170)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(90),
  /* template */
  __webpack_require__(298),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(141)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(93),
  /* template */
  __webpack_require__(267),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(160)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(94),
  /* template */
  __webpack_require__(287),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(165)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(95),
  /* template */
  __webpack_require__(293),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(177)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(96),
  /* template */
  __webpack_require__(306),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(145)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(100),
  /* template */
  __webpack_require__(271),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(125)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(103),
  /* template */
  __webpack_require__(249),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(127)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(110),
  /* template */
  __webpack_require__(251),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(186)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(111),
  /* template */
  __webpack_require__(316),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(154)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(113),
  /* template */
  __webpack_require__(280),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(147)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(116),
  /* template */
  __webpack_require__(273),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {


/* styles */
__webpack_require__(180)

var Component = __webpack_require__(0)(
  /* script */
  __webpack_require__(119),
  /* template */
  __webpack_require__(310),
  /* scopeId */
  null,
  /* cssModules */
  null
)

module.exports = Component.exports


/***/ }),
/* 246 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-modal"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiModal")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('p', [_vm._v("UiModal is keyboard accessible (can be closed with the ESC key, keep tab focus in the modal and return focus to the element that had it before the modal was open).")]), _vm._v(" "), _c('p', [_vm._v("UiModal can be dismissed by one or more of these three events: on ESC key press, clicking the backdrop, or clicking the close button. These events can be customized. Dismissing can be disabled to prevent the user from closing the modal.")]), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('p', [_vm._v("The modal will automatically add a vertical scrollbar to its body when the content overflows the available space.")]), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('div', {
    staticClass: "page__demo"
  }, [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-modal', {
    ref: "modal1",
    attrs: {
      "title": "Basic Modal"
    }
  }, [_vm._v("\n                Hello World! What's happening?\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal1')
      }
    }
  }, [_vm._v("Basic Modal")]), _vm._v(" "), _c('ui-modal', {
    ref: "modal2",
    attrs: {
      "dismiss-on": "close-button esc",
      "title": "Can't close by clicking backdrop"
    }
  }, [_vm._v("\n                Hello World! What's happening?\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal2')
      }
    }
  }, [_vm._v("\n                Can't close by clicking backdrop\n            ")]), _vm._v(" "), _c('ui-modal', {
    ref: "modal3",
    attrs: {
      "title": "Stuck with me!",
      "dismissible": false
    }
  }, [_vm._v("\n                Can't close at all. Refresh the page to continue.\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal3')
      }
    }
  }, [_vm._v("Can't close at all")])], 1), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-modal', {
    ref: "modal4",
    attrs: {
      "remove-close-button": "",
      "title": "Header × button is removed"
    }
  }, [_vm._v("Hello World! What's happening?")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal4')
      }
    }
  }, [_vm._v("No header close button")]), _vm._v(" "), _c('ui-modal', {
    ref: "modal5"
  }, [_c('div', {
    slot: "header"
  }, [_c('b', [_vm._v("Custom")]), _vm._v(" header has "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/HTML",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("HTML")])]), _vm._v("\n\n                Hey, some "), _c('b', [_vm._v("nice")]), _vm._v(" text here.\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal5')
      }
    }
  }, [_vm._v("Custom header")])], 1), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-modal', {
    ref: "modal6",
    attrs: {
      "title": "With footer"
    }
  }, [_vm._v("\n                Hi there, World. What's happening?\n\n                "), _c('div', {
    slot: "footer"
  }, [_c('ui-button', {
    attrs: {
      "color": "primary"
    }
  }, [_vm._v("Say Hi")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.closeModal('modal6')
      }
    }
  }, [_vm._v("Close")])], 1)]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal6')
      }
    }
  }, [_vm._v("With footer")])], 1), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-modal', {
    ref: "modal7",
    attrs: {
      "size": "small",
      "title": "Small modal"
    }
  }, [_vm._v("\n                Hi there, World. What's happening?\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal7')
      }
    }
  }, [_vm._v("Small Modal")]), _vm._v(" "), _c('ui-modal', {
    ref: "modal8",
    attrs: {
      "size": "large",
      "title": "Large modal"
    }
  }, [_vm._v("\n                Hi there, World. What's happening?\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal8')
      }
    }
  }, [_vm._v("Large Modal")]), _vm._v(" "), _c('ui-modal', {
    ref: "modal9",
    attrs: {
      "title": "Scrolling Modal"
    }
  }, [_c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Velit maiores perspiciatis suscipit sit nemo. Similique dignissimos, quas nisi aperiam dolorum omnis tenetur impedit, cum eaque harum officia? Rerum ullam ratione non perferendis, vel harum quam.")]), _vm._v(" "), _c('p', [_vm._v("Provident iste, iusto adipisci, tenetur harum porro omnis sequi eveniet, accusantium facilis non ipsum. Excepturi deleniti tempore error atque aperiam quia dolorum perferendis. Libero accusamus dolor ipsam soluta impedit laboriosam optio veritatis obcaecati atque, asperiores!")]), _vm._v(" "), _c('p', [_vm._v("Quidem reprehenderit dolorem ducimus, expedita repellendus amet eaque voluptas molestiae debitis, adipisci obcaecati in nulla dolor eos ex illum. Quas molestiae dolores voluptatibus ullam et, quisquam nisi, consequuntur quod unde earum corporis nam harum repellat.")]), _vm._v(" "), _c('p', [_vm._v("Dolores sapiente saepe a explicabo quia possimus obcaecati quasi, quod asperiores dolore velit animi in eligendi incidunt, corporis at ut ipsum quos inventore quas suscipit tempore voluptatem voluptates. Quae dicta magni commodi sed, nisi animi!")]), _vm._v(" "), _c('p', [_vm._v("Itaque voluptas facere totam et explicabo, asperiores unde, cumque amet illo, hic sit excepturi quis architecto maxime. Aliquam nostrum ad blanditiis consequatur cum nulla, hic, reiciendis optio voluptate tenetur, maxime quisquam assumenda. Dignissimos corrupti, magnam.")]), _vm._v(" "), _c('p', [_vm._v("Quia, dolor, dolores? Sed dolor, maxime, nihil et cupiditate adipisci vel, accusantium repellendus voluptate quisquam optio dolorem illum tenetur rem. Voluptatem, officiis. Autem porro totam non vitae, officiis, ad dolorum, architecto dolor ratione, sed eligendi.")]), _vm._v(" "), _c('p', [_vm._v("Similique quidem, magni, dolores quam repellat provident? Sunt beatae ipsum, dignissimos eos iusto rem aspernatur unde commodi nam reprehenderit quis molestias accusantium. Enim quo beatae velit quisquam veritatis! Sed dolorem praesentium quidem consequuntur, impedit dolores?")]), _vm._v(" "), _c('p', [_vm._v("Ab, illum necessitatibus dolorum fuga. Aspernatur repellat assumenda aliquid officia aut accusamus veniam ipsum temporibus, suscipit nulla quibusdam libero aperiam aliquam, molestias in, possimus nemo soluta vero sed architecto. Libero doloremque aliquid a quam nostrum.")]), _vm._v(" "), _c('p', [_vm._v("Non quam et earum soluta quasi animi numquam perferendis magni explicabo impedit tempore ducimus aperiam natus veniam, eum esse, unde delectus velit nihil laudantium dolorum rem. Soluta dignissimos libero, laboriosam cupiditate, sint ipsum ab maiores.")]), _vm._v(" "), _c('p', [_vm._v("Totam quas nobis iste iure voluptatem. Dolores tempore voluptates omnis inventore, laborum eaque aperiam eligendi, maxime beatae, exercitationem fugit. Quae non, eum dignissimos consequuntur voluptate vel ipsam quos minima sequi. Illum eius natus maxime reiciendis.")])]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal9')
      }
    }
  }, [_vm._v("Scrolling Modal")])], 1), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-modal', {
    ref: "modal10",
    attrs: {
      "title": "Fade In Modal",
      "transition": "fade"
    }
  }, [_vm._v("\n                Hello, World. What's happening?\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.openModal('modal10')
      }
    }
  }, [_vm._v("Fade in Modal")])], 1)]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("title")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"UiModal title\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The modal title (text only). For HTML, use the "), _c('code', [_vm._v("header")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("size")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"normal\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The size of the modal. One of "), _c('code', [_vm._v("small")]), _vm._v(", "), _c('code', [_vm._v("normal")]), _vm._v(", or "), _c('code', [_vm._v("large")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can customize the modal size by overriding the "), _c('code', [_vm._v("width")]), _vm._v(" property of "), _c('code', [_vm._v(".ui-modal__container")]), _vm._v(" using CSS.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("role")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"dialog\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The ARIA role for the modal (important for accessibility).")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("dialog")]), _vm._v(" or "), _c('code', [_vm._v("alertdialog")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("transition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"scale\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The modal enter/leave transition. One of "), _c('code', [_vm._v("scale")]), _vm._v(" or "), _c('code', [_vm._v("fade")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("removeHeader")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the modal header is removed.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to remove the modal header (useful for custom modals).")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("removeCloseButton")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the header close button is removed.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to remove the header close button.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("preventShift")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not to add a dummy scrollbar to the modal backdrop to prevent the modal shifting horizontally when the "), _c('code', [_vm._v("<body>")]), _vm._v(" scrollbar is hidden.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to prevent the modal shift.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dismissible")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the modal can be dismissed.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("false")]), _vm._v(" to prevent the user from dismissing the modal. This will also hide the header close button.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dismissOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"backdrop close-button esc\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event or events that will cause the modal to be dismissed.")]), _vm._v(" "), _c('p', [_vm._v("One or more of "), _c('code', [_vm._v("backdrop")]), _vm._v(", "), _c('code', [_vm._v("close-button")]), _vm._v(", or "), _c('code', [_vm._v("esc")]), _vm._v(". Separate multiple events with a space.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the modal body and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("header")]), _vm._v(" "), _c('td', [_vm._v("Holds the the modal header and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("footer")]), _vm._v(" "), _c('td', [_vm._v("Holds the the modal footer and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the modal is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "new-prop"
  }, [_vm._v("reveal")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the modal is revealed (i.e. when the open transition completes).")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@reveal")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the modal is hidden (i.e. when the close transition completes).")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@close")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "new-prop"
  }, [_vm._v("hide")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the modal close transition completes.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@hide")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("open()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to open the modal.")])])]), _vm._v(" "), _c('tr', [_c('td', [_c('code', [_vm._v("close()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to close the modal.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiModal is used to show modal dialogs. The modal's header, body and footer can be customized using "), _c('code', [_vm._v("slots")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiModal has two transition types: a simple fade in, and scale in from above. It also has three sizes: "), _c('code', [_vm._v("small")]), _vm._v(", "), _c('code', [_vm._v("normal")]), _vm._v(" (default) and "), _c('code', [_vm._v("large")]), _vm._v(". The modal size can also be customized using CSS.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiModal.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 247 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-fab"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiFab")]), _vm._v(" "), _c('p', [_vm._v("UiFab shows a primary, floating action button. It supports mouse and keyboard focus, hover and disabled states.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('ui-radio-group', {
    attrs: {
      "name": "size",
      "options": ['small', 'normal']
    },
    model: {
      value: (_vm.size),
      callback: function($$v) {
        _vm.size = $$v
      },
      expression: "size"
    }
  }, [_vm._v("Button Size")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Colors")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-fab', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-fab', {
    attrs: {
      "color": "accent",
      "icon": "edit",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-fab', {
    attrs: {
      "icon": "keyboard_voice",
      "size": _vm.size
    }
  })], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With tooltip")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-fab', {
    attrs: {
      "color": "primary",
      "icon": "edit",
      "tooltip-position": "top center",
      "tooltip": "Top center",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-fab', {
    attrs: {
      "color": "accent",
      "icon": "edit",
      "tooltip": "Bottom center",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-fab', {
    attrs: {
      "icon": "edit",
      "tooltip-position": "left middle",
      "tooltip": "Left middle",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-fab', {
    attrs: {
      "icon": "edit",
      "tooltip-position": "right middle",
      "tooltip": "Right middle",
      "size": _vm.size
    }
  })], 1)], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("size")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"normal\"")])]), _vm._v(" "), _c('td', [_vm._v("The size of the FAB. One of "), _c('code', [_vm._v("normal")]), _vm._v(" or "), _c('code', [_vm._v("small")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"default\"")])]), _vm._v(" "), _c('td', [_vm._v("The background color of the FAB. One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(" or "), _c('code', [_vm._v("default")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The FAB icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("ariaLabel")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The FAB "), _c('code', [_vm._v("aria-label")]), _vm._v(" attribute (important for accessibility).")]), _vm._v(" "), _c('p', [_vm._v("Falls back to "), _c('code', [_vm._v("tooltip")]), _vm._v(" if not specified.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("tooltip")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The FAB tooltip (text only).")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("tooltipPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"bottom left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the tooltip relative to the FAB.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("top left")]), _vm._v(", "), _c('code', [_vm._v("left top")]), _vm._v(", "), _c('code', [_vm._v("left middle")]), _vm._v(", "), _c('code', [_vm._v("left bottom")]), _vm._v(", "), _c('code', [_vm._v("bottom left")]), _vm._v(", "), _c('code', [_vm._v("bottom center")]), _vm._v(", "), _c('code', [_vm._v("bottom right")]), _vm._v(", "), _c('code', [_vm._v("right bottom")]), _vm._v(", "), _c('code', [_vm._v("right middle")]), _vm._v(", "), _c('code', [_vm._v("right top")]), _vm._v(", "), _c('code', [_vm._v("top right")]), _vm._v(", or "), _c('code', [_vm._v("top center")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("openTooltipOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"hover focus\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event or events that will cause the tooltip to open.")]), _vm._v(" "), _c('p', [_vm._v("One or more of "), _c('code', [_vm._v("click")]), _vm._v(", "), _c('code', [_vm._v("hover")]), _vm._v(", or "), _c('code', [_vm._v("focus")]), _vm._v(". Separate multiple events with a space.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableRipple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the ripple ink animation is shown when the FAB is clicked.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the ripple ink animation.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the FAB icon and can contain any custom or SVG icon.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiFab has two sizes: "), _c('code', [_vm._v("normal")]), _vm._v(" and "), _c('code', [_vm._v("small")]), _vm._v(" and three colors: "), _c('code', [_vm._v("default")]), _vm._v(" (white), "), _c('code', [_vm._v("primary")]), _vm._v(" and "), _c('code', [_vm._v("accent")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiFab.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 248 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-slider"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiSlider")]), _vm._v(" "), _c('p', [_vm._v("UiSlider allows the user to select a value from a continuous range of values by moving the slider thumb, clicking on the slider, or using the keyboard arrow keys.")]), _vm._v(" "), _c('p', [_vm._v("UiSlider supports an icon and a disabled state. The slider is keyboard accessible.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-slider', {
    model: {
      value: (_vm.slider1),
      callback: function($$v) {
        _vm.slider1 = $$v
      },
      expression: "slider1"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icon")]), _vm._v(" "), _c('ui-slider', {
    attrs: {
      "icon": "volume_up"
    },
    model: {
      value: (_vm.slider2),
      callback: function($$v) {
        _vm.slider2 = $$v
      },
      expression: "slider2"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With marker")]), _vm._v(" "), _c('ui-slider', {
    attrs: {
      "icon": "volume_up",
      "show-marker": ""
    },
    model: {
      value: (_vm.slider3),
      callback: function($$v) {
        _vm.slider3 = $$v
      },
      expression: "slider3"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Snap to steps: 20")]), _vm._v(" "), _c('ui-slider', {
    attrs: {
      "icon": "volume_up",
      "show-marker": "",
      "snap-to-steps": "",
      "step": 20
    },
    model: {
      value: (_vm.slider4),
      callback: function($$v) {
        _vm.slider4 = $$v
      },
      expression: "slider4"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-slider', {
    attrs: {
      "icon": "volume_up",
      "disabled": ""
    },
    model: {
      value: (_vm.slider5),
      callback: function($$v) {
        _vm.slider5 = $$v
      },
      expression: "slider5"
    }
  }), _vm._v(" "), _c('ui-button', {
    on: {
      "click": _vm.resetSliders
    }
  }, [_vm._v("Reset Sliders")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the slider's hidden input element. Useful when traditionally submitting a form the slider is a part of.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_vm._v("(required)")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model that the slider value syncs to. Changing this value will update the slider.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The slider icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can also use the "), _c('code', [_vm._v("icon")]), _vm._v(" slot to show a custom or SVG icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("step")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("5")])]), _vm._v(" "), _c('td', [_vm._v("The amount to increment or decrement the slider value by when using the keyboard arrow keys. Also determines the snap points on the slider when "), _c('code', [_vm._v("snapToSteps")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("snapToSteps")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the slider value should be snapped to distrete steps. Setting to "), _c('code', [_vm._v("true")]), _vm._v(" will ensure that the value is always a multiple of the "), _c('code', [_vm._v("step")]), _vm._v(" prop when a drag is completed.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("showMarker")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not to show a marker (like a tooltip) above the slider which shows the current value. The value shown can be customized using the "), _c('code', [_vm._v("markerValue")]), _vm._v(" prop.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("markerValue")]), _vm._v(" "), _c('td', [_vm._v("Number, String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The value shown in the marker when "), _c('code', [_vm._v("showMarker")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(". If not provided and "), _c('code', [_vm._v("showMarker")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the slider's value is shown in the marker.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the slider is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the slider.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("Holds the slider icon and can be used to show a custom or SVG icon.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the slider is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the slider loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the slider value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the value of the slider is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dragstart")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the user starts dragging the slider thumb. The handler is called with the current value and the drag event object.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dragstart")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dragend")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the user stops dragging the slider thumb. The handler is called with the current value and the drag event object.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dragend")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("reset()")])]), _vm._v(" "), _c('td', [_vm._v("Call this method to reset the slider's value to its initial value.")])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiSlider.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 249 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-preloader",
    class: {
      'is-loading': _vm.show
    }
  }, [_c('div', {
    staticClass: "ui-preloader__progressbar",
    attrs: {
      "role": "progressbar",
      "aria-busy": _vm.show ? 'true' : false
    }
  })])
},staticRenderFns: []}

/***/ }),
/* 250 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('label', {
    staticClass: "ui-radio",
    class: _vm.classes,
    on: {
      "click": _vm.toggleCheck
    }
  }, [_c('div', {
    staticClass: "ui-radio__input-wrapper"
  }, [_c('input', {
    staticClass: "ui-radio__input",
    attrs: {
      "type": "radio",
      "disabled": _vm.disabled,
      "name": _vm.name
    },
    domProps: {
      "value": _vm.trueValue
    },
    on: {
      "blur": _vm.onBlur,
      "change": _vm.onChange,
      "focus": _vm.onFocus
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "ui-radio__focus-ring"
  }), _vm._v(" "), _c('span', {
    staticClass: "ui-radio__outer-circle"
  }), _vm._v(" "), _c('span', {
    staticClass: "ui-radio__inner-circle"
  })]), _vm._v(" "), (_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-radio__label-text"
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e()])
},staticRenderFns: []}

/***/ }),
/* 251 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('li', {
    staticClass: "ui-select-option",
    class: _vm.classes
  }, [_vm._t("default", [(_vm.type === 'basic') ? _c('div', {
    staticClass: "ui-select-option__basic"
  }, [_vm._v("\n            " + _vm._s(_vm.option[_vm.keys.label] || _vm.option) + "\n        ")]) : _vm._e(), _vm._v(" "), (_vm.type === 'image') ? _c('div', {
    staticClass: "ui-select-option__image"
  }, [_c('div', {
    staticClass: "ui-select-option__image-object",
    style: (_vm.imageStyle)
  }), _vm._v(" "), _c('div', {
    staticClass: "ui-select-option__image-text"
  }, [_vm._v(_vm._s(_vm.option[_vm.keys.label]))])]) : _vm._e(), _vm._v(" "), (_vm.multiple) ? _c('div', {
    staticClass: "ui-select-option__checkbox"
  }, [(_vm.selected) ? _c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M9.984 17.016l9-9-1.406-1.453-7.594 7.594-3.563-3.563L5.016 12zm9-14.016C20.11 3 21 3.938 21 5.016v13.97C21 20.062 20.11 21 18.984 21H5.014C3.89 21 3 20.064 3 18.986V5.015C3 3.94 3.89 3 5.014 3h13.97z"
    }
  })])]) : _c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M18.984 3C20.062 3 21 3.938 21 5.016v13.97C21 20.062 20.062 21 18.984 21H5.014C3.938 21 3 20.064 3 18.986V5.015C3 3.94 3.936 3 5.014 3h13.97zm0 2.016H5.014v13.97h13.97V5.015z"
    }
  })])])], 1) : _vm._e()])], 2)
},staticRenderFns: []}

/***/ }),
/* 252 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('transition', {
    attrs: {
      "name": "ui-alert--transition-toggle"
    }
  }, [_c('div', {
    staticClass: "ui-alert",
    class: _vm.classes,
    attrs: {
      "role": "alert"
    }
  }, [_c('div', {
    staticClass: "ui-alert__body"
  }, [(!_vm.removeIcon) ? _c('div', {
    staticClass: "ui-alert__icon"
  }, [_vm._t("icon", [(_vm.type === 'info') ? _c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M12.984 9V6.984h-1.97V9h1.97zm0 8.016v-6h-1.97v6h1.97zm-.984-15c5.53 0 9.984 4.453 9.984 9.984S17.53 21.984 12 21.984 2.016 17.53 2.016 12 6.47 2.016 12 2.016z"
    }
  })])]) : _vm._e(), _vm._v(" "), (_vm.type === 'success') ? _c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M9.984 17.016l9-9-1.406-1.453-7.594 7.594-3.563-3.563L5.016 12zm2.016-15c5.53 0 9.984 4.453 9.984 9.984S17.53 21.984 12 21.984 2.016 17.53 2.016 12 6.47 2.016 12 2.016z"
    }
  })])]) : _vm._e(), _vm._v(" "), (_vm.type === 'warning') ? _c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M12.984 14.016v-4.03h-1.97v4.03h1.97zm0 3.984v-2.016h-1.97V18h1.97zm-12 3L12 2.016 23.016 21H.986z"
    }
  })])]) : _vm._e(), _vm._v(" "), (_vm.type === 'error') ? _c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M12.984 12.984v-6h-1.97v6h1.97zm0 4.032V15h-1.97v2.016h1.97zm-.984-15c5.53 0 9.984 4.453 9.984 9.984S17.53 21.984 12 21.984 2.016 17.53 2.016 12 6.47 2.016 12 2.016z"
    }
  })])]) : _vm._e()])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-alert__content"
  }, [_vm._t("default")], 2), _vm._v(" "), _c('div', {
    staticClass: "ui-alert__dismiss-button"
  }, [(_vm.dismissible) ? _c('ui-close-button', {
    attrs: {
      "size": "small"
    },
    on: {
      "click": _vm.dismissAlert
    }
  }) : _vm._e()], 1)])])])
},staticRenderFns: []}

/***/ }),
/* 253 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('span', {
    staticClass: "ui-breadcrumb"
  }, [_c('a', {
    attrs: {
      "href": _vm.item.url
    }
  }, [_vm._v(_vm._s(_vm.item.title))]), _vm._v(" "), _c('span', {
    staticClass: "ui-breadcrumb__arrow"
  }, [_vm._v("›")])])
},staticRenderFns: []}

/***/ }),
/* 254 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-radio-group",
    class: _vm.classes
  }, [(_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-radio-group__label-text"
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-radio-group__radios"
  }, _vm._l((_vm.options), function(option) {
    return _c('ui-radio', {
      key: option[_vm.keys.id],
      staticClass: "ui-radio-group__radio",
      class: option[_vm.keys.class],
      attrs: {
        "button-position": _vm.buttonPosition,
        "checked": _vm.isOptionCheckedByDefault(option),
        "color": _vm.color,
        "disabled": _vm.disabled || option[_vm.keys.disabled],
        "id": option[_vm.keys.id],
        "name": _vm.name,
        "true-value": option[_vm.keys.value] || option
      },
      on: {
        "blur": _vm.onBlur,
        "focus": _vm.onFocus
      },
      model: {
        value: (_vm.selectedOptionValue),
        callback: function($$v) {
          _vm.selectedOptionValue = $$v
        },
        expression: "selectedOptionValue"
      }
    }, [_vm._v(_vm._s(option[_vm.keys.label] || option))])
  })), _vm._v(" "), (_vm.hasFeedback) ? _c('div', {
    staticClass: "ui-radio-group__feedback"
  }, [(_vm.showError) ? _c('div', {
    staticClass: "ui-radio-group__feedback-text"
  }, [_vm._t("error", [_vm._v(_vm._s(_vm.error))])], 2) : (_vm.showHelp) ? _c('div', {
    staticClass: "ui-radio-group__feedback-text"
  }, [_vm._t("help", [_vm._v(_vm._s(_vm.help))])], 2) : _vm._e()]) : _vm._e()])
},staticRenderFns: []}

/***/ }),
/* 255 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('li', {
    staticClass: "ui-autocomplete-suggestion",
    class: _vm.classes
  }, [_vm._t("default", [(_vm.type === 'simple') ? _c('div', {
    staticClass: "ui-autocomplete-suggestion__simple"
  }, [_vm._v("\n            " + _vm._s(_vm.suggestion[_vm.keys.label] || _vm.suggestion) + "\n        ")]) : _vm._e(), _vm._v(" "), (_vm.type === 'image') ? _c('div', {
    staticClass: "ui-autocomplete-suggestion__image"
  }, [_c('div', {
    staticClass: "ui-autocomplete-suggestion__image-object",
    style: (_vm.imageStyle)
  }), _vm._v(" "), _c('div', {
    staticClass: "ui-autocomplete-suggestion__image-text"
  }, [_vm._v(_vm._s(_vm.suggestion[_vm.keys.label]))])]) : _vm._e()])], 2)
},staticRenderFns: []}

/***/ }),
/* 256 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "nucleus-docs",
    attrs: {
      "id": "app"
    }
  }, [_c('sidebar', {
    staticClass: "is-desktop"
  }), _vm._v(" "), _c('transition', {
    attrs: {
      "name": "transition-fade"
    }
  }, [_c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showSidebar),
      expression: "showSidebar"
    }],
    staticClass: "nucleus-docs-mobile-sidebar__backdrop",
    on: {
      "click": function($event) {
        _vm.showSidebar = false
      }
    }
  })]), _vm._v(" "), _c('transition', {
    attrs: {
      "name": "transition-slide"
    }
  }, [_c('sidebar', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showSidebar),
      expression: "showSidebar"
    }],
    staticClass: "is-mobile"
  })], 1), _vm._v(" "), _c('section', {
    staticClass: "nucleus-docs-content"
  }, [_c('div', {
    staticClass: "nucleus-docs-content__toolbar"
  }, [_c('div', {
    staticClass: "nucleus-docs-content__toolbar-content"
  }, [_c('ui-icon-button', {
    staticClass: "nucleus-docs-content__toolbar-menu-button",
    attrs: {
      "color": "white",
      "icon": "menu",
      "type": "clear"
    },
    on: {
      "click": function($event) {
        _vm.showSidebar = true
      }
    }
  }), _vm._v(" "), _c('h1', {
    staticClass: "nucleus-docs-content__toolbar-title"
  }, [_vm._v(_vm._s(_vm.$route.meta.title))]), _vm._v(" "), (_vm.$route.meta.sourceUrl) ? _c('a', {
    staticClass: "nucleus-docs-content__toolbar-action",
    attrs: {
      "rel": "noopener",
      "target": "_blank",
      "href": 'https://github.com/TemperWorks/Nucleus/blob/master/' + _vm.$route.meta.sourceUrl
    }
  }, [_vm._v("View Source")]) : _vm._e()], 1)]), _vm._v(" "), _c('div', {
    ref: "pageContent",
    staticClass: "nucleus-docs-content__page-content"
  }, [_c('router-view')], 1)])], 1)
},staticRenderFns: []}

/***/ }),
/* 257 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-alert"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiAlert")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('p', [_vm._v("UiAlert supports keyboard navigation, can contain links and can be dismissed. The alert icon can be changed or removed.")]), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('ui-alert', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showAlert1),
      expression: "showAlert1"
    }],
    on: {
      "dismiss": function($event) {
        _vm.showAlert1 = false
      }
    }
  }, [_vm._v("\n            Hi everybody! This is the default alert.\n        ")]), _vm._v(" "), _c('ui-alert', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showAlert2),
      expression: "showAlert2"
    }],
    attrs: {
      "type": "success"
    },
    on: {
      "dismiss": function($event) {
        _vm.showAlert2 = false
      }
    }
  }, [_vm._v("\n            Okilly dokilly, your account was updated successfully.\n        ")]), _vm._v(" "), _c('ui-alert', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showAlert3),
      expression: "showAlert3"
    }],
    attrs: {
      "type": "warning"
    },
    on: {
      "dismiss": function($event) {
        _vm.showAlert3 = false
      }
    }
  }, [_vm._v("\n            Ay caramba! Alerts can also contain HTML. "), _c('a', {
    attrs: {
      "href": "https://google.com",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Click here")]), _vm._v(" for Google.com.\n        ")]), _vm._v(" "), _c('ui-alert', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showAlert4),
      expression: "showAlert4"
    }],
    attrs: {
      "type": "error"
    },
    on: {
      "dismiss": function($event) {
        _vm.showAlert4 = false
      }
    }
  }, [_vm._v("\n            D'oh! Something went wrong and we cannot process your request at this time. Try again later.\n        ")]), _vm._v(" "), _c('ui-alert', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showAlert5),
      expression: "showAlert5"
    }],
    attrs: {
      "type": "warning"
    },
    on: {
      "dismiss": function($event) {
        _vm.showAlert5 = false
      }
    }
  }, [_c('ui-icon', {
    attrs: {
      "icon": "battery_alert"
    },
    slot: "icon"
  }), _vm._v("\n            This alert has a custom icon.\n        ")], 1), _vm._v(" "), _c('ui-alert', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showAlert6),
      expression: "showAlert6"
    }],
    on: {
      "dismiss": function($event) {
        _vm.showAlert6 = false
      }
    }
  }, [_vm._v("\n            This is a multi-line alert. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor suscipit facilis explicabo officiis consectetur, ipsam voluptate excepturi quas quae. Dolorem. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quis, autem.\n        ")]), _vm._v(" "), _c('ui-alert', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showAlert7),
      expression: "showAlert7"
    }],
    attrs: {
      "remove-icon": ""
    },
    on: {
      "dismiss": function($event) {
        _vm.showAlert7 = false
      }
    }
  }, [_vm._v("\n            The icon for this alert has been removed.\n        ")]), _vm._v(" "), _c('ui-alert', {
    attrs: {
      "dismissible": false
    }
  }, [_vm._v("This alert is not dismissible.")]), _vm._v(" "), _c('ui-alert', {
    attrs: {
      "dismissible": false,
      "remove-icon": ""
    }
  }, [_vm._v("\n            This alert has no icon is not dismissible.\n        ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": _vm.resetAlerts
    }
  }, [_vm._v("Reset Alerts")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"info\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of alert. Determines the alert background color and default icon.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("info")]), _vm._v(", "), _c('code', [_vm._v("success")]), _vm._v(", "), _c('code', [_vm._v("warning")]), _vm._v(" or "), _c('code', [_vm._v("error")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("removeIcon")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the alert icon is removed.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to remove the icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dismissible")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the alert shows a dismiss button.")]), _vm._v(" "), _c('p', [_vm._v("You should listen for the "), _c('code', [_vm._v("dismiss")]), _vm._v(" event and hide the alert.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("false")]), _vm._v(" to remove the dismiss button.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the alert content and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the button icon and can contain any custom or SVG icon.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("dismiss")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the user clicks the dismiss button. You should listen for this event and hide alert.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dismiss")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiAlert shows an inline alert message to the user. Supported types are "), _c('code', [_vm._v("info")]), _vm._v(", "), _c('code', [_vm._v("success")]), _vm._v(", "), _c('code', [_vm._v("warning")]), _vm._v(" and "), _c('code', [_vm._v("error")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiAlert.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 258 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-select",
    class: _vm.classes
  }, [(_vm.name) ? _c('input', {
    staticClass: "ui-select__hidden-input",
    attrs: {
      "type": "hidden",
      "name": _vm.name
    },
    domProps: {
      "value": _vm.submittedValue
    }
  }) : _vm._e(), _vm._v(" "), (_vm.icon || _vm.$slots.icon) ? _c('div', {
    staticClass: "ui-select__icon-wrapper"
  }, [_vm._t("icon", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-select__content"
  }, [_c('div', {
    ref: "label",
    staticClass: "ui-select__label",
    attrs: {
      "tabindex": _vm.disabled ? null : '0'
    },
    on: {
      "click": _vm.toggleDropdown,
      "focus": _vm.onFocus,
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        $event.preventDefault();
        _vm.openDropdown($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "space", 32)) { return null; }
        $event.preventDefault();
        _vm.openDropdown($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "tab", 9)) { return null; }
        _vm.onBlur($event)
      }]
    }
  }, [(_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-select__label-text",
    class: _vm.labelClasses
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-select__display"
  }, [_c('div', {
    staticClass: "ui-select__display-value",
    class: {
      'is-placeholder': !_vm.hasDisplayText
    }
  }, [_vm._v("\n                    " + _vm._s(_vm.hasDisplayText ? _vm.displayText : (_vm.hasFloatingLabel && _vm.isLabelInline) ? null : _vm.placeholder) + "\n                ")]), _vm._v(" "), _c('ui-icon', {
    staticClass: "ui-select__dropdown-button"
  }, [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "16",
      "height": "10"
    }
  }, [_c('path', {
    attrs: {
      "d": "M.9 2.85L7.94 9.9l7.07-7.05c.5-.5.5-1.3 0-1.8-.5-.48-1.3-.48-1.8 0l-5.27 5.3-5.27-5.3c-.5-.48-1.3-.48-1.8 0-.48.5-.48 1.3 0 1.8"
    }
  })])])], 1), _vm._v(" "), _c('transition', {
    attrs: {
      "name": "ui-select--transition-fade"
    }
  }, [_c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showDropdown),
      expression: "showDropdown"
    }],
    ref: "dropdown",
    staticClass: "ui-select__dropdown",
    attrs: {
      "tabindex": "-1"
    },
    on: {
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "down", 40)) { return null; }
        $event.preventDefault();
        _vm.highlightOption(_vm.highlightedIndex + 1)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        $event.preventDefault();
        $event.stopPropagation();
        _vm.selectHighlighted(_vm.highlightedIndex, $event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "esc", 27)) { return null; }
        $event.preventDefault();
        _vm.closeDropdown()
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "tab", 9)) { return null; }
        _vm.onBlur($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "up", 38)) { return null; }
        $event.preventDefault();
        _vm.highlightOption(_vm.highlightedIndex - 1)
      }]
    }
  }, [(_vm.hasSearch) ? _c('div', {
    staticClass: "ui-select__search",
    on: {
      "click": function($event) {
        $event.stopPropagation();
      },
      "keydown": function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "space", 32)) { return null; }
        $event.stopPropagation();
      }
    }
  }, [_c('input', {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: (_vm.query),
      expression: "query"
    }],
    ref: "searchInput",
    staticClass: "ui-select__search-input",
    attrs: {
      "autocomplete": "off",
      "type": "text",
      "placeholder": _vm.searchPlaceholder
    },
    domProps: {
      "value": (_vm.query)
    },
    on: {
      "input": function($event) {
        if ($event.target.composing) { return; }
        _vm.query = $event.target.value
      }
    }
  }), _vm._v(" "), _c('ui-icon', {
    staticClass: "ui-select__search-icon"
  }, [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M9.516 14.016c2.484 0 4.5-2.016 4.5-4.5s-2.016-4.5-4.5-4.5-4.5 2.016-4.5 4.5 2.016 4.5 4.5 4.5zm6 0l4.97 4.97-1.5 1.5-4.97-4.97v-.797l-.28-.282c-1.126.984-2.626 1.547-4.22 1.547-3.61 0-6.516-2.86-6.516-6.47S5.906 3 9.516 3s6.47 2.906 6.47 6.516c0 1.594-.564 3.094-1.548 4.22l.28.28h.798z"
    }
  })])]), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    staticClass: "ui-select__search-progress",
    attrs: {
      "size": 20,
      "stroke": 4
    }
  })], 1) : _vm._e(), _vm._v(" "), _c('ul', {
    ref: "optionsList",
    staticClass: "ui-select__options"
  }, [_vm._l((_vm.filteredOptions), function(option, index) {
    return _c('ui-select-option', {
      ref: "options",
      refInFor: true,
      attrs: {
        "highlighted": _vm.highlightedIndex === index,
        "keys": _vm.keys,
        "multiple": _vm.multiple,
        "option": option,
        "selected": _vm.isOptionSelected(option),
        "type": _vm.type
      },
      nativeOn: {
        "click": function($event) {
          $event.stopPropagation();
          _vm.selectOption(option, index)
        },
        "mouseover": function($event) {
          $event.stopPropagation();
          _vm.highlightOption(index, {
            autoScroll: false
          })
        }
      }
    }, [_vm._t("option", null, {
      highlighted: _vm.highlightedIndex === index,
      index: index,
      option: option,
      selected: _vm.isOptionSelected(option)
    })], 2)
  }), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.hasNoResults),
      expression: "hasNoResults"
    }],
    staticClass: "ui-select__no-results"
  }, [_vm._t("no-results", [_vm._v("No results found")])], 2)], 2)])])], 1), _vm._v(" "), (_vm.hasFeedback) ? _c('div', {
    staticClass: "ui-select__feedback"
  }, [(_vm.showError) ? _c('div', {
    staticClass: "ui-select__feedback-text"
  }, [_vm._t("error", [_vm._v(_vm._s(_vm.error))])], 2) : (_vm.showHelp) ? _c('div', {
    staticClass: "ui-select__feedback-text"
  }, [_vm._t("help", [_vm._v(_vm._s(_vm.help))])], 2) : _vm._e()]) : _vm._e()])])
},staticRenderFns: []}

/***/ }),
/* 259 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-textbox"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiTextbox")]), _vm._v(" "), _c('p', [_vm._v("UiTextbox is a versatile text input component with support for hover, focus, active, invalid and disabled states.")]), _vm._v(" "), _c('p', [_vm._v("A label can be shown above the textbox as well as help or error below the textbox. UiTextbox can show an icon to the left or right of the input. It can also show a counter of the number of characters entered.")]), _vm._v(" "), _c('p', [_vm._v("UiTextbox supports multi-line text input (textarea) and the textbox will grow by default to fit its content.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "label": "Name",
      "placeholder": "Enter your name"
    },
    model: {
      value: (_vm.textbox1),
      callback: function($$v) {
        _vm.textbox1 = $$v
      },
      expression: "textbox1"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Floating label")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "floating-label": "",
      "label": "Name",
      "placeholder": "Enter your name"
    },
    model: {
      value: (_vm.textbox2),
      callback: function($$v) {
        _vm.textbox2 = $$v
      },
      expression: "textbox2"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "disabled": "",
      "label": "Name",
      "placeholder": "Enter your name"
    },
    model: {
      value: (_vm.textbox3),
      callback: function($$v) {
        _vm.textbox3 = $$v
      },
      expression: "textbox3"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With default value")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "label": "Name",
      "placeholder": "Enter your name"
    },
    model: {
      value: (_vm.textbox4),
      callback: function($$v) {
        _vm.textbox4 = $$v
      },
      expression: "textbox4"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With default value, disabled")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "disabled": "",
      "label": "Name",
      "placeholder": "Enter your name"
    },
    model: {
      value: (_vm.textbox5),
      callback: function($$v) {
        _vm.textbox5 = $$v
      },
      expression: "textbox5"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With help")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "help": "If you have multiple names, enter the one you prefer",
      "label": "Name",
      "placeholder": "Enter your name"
    },
    model: {
      value: (_vm.textbox6),
      callback: function($$v) {
        _vm.textbox6 = $$v
      },
      expression: "textbox6"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icon")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "icon": "phone",
      "label": "Phone number",
      "placeholder": "Enter your phone number",
      "type": "tel"
    },
    model: {
      value: (_vm.textbox7),
      callback: function($$v) {
        _vm.textbox7 = $$v
      },
      expression: "textbox7"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icon, no label")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "icon": "search",
      "placeholder": "Search"
    },
    model: {
      value: (_vm.textbox8),
      callback: function($$v) {
        _vm.textbox8 = $$v
      },
      expression: "textbox8"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("iconPosition: right, with help")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "help": "If you have multiple email addresses, enter the one you use the most",
      "icon-position": "right",
      "icon": "mail",
      "label": "Email address",
      "placeholder": "Enter your email address",
      "type": "email"
    },
    model: {
      value: (_vm.textbox9),
      callback: function($$v) {
        _vm.textbox9 = $$v
      },
      expression: "textbox9"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With validation: required")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "autocomplete": "off",
      "error": "This field is required",
      "help": "If you have multiple names, enter the one you prefer",
      "label": "Name",
      "placeholder": "Enter your name",
      "required": "",
      "invalid": _vm.textbox10Touched && _vm.textbox10.length === 0
    },
    on: {
      "touch": function($event) {
        _vm.textbox10Touched = true
      }
    },
    model: {
      value: (_vm.textbox10),
      callback: function($$v) {
        _vm.textbox10 = $$v
      },
      expression: "textbox10"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With validation and counter (max length)")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "error": "The username may not be more than 16 characters",
      "help": "Pick a unique username not more than 16 characters",
      "icon": "person",
      "label": "Username",
      "placeholder": "Enter a username",
      "maxlength": 16,
      "invalid": _vm.textbox11.length > 16
    },
    model: {
      value: (_vm.textbox11),
      callback: function($$v) {
        _vm.textbox11 = $$v
      },
      expression: "textbox11"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: number, min: 0, max: 99")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "help": "The ideal number of cats a person should own, minimum 0, maximum 99",
      "label": "Number of Cats",
      "placeholder": "Enter number of cats",
      "type": "number",
      "min": 0,
      "max": 99
    },
    model: {
      value: (_vm.textbox12),
      callback: function($$v) {
        _vm.textbox12 = _vm._n($$v)
      },
      expression: "textbox12"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Multi-line (textarea)")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "enforce-maxlength": "",
      "help": "Maximum 256 characters",
      "label": "Short bio",
      "placeholder": "Introduce yourself in a few words",
      "multi-line": true,
      "maxlength": 256
    },
    model: {
      value: (_vm.textbox13),
      callback: function($$v) {
        _vm.textbox13 = $$v
      },
      expression: "textbox13"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Multi-line (textarea) with floating label")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "enforce-maxlength": "",
      "floating-label": "",
      "help": "Maximum 256 characters",
      "label": "Short bio",
      "placeholder": "Introduce yourself in a few words",
      "multi-line": true,
      "maxlength": 256
    },
    model: {
      value: (_vm.textbox14),
      callback: function($$v) {
        _vm.textbox14 = $$v
      },
      expression: "textbox14"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Multi-line (textarea) with icon")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "enforce-maxlength": "",
      "help": "Maximum 256 characters",
      "icon": "face",
      "label": "Short bio",
      "placeholder": "Introduce yourself in a few words",
      "multi-line": true,
      "maxlength": 256
    },
    model: {
      value: (_vm.textbox15),
      callback: function($$v) {
        _vm.textbox15 = $$v
      },
      expression: "textbox15"
    }
  })], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the textbox input element.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("String, Number")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model that the textbox value syncs to. Can be set initially as a default value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"text\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("type")]), _vm._v(" attribute of the textbox input element.")]), _vm._v(" "), _c('p', [_vm._v("Supported values are "), _c('code', [_vm._v("text")]), _vm._v(", "), _c('code', [_vm._v("password")]), _vm._v(", "), _c('code', [_vm._v("search")]), _vm._v(", "), _c('code', [_vm._v("email")]), _vm._v(", "), _c('code', [_vm._v("url")]), _vm._v(", "), _c('code', [_vm._v("tel")]), _vm._v(", and "), _c('code', [_vm._v("number")]), _vm._v(". Other values for which the browser shows a custom UI may work, but are not supported.")]), _vm._v(" "), _c('p', [_vm._v("Only applicable when "), _c('code', [_vm._v("multiLine")]), _vm._v(" is "), _c('code', [_vm._v("false")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("placeholder")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("placeholder")]), _vm._v(" attribute of the textbox input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("multiLine")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the textbox is a rendered as a textarea.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to render a textarea.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("invalid")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the input is invalid.")]), _vm._v(" "), _c('p', [_vm._v("When "), _c('code', [_vm._v("invalid")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the textbox label appears red and the error is shown if available.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("rows")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("2")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("rows")]), _vm._v(" attribute of the textarea element.")]), _vm._v(" "), _c('p', [_vm._v("Only applicable when the "), _c('code', [_vm._v("multiLine")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("required")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("required")]), _vm._v(" attribute of the textbox input and textarea elements.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("readonly")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("readonly")]), _vm._v(" attribute of the textbox input and textarea elements.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("autofocus")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the textbox should automatically receive focus when it is rendered for the first time.")]), _vm._v(" "), _c('p', [_vm._v("Only one input element should have this prop set to "), _c('code', [_vm._v("true")]), _vm._v(" in the document for the autofocus to work properly.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("autocomplete")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of autocomplete suggestions the browser should offer for the input.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-autocomplete",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("autocomplete attribute docs")]), _vm._v(" for more info.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("\"off\"")]), _vm._v(" to disable the browser autocomplete.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("autosize")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the textarea should automatically grow in height to fit its content.")]), _vm._v(" "), _c('p', [_vm._v("Note that when you change the textbox's value programmatically, you should call the "), _c('code', [_vm._v("refreshSize()")]), _vm._v(" method to update the textarea size.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("false")]), _vm._v(" to disable auto sizing.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("min")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("min")]), _vm._v(" attribute of the textbox input element.")]), _vm._v(" "), _c('p', [_vm._v("Only applicable when the "), _c('code', [_vm._v("type")]), _vm._v(" prop is "), _c('code', [_vm._v("\"number\"")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("max")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("max")]), _vm._v(" attribute of the textbox input element.")]), _vm._v(" "), _c('p', [_vm._v("Only applicable when the "), _c('code', [_vm._v("type")]), _vm._v(" prop is "), _c('code', [_vm._v("\"number\"")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("step")]), _vm._v(" "), _c('td', [_vm._v("Number, String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"any\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("step")]), _vm._v(" attribute of the textbox input element.")]), _vm._v(" "), _c('p', [_vm._v("Only applicable when the "), _c('code', [_vm._v("type")]), _vm._v(" prop is "), _c('code', [_vm._v("\"number\"")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("maxlength")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("maxlength")]), _vm._v(" attribute of the input and textarea elements. When set, a character counter will be shown below the textbox.")]), _vm._v(" "), _c('p', [_vm._v("The max length restriction is only enforced when the "), _c('code', [_vm._v("enforceMaxlength")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("enforceMaxlength")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not to enforce the "), _c('code', [_vm._v("maxlength")]), _vm._v(" prop as an input restriction.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to ensure that the user cannot enter more characters than "), _c('code', [_vm._v("maxlength")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The textbox icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the icon relative to the textbox. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The textbox label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("floatingLabel")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the textbox label starts out inline and moves to float above the input when it is focused.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" for a floating label. This will disable the input placeholder.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The help text (hint) shown below the textbox. For HTML, use the "), _c('code', [_vm._v("help")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the textbox for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The error text shown to the user below the textbox input when the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(". For HTML, use the "), _c('code', [_vm._v("error")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the textbox for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the input is disabled. Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the input.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the autocomplete label and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the textbox icon and can contain any custom or SVG icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the textbox help and can contain HTML.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the textbox error and can contain HTML.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a change in the textbox value is committed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/Events/change",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("onchange event documentation")]), _vm._v(" for more information.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("touch")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the textbox is focused for the first time and then blurred.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@touch")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the textbox is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the textbox loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("keydown")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a key is pressed in the input. The handler is called with the event object.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@keydown")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("keydown-enter")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the Enter key is pressed in the input. The handler is called with the event object.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@keydown-enter")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("reset()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to reset the textbox to its initial value. You should also reset the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("resetTouched()")])]), _vm._v(" "), _c('td', [_vm._v("Call this method to reset the touched state of the textbox. By default it will set the touched state to "), _c('code', [_vm._v("false")]), _vm._v(", but you can pass an object with "), _c('code', [_vm._v("{ touched: true }")]), _vm._v(" to set the touched state to "), _c('code', [_vm._v("true")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_c('code', [_vm._v("refreshSize()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to refresh the size of the textarea when you change the value programmatically.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiTextbox.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 260 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-toolbar"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiToolbar")]), _vm._v(" "), _c('p', [_vm._v("UiToolbar components shows a toolbar with a navigation icon, branding, title, and actions.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-toolbar', {
    attrs: {
      "title": "Inbox"
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "refresh",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton1",
    attrs: {
      "color": "black",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton1.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Raised: false")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-toolbar', {
    attrs: {
      "title": "Inbox",
      "raised": false
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "refresh",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton2",
    attrs: {
      "color": "black",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton2.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With brand")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-toolbar', {
    attrs: {
      "brand": "Mail App",
      "title": "Inbox"
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "refresh",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton3",
    attrs: {
      "color": "black",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton3.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: colored")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-toolbar', {
    attrs: {
      "type": "colored",
      "text-color": "white",
      "title": "Inbox"
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "refresh",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton4",
    attrs: {
      "color": "white",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton4.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: colored, with brand")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-toolbar', {
    attrs: {
      "brand": "Mail App",
      "text-color": "white",
      "title": "Inbox",
      "type": "colored"
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "refresh",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton6",
    attrs: {
      "color": "white",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton6.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: colored, with linear progress")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-toolbar', {
    attrs: {
      "loading": "",
      "text-color": "white",
      "type": "colored"
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "refresh",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton5",
    attrs: {
      "color": "white",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton5.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1), _vm._v("\n\n                Inbox\n            ")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: clear, text-color: white")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group has-photo-cover page__demo-group--photo-1"
  }, [_c('ui-toolbar', {
    attrs: {
      "brand": "Photo App",
      "text-color": "white",
      "title": "Gallery",
      "type": "clear",
      "raised": false
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "arrow_back",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton7",
    attrs: {
      "color": "white",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton7.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: clear, text-color: black, with linear progress on top")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group has-photo-cover page__demo-group--photo-2"
  }, [_c('ui-toolbar', {
    attrs: {
      "brand": "Photo App",
      "loading": "",
      "progress-position": "top",
      "title": "Gallery",
      "type": "clear",
      "raised": false
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "arrow_back",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton8",
    attrs: {
      "color": "black",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton8.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)])], 1)]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Combined with tabs")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group page__demo-group--has-tabs"
  }, [_c('ui-toolbar', {
    attrs: {
      "brand": "Book App",
      "remove-brand-divider": "",
      "text-color": "white",
      "type": "colored",
      "raised": false
    }
  }, [_c('div', {
    slot: "actions"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "search",
      "size": "large",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    ref: "dropdownButton8",
    attrs: {
      "color": "white",
      "has-dropdown": "",
      "icon": "more_vert",
      "size": "large",
      "type": "secondary"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton8.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1)]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "background-color": "primary",
      "fullwidth": "",
      "indicator-color": "white",
      "text-color-active": "white",
      "text-color": "white",
      "type": "text"
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Books",
      "icon": "book"
    }
  }, [_vm._v("\n                My Books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Authors",
      "icon": "people"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Collections",
      "icon": "collections_bookmark"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Favourites",
      "icon": "favorite"
    }
  }, [_vm._v("\n                My favourites\n            ")])], 1)], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"default\"")])]), _vm._v(" "), _c('td', [_vm._v("\n                            The type of toolbar (determines the background color). One of "), _c('code', [_vm._v("default")]), _vm._v(", "), _c('code', [_vm._v("colored")]), _vm._v("\n                            or "), _c('code', [_vm._v("clear")]), _vm._v(".\n                        ")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("textColor")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"black\"")])]), _vm._v(" "), _c('td', [_vm._v("The toolbar text and icon color. One of "), _c('code', [_vm._v("black")]), _vm._v(" or "), _c('code', [_vm._v("white")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("title")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The toolbar title (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("brand")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The brand (text only). For HTML, use the "), _c('code', [_vm._v("brand")]), _vm._v(" slot.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("removeBrandDivider")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the divider between the brand and title is removed.")]), _vm._v(" "), _c('p', [_vm._v("By default, if the brand is set, the divider is shown, otherwise it is removed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("navIcon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"menu\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The toolbar navigation icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".\n                            ")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon or icon button using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("removeNavIcon")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the navigation icon is removed. Set to "), _c('code', [_vm._v("true")]), _vm._v("\n                            to remove the navigation icon.\n                        ")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("raised")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the toolbar has a drop shadow. Set to "), _c('code', [_vm._v("false")]), _vm._v("\n                            to remove the drop shadow.\n                        ")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("progressPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"bottom\"")])]), _vm._v(" "), _c('td', [_vm._v("The position of the progress bar relative to the toolbar. One of "), _c('code', [_vm._v("top")]), _vm._v("\n                            or "), _c('code', [_vm._v("bottom")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("loading")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the progress is shown. Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show the progress.\n                        ")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the toolbar title and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("\n                                Holds the toolbar navigation icon and can contain any custom or SVG icon or icon button.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("brand")]), _vm._v(" "), _c('td', [_vm._v("Holds the toolbar brand and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("actions")]), _vm._v(" "), _c('td', [_vm._v("Holds the toolbar actions and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("nav-icon-click")]), _vm._v(" "), _c('td', [_vm._v("\n                            Emitted when the navigation icon is clicked. Listen for it using "), _c('code', [_vm._v("@nav-icon-click")]), _vm._v(".\n                        ")])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiToolbar has three types: "), _c('code', [_vm._v("default")]), _vm._v(", "), _c('code', [_vm._v("colored")]), _vm._v(" and "), _c('code', [_vm._v("clear")]), _vm._v(". The toolbar can be raised (with a drop shadow) and the navigation icon, brand, title and actions can be customized using slots.\n    ")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiToolbar.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 261 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('label', {
    staticClass: "ui-switch",
    class: _vm.classes
  }, [_c('div', {
    staticClass: "ui-switch__input-wrapper"
  }, [_c('input', {
    staticClass: "ui-switch__input",
    attrs: {
      "type": "checkbox",
      "disabled": _vm.disabled,
      "name": _vm.name
    },
    domProps: {
      "checked": _vm.isChecked,
      "value": _vm.submittedValue
    },
    on: {
      "blur": _vm.onBlur,
      "change": _vm.onChange,
      "click": _vm.onClick,
      "focus": _vm.onFocus
    }
  }), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "ui-switch__track"
  })]), _vm._v(" "), (_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-switch__label-text"
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e()])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-switch__thumb"
  }, [_c('div', {
    staticClass: "ui-switch__focus-ring"
  })])
}]}

/***/ }),
/* 262 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-datepicker"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiDatepicker")]), _vm._v(" "), _c('p', [_vm._v("UiDatepicker shows a calendar that allows the user to pick a date. It allows for a custom date formatter and filter, as well as specifying minimum and maximum dates.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('p', [_vm._v("UiDatepicker can show a label above the input, an icon, as well as help or error below the input. It is keyboard accessible and supports a disabled state. The calendar popover may drop up or down based on the available space.")]), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker1),
      callback: function($$v) {
        _vm.picker1 = $$v
      },
      expression: "picker1"
    }
  }, [_vm._v("Your Birthday")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Floating label")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "floating-label": "",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker2),
      callback: function($$v) {
        _vm.picker2 = $$v
      },
      expression: "picker2"
    }
  }, [_vm._v("Your Birthday")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icon")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker3),
      callback: function($$v) {
        _vm.picker3 = $$v
      },
      expression: "picker3"
    }
  }, [_vm._v("Your Birthday")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With default value")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker4),
      callback: function($$v) {
        _vm.picker4 = $$v
      },
      expression: "picker4"
    }
  }, [_vm._v("Christmas Day")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Color: accent")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "color": "accent",
      "icon": "events",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker5),
      callback: function($$v) {
        _vm.picker5 = $$v
      },
      expression: "picker5"
    }
  }, [_vm._v("Your Birthday")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Orientation: landscape")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "orientation": "landscape",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker6),
      callback: function($$v) {
        _vm.picker6 = $$v
      },
      expression: "picker6"
    }
  }, [_vm._v("Your Birthday")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Picker type: modal")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "picker-type": "modal",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker7),
      callback: function($$v) {
        _vm.picker7 = $$v
      },
      expression: "picker7"
    }
  }, [_vm._v("Your Birthday")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Picker type: modal, orientation: landscape")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "orientation": "landscape",
      "picker-type": "modal",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker8),
      callback: function($$v) {
        _vm.picker8 = $$v
      },
      expression: "picker8"
    }
  }, [_vm._v("Your Birthday")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With custom formatter")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "orientation": "landscape",
      "placeholder": "Select a date",
      "custom-formatter": _vm.picker9Formatter
    },
    model: {
      value: (_vm.picker9),
      callback: function($$v) {
        _vm.picker9 = $$v
      },
      expression: "picker9"
    }
  }, [_vm._v("A Special Day")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With min and max date")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "help": "Pick a date within the next two weeks",
      "icon": "events",
      "orientation": "landscape",
      "placeholder": "Select a date",
      "max-date": _vm.picker10Max,
      "min-date": _vm.picker10Min
    },
    model: {
      value: (_vm.picker10),
      callback: function($$v) {
        _vm.picker10 = $$v
      },
      expression: "picker10"
    }
  }, [_vm._v("A Special Day")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With date filter: weekends disabled")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "orientation": "landscape",
      "placeholder": "Select a date",
      "date-filter": _vm.picker11Filter
    },
    model: {
      value: (_vm.picker11),
      callback: function($$v) {
        _vm.picker11 = $$v
      },
      expression: "picker11"
    }
  }, [_vm._v("A Special Day")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With custom lang: French")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "icon": "events",
      "orientation": "landscape",
      "placeholder": "Select a date",
      "lang": _vm.picker12Lang
    },
    model: {
      value: (_vm.picker12),
      callback: function($$v) {
        _vm.picker12 = $$v
      },
      expression: "picker12"
    }
  }, [_vm._v("A Special Day")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With validation: required")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "error": "This field is required",
      "icon": "events",
      "orientation": "landscape",
      "placeholder": "Select a date",
      "invalid": !_vm.picker13
    },
    model: {
      value: (_vm.picker13),
      callback: function($$v) {
        _vm.picker13 = $$v
      },
      expression: "picker13"
    }
  }, [_vm._v("A Special Day")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "disabled": "",
      "icon": "events",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker14),
      callback: function($$v) {
        _vm.picker14 = $$v
      },
      expression: "picker14"
    }
  }, [_vm._v("A Special Day")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled with a selection")]), _vm._v(" "), _c('ui-datepicker', {
    attrs: {
      "disabled": "",
      "placeholder": "Select a date"
    },
    model: {
      value: (_vm.picker15),
      callback: function($$v) {
        _vm.picker15 = $$v
      },
      expression: "picker15"
    }
  }, [_vm._v("A Special Day")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("Date")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model the selected date syncs to. Can be set initially for a default value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("minDate")]), _vm._v(" "), _c('td', [_vm._v("Date")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The minimum date to allow in the picker. Setting this will disable all dates before this date.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("maxDate")]), _vm._v(" "), _c('td', [_vm._v("Date")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The maximum date to allow in the picker. Setting this will disable all dates after this date.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("yearRange")]), _vm._v(" "), _c('td', [_vm._v("Array")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("A range of years to show in the picker. Should be a numeric array of years.")]), _vm._v(" "), _c('p', [_vm._v("By default its 100 years into the past and 100 years into the future, including the current year.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("lang")]), _vm._v(" "), _c('td', [_vm._v("Object")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('pre', {
    staticClass: "language-javascript is-compact"
  }, [_vm._v("{\n  months: {\n    full: ['January', 'Febuary', ...],\n    abbreviated: ['Jan', 'Feb', ...]\n  },\n  days: {\n    full: ['Sunday', Monday', ...],\n    abbreviated: ['Sun', 'Mon', ...],\n    initials: ['S', 'M', ...]\n  }\n}")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("An object of translations for the datepicker that allows for a basic form of localization.")]), _vm._v(" "), _c('p', [_vm._v("Provide an object with your language translations and they will be used for the text in the calendar.")]), _vm._v(" "), _c('p', [_vm._v("The "), _c('code', [_vm._v("days.full")]), _vm._v(", "), _c('code', [_vm._v("days.abbreviated")]), _vm._v(", and "), _c('code', [_vm._v("days.initials")]), _vm._v(" arrays should start with Sunday.")]), _vm._v(" "), _c('p', [_vm._v("Note that this doesn't translate the OK/Cancel buttons in the modal. To translate those, use the "), _c('code', [_vm._v("okButtonText")]), _vm._v(" and "), _c('code', [_vm._v("cancelButtonText")]), _vm._v(" props.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("customFormatter")]), _vm._v(" "), _c('td', [_vm._v("Function")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("A custom formatting function to use for displaying the selected date.")]), _vm._v(" "), _c('p', [_vm._v("This function will be called with the selected date object and should return the string to display.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dateFilter")]), _vm._v(" "), _c('td', [_vm._v("Function")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("A function which filters the calendar dates to determine which ones are enabled or disabled.")]), _vm._v(" "), _c('p', [_vm._v("This function will be called with the date object for each date in the month and should return "), _c('code', [_vm._v("true")]), _vm._v(" if the date is enabled or "), _c('code', [_vm._v("false")]), _vm._v(" otherwise.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_vm._v("The color of the datepicker header and the selected date/year. One of "), _c('code', [_vm._v("primary")]), _vm._v(" or "), _c('code', [_vm._v("accent")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("orientation")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"portrait\"")])]), _vm._v(" "), _c('td', [_vm._v("The orientation of the datepicker calendar. One of "), _c('code', [_vm._v("portrait")]), _vm._v(" or "), _c('code', [_vm._v("landscape")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("pickerType")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"popover\"")])]), _vm._v(" "), _c('td', [_vm._v("The type of picker to use for the calendar. One of "), _c('code', [_vm._v("popover")]), _vm._v(" or "), _c('code', [_vm._v("modal")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("okButtonText")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"OK\"")])]), _vm._v(" "), _c('td', [_vm._v("The text of the OK button when the picker type is modal.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("cancelButtonText")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"Cancel\"")])]), _vm._v(" "), _c('td', [_vm._v("The text of the Cancel button when the picker type is modal.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the datepicker's hidden input element. Useful when the datepicker is part of a form submitted traditionally.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("placeholder")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The text to display in the datepicker when no date is selected.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The datepicker icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the icon relative to the datepicker. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The datepicker label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("floatingLabel")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the label starts out inline and moves to float above the datepicker when it is focused.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" for a floating label. This will disable the placeholder.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("invalid")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the datepicker is invalid.")]), _vm._v(" "), _c('p', [_vm._v("When "), _c('code', [_vm._v("invalid")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the datepicker label appears red and the error is shown if available.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The help text (hint) shown to the user below the datepicker. For HTML, use the "), _c('code', [_vm._v("help")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the datepicker for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The error text shown to the user below the datepicker when the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(". For HTML, use the "), _c('code', [_vm._v("error")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the datepicker for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the datepicker is disabled. Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the datepicker.")])])])])])]), _vm._v("\n\n                * Required prop\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the datepicker label and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the datepicker icon and can contain any custom or SVG icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the datepicker help and can contain HTML.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the datepicker error and can contain HTML.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the datepicker value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("touch")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the datepicker is focused for the first time and then blurred.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@touch")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the datepicker is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the datepicker loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the picker (the modal or popover) is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the picker (the modal or popover) is closed.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@close")]), _vm._v(".")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("reset()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to reset the datepicker to its initial value. You should also reset the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("resetTouched()")])]), _vm._v(" "), _c('td', [_vm._v("Call this method to reset the touched state of the datepicker. By default it will set the touched state to "), _c('code', [_vm._v("false")]), _vm._v(", but you can pass an object with "), _c('code', [_vm._v("{ touched: true }")]), _vm._v(" to set the touched state to "), _c('code', [_vm._v("true")]), _vm._v(".")])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiDatepicker supports two colors: "), _c('code', [_vm._v("primary")]), _vm._v(" and "), _c('code', [_vm._v("accent")]), _vm._v(", two orientations: "), _c('code', [_vm._v("portrait")]), _vm._v(" and "), _c('code', [_vm._v("landscape")]), _vm._v(" as well as two picker types: "), _c('code', [_vm._v("popover")]), _vm._v(" and "), _c('code', [_vm._v("modal")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n            Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiDatepicker.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 263 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-checkbox-group"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiCheckboxGroup")]), _vm._v(" "), _c('p', [_vm._v("UiCheckboxGroup shows a group of related checkboxes. It supports hover, focus and disabled states.")]), _vm._v(" "), _c('p', [_vm._v("UiCheckboxGroup can show a label above the group as well as help or error below the group. One or more checkboxes in the group can be disabled or the entire group can be disabled.")]), _vm._v(" "), _c('p', [_vm._v("UiCheckboxGroup is primarily used for connecting a group of checkbox values together to form a single array.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "options": ['Red', 'Blue', 'Green']
    },
    model: {
      value: (_vm.group1),
      callback: function($$v) {
        _vm.group1 = $$v
      },
      expression: "group1"
    }
  }, [_vm._v("Favourite Colours")]), _vm._v(" "), _c('p', [_vm._v("Model: "), _c('code', [_vm._v(_vm._s(_vm.group1))])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With default selection")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group2),
      callback: function($$v) {
        _vm.group2 = $$v
      },
      expression: "group2"
    }
  }, [_vm._v("Favourite Colours")]), _vm._v(" "), _c('p', [_vm._v("Model: "), _c('code', [_vm._v(_vm._s(_vm.group2))])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With help")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "help": "Choose your favourite colours",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group3),
      callback: function($$v) {
        _vm.group3 = $$v
      },
      expression: "group3"
    }
  }, [_vm._v("Favourite Colours")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With error")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "error": "Choose at least 2 colours",
      "help": "Choose your favourite colours",
      "options": _vm.options.defaultGroup,
      "invalid": _vm.group3.length < 2
    },
    model: {
      value: (_vm.group3),
      callback: function($$v) {
        _vm.group3 = $$v
      },
      expression: "group3"
    }
  }, [_vm._v("Favourite Colours")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Box position: right")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "box-position": "right",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group4),
      callback: function($$v) {
        _vm.group4 = $$v
      },
      expression: "group4"
    }
  }, [_vm._v("Favourite Colours")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Vertical")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "vertical": "",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group5),
      callback: function($$v) {
        _vm.group5 = $$v
      },
      expression: "group5"
    }
  }, [_vm._v("Favourite Colours")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Individual option disabled")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "options": _vm.options.secondGroup
    },
    model: {
      value: (_vm.group6),
      callback: function($$v) {
        _vm.group6 = $$v
      },
      expression: "group6"
    }
  }, [_vm._v("Favourite Colours")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Group disabled")]), _vm._v(" "), _c('ui-checkbox-group', {
    attrs: {
      "disabled": "",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group7),
      callback: function($$v) {
        _vm.group7 = $$v
      },
      expression: "group7"
    }
  }, [_vm._v("Favourite Colours")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("Array")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model that holds the checked option values. Can be set initially for default values.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("options *")]), _vm._v(" "), _c('td', [_vm._v("Array")]), _vm._v(" "), _c('td', [_vm._v("(required)")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("An array of options to show to the user as checkboxes. The array can either be of strings or objects (but not both).")]), _vm._v(" "), _c('p', [_vm._v("For an array of objects, each object supports the following properties:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("id")]), _vm._v(": Applied as the "), _c('code', [_vm._v("id")]), _vm._v(" attribute on the option's root element.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("name")]), _vm._v(": Applied as the "), _c('code', [_vm._v("name")]), _vm._v(" attribute on the option's checkbox input element.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("class")]), _vm._v(": Applied as the "), _c('code', [_vm._v("class")]), _vm._v(" attribute on the option's root element")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("label")]), _vm._v("*: The option's label - shown to the user.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("value")]), _vm._v("*: The option's value - added to the model when the user checks the option, removed when the user unchecks the option.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("disabled")]), _vm._v(": Whether or not the option is disabled.")])]), _vm._v(" "), _c('p', [_vm._v("For an array of strings, each option string is used as both the label and the value.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("keys")]), _vm._v(" "), _c('td', [_vm._v("Object")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('pre', {
    staticClass: "language-javascript is-compact"
  }, [_vm._v("{\n  id: 'id',\n  name: 'name',\n  class: 'class',\n  label: 'label',\n  value: 'value',\n  disabled: 'disabled'\n}")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Allows for redefining the option keys. The "), _c('code', [_vm._v("id")]), _vm._v(", "), _c('code', [_vm._v("name")]), _vm._v(", "), _c('code', [_vm._v("class")]), _vm._v(" and "), _c('code', [_vm._v("disabled")]), _vm._v(" keys are optional.")]), _vm._v(" "), _c('p', [_vm._v("Pass an object with custom keys if your data does not match the default keys.")]), _vm._v(" "), _c('p', [_vm._v("Note that if you redefine one key, you have to define all the others as well.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of each checkbox's input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The checkbox group label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_vm._v("The color of the checkboxes in the group. One of "), _c('code', [_vm._v("primary")]), _vm._v(" or "), _c('code', [_vm._v("accent")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("boxPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_vm._v("The position of the checkboxes relative to their labels. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("vertical")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the checkbox options are rendered vertically, one over the other.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" for a vertical checkbox group.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The help text (hint) shown to the user below the checkbox group. For HTML, use the "), _c('code', [_vm._v("help")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the checkbox group for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The error text shown to the user below the checkbox group when the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(". For HTML, use the "), _c('code', [_vm._v("error")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the checkbox group for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("invalid")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the checkbox group is invalid.")]), _vm._v(" "), _c('p', [_vm._v("When "), _c('code', [_vm._v("invalid")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the checkbox group label appears red and the error is shown if available.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the checkbox group is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the checkbox group.")])])])])])]), _vm._v("\n\n                * Required prop\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the checkbox group label and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the checkbox group help and can contain HTML.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the checkbox group error and can contain HTML.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a checkbox in the group is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a checkbox in the group loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the checkbox group value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the value of the checkbox group is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("reset()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to reset the checkbox group's "), _c('code', [_vm._v("value")]), _vm._v(". You should also reset the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n            Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiCheckboxGroup.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 264 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-autocomplete",
    class: _vm.classes
  }, [(_vm.icon || _vm.$slots.icon) ? _c('div', {
    staticClass: "ui-autocomplete__icon-wrapper"
  }, [_vm._t("icon", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-autocomplete__content"
  }, [_c('label', {
    staticClass: "ui-autocomplete__label"
  }, [(_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-autocomplete__label-text",
    class: _vm.labelClasses
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e(), _vm._v(" "), _c('ui-icon', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (!_vm.disabled && _vm.value.length),
      expression: "!disabled && value.length"
    }],
    staticClass: "ui-autocomplete__clear-button",
    attrs: {
      "title": "Clear"
    },
    nativeOn: {
      "click": function($event) {
        _vm.updateValue('')
      }
    }
  }, [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M18.984 6.422L13.406 12l5.578 5.578-1.406 1.406L12 13.406l-5.578 5.578-1.406-1.406L10.594 12 5.016 6.422l1.406-1.406L12 10.594l5.578-5.578z"
    }
  })])]), _vm._v(" "), _c('input', {
    directives: [{
      name: "autofocus",
      rawName: "v-autofocus",
      value: (_vm.autofocus),
      expression: "autofocus"
    }],
    ref: "input",
    staticClass: "ui-autocomplete__input",
    attrs: {
      "autocomplete": "off",
      "disabled": _vm.disabled,
      "name": _vm.name,
      "placeholder": _vm.hasFloatingLabel ? null : _vm.placeholder,
      "readonly": _vm.readonly ? _vm.readonly : null
    },
    domProps: {
      "value": _vm.value
    },
    on: {
      "blur": _vm.onBlur,
      "change": _vm.onChange,
      "focus": _vm.onFocus,
      "input": function($event) {
        _vm.updateValue($event.target.value)
      },
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "down", 40)) { return null; }
        $event.preventDefault();
        _vm.highlightSuggestion(_vm.highlightedIndex + 1)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        _vm.selectHighlighted(_vm.highlightedIndex, $event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "esc", 27)) { return null; }
        _vm.closeDropdown($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "tab", 9)) { return null; }
        _vm.closeDropdown($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "up", 38)) { return null; }
        $event.preventDefault();
        _vm.highlightSuggestion(_vm.highlightedIndex - 1)
      }]
    }
  }), _vm._v(" "), _c('ul', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showDropdown),
      expression: "showDropdown"
    }],
    staticClass: "ui-autocomplete__suggestions"
  }, _vm._l((_vm.matchingSuggestions), function(suggestion, index) {
    return _c('ui-autocomplete-suggestion', {
      ref: "suggestions",
      refInFor: true,
      attrs: {
        "highlighted": _vm.highlightedIndex === index,
        "keys": _vm.keys,
        "suggestion": suggestion,
        "type": _vm.type
      },
      nativeOn: {
        "click": function($event) {
          _vm.selectSuggestion(suggestion)
        }
      }
    }, [_vm._t("suggestion", null, {
      highlighted: _vm.highlightedIndex === index,
      index: index,
      suggestion: suggestion
    })], 2)
  }))], 1), _vm._v(" "), (_vm.hasFeedback) ? _c('div', {
    staticClass: "ui-autocomplete__feedback"
  }, [(_vm.showError) ? _c('div', {
    staticClass: "ui-autocomplete__feedback-text"
  }, [_vm._t("error", [_vm._v(_vm._s(_vm.error))])], 2) : (_vm.showHelp) ? _c('div', {
    staticClass: "ui-autocomplete__feedback-text"
  }, [_vm._t("help", [_vm._v(_vm._s(_vm.help))])], 2) : _vm._e()]) : _vm._e()])])
},staticRenderFns: []}

/***/ }),
/* 265 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-popover",
    class: {
      'is-raised': _vm.raised
    },
    attrs: {
      "role": "dialog",
      "tabindex": "-1"
    },
    on: {
      "keydown": function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "esc", 27)) { return null; }
        _vm.closeDropdown($event)
      }
    }
  }, [_vm._t("default"), _vm._v(" "), _c('div', {
    staticClass: "ui-popover__focus-redirector",
    attrs: {
      "tabindex": "0"
    },
    on: {
      "focus": _vm.restrictFocus
    }
  })], 2)
},staticRenderFns: []}

/***/ }),
/* 266 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-ripple-ink"
  })
},staticRenderFns: []}

/***/ }),
/* 267 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-confirm"
  }, [_c('ui-modal', {
    ref: "modal",
    attrs: {
      "role": "alertdialog",
      "dismiss-on": _vm.dismissOn,
      "dismissible": !_vm.loading,
      "title": _vm.title,
      "transition": _vm.transition
    },
    on: {
      "close": _vm.onModalClose,
      "open": _vm.onModalOpen
    }
  }, [_c('div', {
    staticClass: "ui-confirm__message"
  }, [_vm._t("default")], 2), _vm._v(" "), _c('div', {
    staticClass: "ui-confirm__footer",
    slot: "footer"
  }, [_c('ui-button', {
    ref: "confirmButton",
    attrs: {
      "color": _vm.confirmButtonColor,
      "icon": _vm.confirmButtonIcon,
      "loading": _vm.loading
    },
    on: {
      "click": _vm.confirm
    }
  }, [_vm._v(_vm._s(_vm.confirmButtonText))]), _vm._v(" "), _c('ui-button', {
    ref: "denyButton",
    attrs: {
      "disabled": _vm.loading,
      "icon": _vm.denyButtonIcon
    },
    on: {
      "click": _vm.deny
    }
  }, [_vm._v(_vm._s(_vm.denyButtonText))])], 1)])], 1)
},staticRenderFns: []}

/***/ }),
/* 268 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-calendar-week"
  }, _vm._l((_vm.dates), function(date, index) {
    return _c('div', {
      key: index,
      staticClass: "ui-calendar-week__date",
      class: _vm.getDateClasses(date),
      attrs: {
        "tabindex": (_vm.visible && !_vm.isDateDisabled(date)) ? 0 : null
      },
      on: {
        "click": function($event) {
          _vm.selectDate(date)
        },
        "keydown": function($event) {
          if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
          _vm.selectDate(date)
        }
      }
    }, [_vm._v("\n        " + _vm._s(_vm.getDayOfMonth(date)) + "\n    ")])
  }))
},staticRenderFns: []}

/***/ }),
/* 269 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('label', {
    staticClass: "ui-checkbox",
    class: _vm.classes
  }, [_c('input', {
    staticClass: "ui-checkbox__input",
    attrs: {
      "type": "checkbox",
      "disabled": _vm.disabled,
      "name": _vm.name
    },
    domProps: {
      "checked": _vm.isChecked,
      "value": _vm.submittedValue
    },
    on: {
      "blur": _vm.onBlur,
      "change": _vm.onChange,
      "click": _vm.onClick,
      "focus": _vm.onFocus
    }
  }), _vm._v(" "), _vm._m(0), _vm._v(" "), (_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-checkbox__label-text"
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e()])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-checkbox__checkmark"
  }, [_c('div', {
    staticClass: "ui-checkbox__focus-ring"
  })])
}]}

/***/ }),
/* 270 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-radio"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiRadio")]), _vm._v(" "), _c('p', [_vm._v("UiRadio shows a single radio button. The radio button can have a label. It supports hover and disabled states. The position of the radio button relative to the label can be changed.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "true-value": "radio1-value"
    },
    model: {
      value: (_vm.radio1),
      callback: function($$v) {
        _vm.radio1 = $$v
      },
      expression: "radio1"
    }
  }, [_vm._v("Select")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Checked")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "true-value": "radio2-value",
      "checked": ""
    },
    model: {
      value: (_vm.radio2),
      callback: function($$v) {
        _vm.radio2 = $$v
      },
      expression: "radio2"
    }
  }, [_vm._v("Select")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Color: accent")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "color": "accent",
      "true-value": "radio3-value"
    },
    model: {
      value: (_vm.radio3),
      callback: function($$v) {
        _vm.radio3 = $$v
      },
      expression: "radio3"
    }
  }, [_vm._v("Select")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Color: accent, checked")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "color": "accent",
      "true-value": "radio4-value",
      "checked": ""
    },
    model: {
      value: (_vm.radio4),
      callback: function($$v) {
        _vm.radio4 = $$v
      },
      expression: "radio4"
    }
  }, [_vm._v("Select")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Button position: right")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group has-button-right"
  }, [_c('ui-radio', {
    attrs: {
      "button-position": "right",
      "true-value": "radio5-value"
    },
    model: {
      value: (_vm.radio5),
      callback: function($$v) {
        _vm.radio5 = $$v
      },
      expression: "radio5"
    }
  }, [_vm._v("Select")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("No Label")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "true-value": "radio6-value"
    },
    model: {
      value: (_vm.radio6),
      callback: function($$v) {
        _vm.radio6 = $$v
      },
      expression: "radio6"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("No Label, checked")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "true-value": "radio7-value",
      "checked": ""
    },
    model: {
      value: (_vm.radio7),
      callback: function($$v) {
        _vm.radio7 = $$v
      },
      expression: "radio7"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "true-value": "radio8-value",
      "disabled": ""
    },
    model: {
      value: (_vm.radio8),
      callback: function($$v) {
        _vm.radio8 = $$v
      },
      expression: "radio8"
    }
  }, [_vm._v("Select")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled, checked")]), _vm._v(" "), _c('ui-radio', {
    attrs: {
      "true-value": "radio9-value",
      "checked": "",
      "disabled": ""
    },
    model: {
      value: (_vm.radio9),
      callback: function($$v) {
        _vm.radio9 = $$v
      },
      expression: "radio9"
    }
  }, [_vm._v("Select")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the radio input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The radio label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("Number, String")]), _vm._v(" "), _c('td', [_vm._v("Required")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model the radio value syncs to.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("trueValue *")]), _vm._v(" "), _c('td', [_vm._v("Number, String")]), _vm._v(" "), _c('td', [_vm._v("Required")]), _vm._v(" "), _c('td', [_vm._v("The value that is written to the model when the radio is selected.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("checked")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the radio is selected by default.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_vm._v("The color of a selected radio button. One of "), _c('code', [_vm._v("primary")]), _vm._v(" or "), _c('code', [_vm._v("accent")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("buttonPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_vm._v("The position of the radio button relative to the label. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the radio button is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the radio.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the radio button label and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the radio button is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the radio button loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the radio value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the radio value changes. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/Events/change",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("onchange event documentation")]), _vm._v(" for more information.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiRadio supports two colors: "), _c('code', [_vm._v("primary")]), _vm._v(" and "), _c('code', [_vm._v("accent")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("To show a group of mutually exclusive radio buttons, use "), _c('a', {
    attrs: {
      "href": "#/ui-radio-group"
    }
  }, [_vm._v("UiRadioGroup")]), _vm._v(" or use multiple UiRadios with a shared "), _c('code', [_vm._v("v-model")]), _vm._v("/"), _c('code', [_vm._v("value")]), _vm._v(" and "), _c('code', [_vm._v("name")]), _vm._v(" prop.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiRadio.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 271 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('li', {
    ref: "menuOption",
    staticClass: "ui-menu-option",
    class: _vm.classes,
    attrs: {
      "role": "menu-item",
      "tabindex": (_vm.isDivider || _vm.disabled) ? null : '0'
    }
  }, [(!_vm.isDivider) ? _vm._t("default", [_c('div', {
    staticClass: "ui-menu-option__content"
  }, [(_vm.icon) ? _c('ui-icon', {
    staticClass: "ui-menu-option__icon",
    attrs: {
      "icon-set": _vm.iconProps.iconSet,
      "icon": _vm.icon,
      "remove-text": _vm.iconProps.removeText,
      "use-svg": _vm.iconProps.useSvg
    }
  }) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-menu-option__text"
  }, [_vm._v(_vm._s(_vm.label))]), _vm._v(" "), (_vm.secondaryText) ? _c('div', {
    staticClass: "ui-menu-option__secondary-text"
  }, [_vm._v("\n                " + _vm._s(_vm.secondaryText) + "\n            ")]) : _vm._e()], 1)]) : _vm._e(), _vm._v(" "), (!_vm.disabled && !_vm.isDivider && !_vm.disableRipple) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "menuOption"
    }
  }) : _vm._e()], 2)
},staticRenderFns: []}

/***/ }),
/* 272 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-collapsible",
    class: _vm.classes
  }, [_c('div', {
    ref: "header",
    staticClass: "ui-collapsible__header",
    attrs: {
      "aria-controls": _vm.id,
      "aria-expanded": _vm.isOpen ? 'true' : 'false',
      "tabindex": _vm.disabled ? null : 0
    },
    on: {
      "click": _vm.toggleCollapsible,
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        $event.preventDefault();
        _vm.toggleCollapsible($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "space", 32)) { return null; }
        $event.preventDefault();
        _vm.toggleCollapsible($event)
      }]
    }
  }, [_c('div', {
    staticClass: "ui-collapsible__header-content"
  }, [_vm._t("header", [_vm._v(_vm._s(_vm.title))])], 2), _vm._v(" "), (!_vm.removeIcon) ? _c('ui-icon', {
    staticClass: "ui-collapsible__header-icon"
  }, [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M7.406 7.828L12 12.422l4.594-4.594L18 9.234l-6 6-6-6z"
    }
  })])]) : _vm._e(), _vm._v(" "), (!_vm.disableRipple && !_vm.disabled && _vm.isReady) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "header"
    }
  }) : _vm._e()], 1), _vm._v(" "), _c('transition', {
    attrs: {
      "name": "ui-collapsible--transition-toggle"
    },
    on: {
      "after-enter": _vm.onEnter,
      "after-leave": _vm.onLeave
    }
  }, [_c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isOpen),
      expression: "isOpen"
    }],
    ref: "body",
    staticClass: "ui-collapsible__body-wrapper",
    style: ({
      'height': _vm.calculatedHeight
    })
  }, [_c('div', {
    staticClass: "ui-collapsible__body",
    attrs: {
      "aria-hidden": _vm.isOpen ? null : 'true',
      "id": _vm.id
    }
  }, [_vm._t("default")], 2)])])], 1)
},staticRenderFns: []}

/***/ }),
/* 273 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('li', {
    ref: "headerItem",
    staticClass: "ui-tab-header-item",
    class: _vm.classes,
    attrs: {
      "role": "tab",
      "aria-controls": _vm.id,
      "aria-selected": _vm.active ? 'true' : null,
      "disabled": _vm.disabled,
      "tabindex": _vm.active ? 0 : -1
    }
  }, [(_vm.type === 'icon' || _vm.type === 'icon-and-text') ? _c('div', {
    staticClass: "ui-tab-header-item__icon"
  }, [_vm._t("icon", [_c('ui-icon', {
    attrs: {
      "icon-set": _vm.iconProps.iconSet,
      "icon": _vm.icon,
      "remove-text": _vm.iconProps.removeText,
      "use-svg": _vm.iconProps.useSvg
    }
  })])], 2) : _vm._e(), _vm._v(" "), (_vm.type === 'text' || _vm.type === 'icon-and-text') ? _c('div', {
    staticClass: "ui-tab-header-item__text"
  }, [_vm._v(_vm._s(_vm.title))]) : _vm._e(), _vm._v(" "), (!_vm.disableRipple && !_vm.disabled) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "headerItem"
    }
  }) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 274 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-calendar-controls"
  }, [_c('ui-icon-button', {
    staticClass: "ui-calendar-controls__nav-button",
    attrs: {
      "icon": "keyboard_arrow_left",
      "type": "secondary",
      "disabled": _vm.previousMonthDisabled
    },
    on: {
      "click": _vm.goToPreviousMonth
    }
  }, [_c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M15.422 16.078l-1.406 1.406-6-6 6-6 1.406 1.406-4.594 4.594z"
    }
  })])])], 1), _vm._v(" "), _c('div', {
    staticClass: "ui-calendar-controls__month-and-year"
  }, [_vm._v(_vm._s(_vm.monthAndYear))]), _vm._v(" "), _c('ui-icon-button', {
    staticClass: "ui-calendar-controls__nav-button",
    attrs: {
      "icon": "keyboard_arrow_right",
      "type": "secondary",
      "disabled": _vm.nextMonthDisabled
    },
    on: {
      "click": _vm.goToNextMonth
    }
  }, [_c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M8.578 16.36l4.594-4.595L8.578 7.17l1.406-1.405 6 6-6 6z"
    }
  })])])], 1)], 1)
},staticRenderFns: []}

/***/ }),
/* 275 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-checckbox"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiCheckbox")]), _vm._v(" "), _c('p', [_vm._v("UiCheckbox shows a checkbox. It supports keyboard focus, hover and disabled states. The position of the checkbox relative to the label can be changed.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-checkbox', {
    model: {
      value: (_vm.check1),
      callback: function($$v) {
        _vm.check1 = $$v
      },
      expression: "check1"
    }
  }, [_vm._v("Do it now")]), _vm._v(" "), _c('ui-checkbox', {
    model: {
      value: (_vm.check2),
      callback: function($$v) {
        _vm.check2 = $$v
      },
      expression: "check2"
    }
  }, [_vm._v("Do it well")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "disabled": ""
    },
    model: {
      value: (_vm.check3),
      callback: function($$v) {
        _vm.check3 = $$v
      },
      expression: "check3"
    }
  }, [_vm._v("Can't change this")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "disabled": ""
    },
    model: {
      value: (_vm.check4),
      callback: function($$v) {
        _vm.check4 = $$v
      },
      expression: "check4"
    }
  }, [_vm._v("Can't change this too")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Color: accent")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-checkbox', {
    attrs: {
      "color": "accent"
    },
    model: {
      value: (_vm.check1),
      callback: function($$v) {
        _vm.check1 = $$v
      },
      expression: "check1"
    }
  }, [_vm._v("Do it now")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "color": "accent"
    },
    model: {
      value: (_vm.check2),
      callback: function($$v) {
        _vm.check2 = $$v
      },
      expression: "check2"
    }
  }, [_vm._v("Do it well")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "color": "accent",
      "disabled": ""
    },
    model: {
      value: (_vm.check3),
      callback: function($$v) {
        _vm.check3 = $$v
      },
      expression: "check3"
    }
  }, [_vm._v("Can't change this")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "color": "accent",
      "disabled": ""
    },
    model: {
      value: (_vm.check4),
      callback: function($$v) {
        _vm.check4 = $$v
      },
      expression: "check4"
    }
  }, [_vm._v("Can't change this too")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Box position: right")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group has-box-right"
  }, [_c('ui-checkbox', {
    attrs: {
      "box-position": "right"
    },
    model: {
      value: (_vm.check1),
      callback: function($$v) {
        _vm.check1 = $$v
      },
      expression: "check1"
    }
  }, [_vm._v("Do it now")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "box-position": "right"
    },
    model: {
      value: (_vm.check2),
      callback: function($$v) {
        _vm.check2 = $$v
      },
      expression: "check2"
    }
  }, [_vm._v("Do it well")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "box-position": "right",
      "disabled": ""
    },
    model: {
      value: (_vm.check3),
      callback: function($$v) {
        _vm.check3 = $$v
      },
      expression: "check3"
    }
  }, [_vm._v("Can't change this")]), _vm._v(" "), _c('ui-checkbox', {
    attrs: {
      "box-position": "right",
      "disabled": ""
    },
    model: {
      value: (_vm.check4),
      callback: function($$v) {
        _vm.check4 = $$v
      },
      expression: "check4"
    }
  }, [_vm._v("Can't change this too")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("HTML in Label")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-checkbox', {
    model: {
      value: (_vm.check5),
      callback: function($$v) {
        _vm.check5 = $$v
      },
      expression: "check5"
    }
  }, [_vm._v("Just "), _c('b', [_c('i', [_vm._v("do")])]), _vm._v(" it!")])], 1)]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the checkbox input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The checkbox label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model that the checkbox value syncs to.")]), _vm._v(" "), _c('p', [_vm._v("The "), _c('code', [_vm._v("trueValue")]), _vm._v(" prop will be written to this model when the checkbox is checked and the "), _c('code', [_vm._v("falseValue")]), _vm._v(" prop will be written to it when the checkbox is unchecked.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("checked")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the checkbox is checked by default.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("trueValue")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_vm._v("The value that will be written to the model when the checkbox is checked.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("falseValue")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("The value that will be written to the model when the checkbox is unchecked.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("submittedValue")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"on\"")])]), _vm._v(" "), _c('td', [_vm._v("The value that will be submitted for the checkbox when it is checked. Applied as the "), _c('code', [_vm._v("value")]), _vm._v(" attribute of the checkbox input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_vm._v("The color of a selected checkbox. One of "), _c('code', [_vm._v("primary")]), _vm._v(" or "), _c('code', [_vm._v("accent")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("boxPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_vm._v("The position of the checkbox relative to the label. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the checkbox is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the checkbox.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the checkbox label and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the checkbox is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the checkbox loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the checkbox value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a change in the checkbox value is committed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/Events/change",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("onchange event documentation")]), _vm._v(" for more information.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiCheckbox supports two colors: "), _c('code', [_vm._v("primary")]), _vm._v(" and "), _c('code', [_vm._v("accent")]), _vm._v(". It also allows for customizing the true and false values.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("To connect multiple checkboxes to a single array of values, use "), _c('a', {
    attrs: {
      "href": "#/ui-checkbox-group"
    }
  }, [_vm._v("UiCheckboxGroup")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/components/ui-checkbox/UiCheckboxDocs.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 276 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-autocomplete"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiAutocomplete")]), _vm._v(" "), _c('p', [_vm._v("UiAutocomplete shows a dropdown of autocomplete suggestions below an input as the user types.")]), _vm._v(" "), _c('p', [_vm._v("UiAutocomplete can show a label above the input as well as help or error below the input, and it supports keyboard navigation.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-autocomplete', {
    attrs: {
      "help": "Pick your favourite month of the year",
      "label": "Favourite Month",
      "name": "favourite_month",
      "placeholder": "Enter your favourite month",
      "suggestions": _vm.months
    },
    model: {
      value: (_vm.autocomplete1),
      callback: function($$v) {
        _vm.autocomplete1 = $$v
      },
      expression: "autocomplete1"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Floating label")]), _vm._v(" "), _c('ui-autocomplete', {
    attrs: {
      "floating-label": "",
      "help": "Pick your favourite month of the year",
      "label": "Favourite Month",
      "name": "favourite_month",
      "placeholder": "Enter your favourite month",
      "suggestions": _vm.months
    },
    model: {
      value: (_vm.autocomplete2),
      callback: function($$v) {
        _vm.autocomplete2 = $$v
      },
      expression: "autocomplete2"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icon")]), _vm._v(" "), _c('ui-autocomplete', {
    attrs: {
      "help": "Pick your favourite month of the year",
      "icon": "events",
      "label": "Favourite Month",
      "name": "favourite_month",
      "placeholder": "Enter your favourite month",
      "suggestions": _vm.months
    },
    model: {
      value: (_vm.autocomplete3),
      callback: function($$v) {
        _vm.autocomplete3 = $$v
      },
      expression: "autocomplete3"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Validation: required")]), _vm._v(" "), _c('ui-autocomplete', {
    attrs: {
      "error": "This field is required",
      "help": "Pick your favourite month of the year",
      "label": "Favourite Month",
      "name": "favourite_month",
      "placeholder": "Enter your favourite month",
      "invalid": _vm.autocomplete4Touched && !_vm.autocomplete4.length > 0,
      "suggestions": _vm.months
    },
    on: {
      "touch": function($event) {
        _vm.autocomplete4Touched = true
      }
    },
    model: {
      value: (_vm.autocomplete4),
      callback: function($$v) {
        _vm.autocomplete4 = $$v
      },
      expression: "autocomplete4"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: image, minChars: 0")]), _vm._v(" "), _c('ui-autocomplete', {
    attrs: {
      "help": "Pick your favourite member of the Simpsons family",
      "label": "Favourite Simpson",
      "name": "favourite_simpson",
      "placeholder": "Choose your favourite Simpson",
      "type": "image",
      "keys": {
        label: 'label',
        value: 'label',
        image: 'image'
      },
      "min-chars": 0,
      "suggestions": _vm.theSimpsons
    },
    model: {
      value: (_vm.autocomplete5),
      callback: function($$v) {
        _vm.autocomplete5 = $$v
      },
      expression: "autocomplete5"
    }
  }), _vm._v(" "), _c('p', [_vm._v("Suggestions are updated dynamically when the suggestions array changes.")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "disabled": _vm.addedGrannies
    },
    on: {
      "click": _vm.addGrannies
    }
  }, [_vm._v("\n            Add Grandma & Grandpa\n        ")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Custom template")]), _vm._v(" "), _c('p', [_vm._v("The following simply renders the prop passed to the custom template for each suggestion.")]), _vm._v(" "), _c('ui-autocomplete', {
    attrs: {
      "help": "Pick your favourite month of the year",
      "label": "Favourite Month",
      "name": "favourite_month",
      "placeholder": "Enter your favourite month",
      "suggestions": _vm.months
    },
    scopedSlots: _vm._u([{
      key: "suggestion",
      fn: function(props) {
        return [_c('code', [_vm._v(_vm._s(props))])]
      }
    }]),
    model: {
      value: (_vm.autocomplete6),
      callback: function($$v) {
        _vm.autocomplete6 = $$v
      },
      expression: "autocomplete6"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-autocomplete', {
    attrs: {
      "disabled": "",
      "label": "Favourite Colour",
      "placeholder": "You can't interact with this"
    },
    model: {
      value: (_vm.autocomplete7),
      callback: function($$v) {
        _vm.autocomplete7 = $$v
      },
      expression: "autocomplete7"
    }
  })], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the autocomplete input element.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model the autocomplete value syncs to.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("limit")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("8")])]), _vm._v(" "), _c('td', [_vm._v("The maximum number of suggestions to show to the user at any one time.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("append")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the value of the selected suggestion should be appended to the current value (instead of replacing the current value).")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to append selected suggestions.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("appendDelimiter")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\", \"")])]), _vm._v(" "), _c('td', [_vm._v("The delimiter (separator) to use when appending selected suggestions.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"simple\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of template to use for rendering each suggestion. One of "), _c('code', [_vm._v("simple")]), _vm._v(" or "), _c('code', [_vm._v("image")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("The default type is "), _c('code', [_vm._v("simple")]), _vm._v(", which simply renders the suggestion text.")]), _vm._v(" "), _c('p', [_vm._v("The "), _c('code', [_vm._v("image")]), _vm._v(" type renders each suggestion with with an image. To use, set "), _c('code', [_vm._v("type")]), _vm._v(" to "), _c('code', [_vm._v("image")]), _vm._v(" and set an image URL as the "), _c('code', [_vm._v("image")]), _vm._v(" property on each suggestion. You can redefine the "), _c('code', [_vm._v("image")]), _vm._v(" key to fit your data using the "), _c('code', [_vm._v("keys")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("You can also render each suggestion with a custom template using the "), _c('code', [_vm._v("suggestion")]), _vm._v(" scoped slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("minChars")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("2")])]), _vm._v(" "), _c('td', [_vm._v("The minimum number of characters the user should type before the suggestions are shown.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("showOnUpDown")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_vm._v("Determines whether the suggestions should be shown when the user presses the Up or Down arrow keys in the input.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("invalid")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the autocomplete is invalid.")]), _vm._v(" "), _c('p', [_vm._v("When "), _c('code', [_vm._v("invalid")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the autocomplete label appears red and the error is shown if available.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("autofocus")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the autocomplete should automatically receive focus when it is rendered for the first time.")]), _vm._v(" "), _c('p', [_vm._v("Only one input element should have this prop set to "), _c('code', [_vm._v("true")]), _vm._v(" in the document for the autofocus to work properly.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("filter")]), _vm._v(" "), _c('td', [_vm._v("Function")]), _vm._v(" "), _c('td', [_c('a', {
    attrs: {
      "href": "https://github.com/bevacqua/fuzzysearch",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("fuzzysearch")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Defines a custom filter function that is used for filtering the suggestions when the user types into the autocomplete.")]), _vm._v(" "), _c('p', [_vm._v("The function is called for each item in the "), _c('code', [_vm._v("suggestions")]), _vm._v(" array with two arguments:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("suggestion")]), _vm._v(": (Object or String) - the current suggestion")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("query")]), _vm._v(": (String) - the current value of the autocomplete input (what the user has typed)")])]), _vm._v(" "), _c('p', [_vm._v("The function should return "), _c('code', [_vm._v("true")]), _vm._v(" if the suggestion matches the query or "), _c('code', [_vm._v("false")]), _vm._v(" otherwise.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("keys")]), _vm._v(" "), _c('td', [_vm._v("Object")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('pre', {
    staticClass: "language-javascript is-compact"
  }, [_vm._v("{\n                          label: 'label',\n                          value: 'value',\n                          image: 'image'\n                        }")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Allows for redefining each suggestion object's keys.")]), _vm._v(" "), _c('p', [_vm._v("Pass an object with custom keys if your data does not match the default keys.")]), _vm._v(" "), _c('p', [_vm._v("Note that if you redefine one key, you have to define all the others as well.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("highlightFirstMatch")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the first matching suggestion is automatically highlighted when the user input changes.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("false")]), _vm._v(" to disable automatically highlighting the first match.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("cycleHighlight")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not highlighting should cycle (wrap around) immediately on overflow.")]), _vm._v(" "), _c('p', [_vm._v("When this is set to "), _c('code', [_vm._v("false")]), _vm._v(", pressing the down arrow key when on the last suggestion will not immediately highlight the first suggestion, but pressing it a second time will.")]), _vm._v(" "), _c('p', [_vm._v("The same goes for when pressing the up arrow key on the first suggestion.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("placeholder")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("placeholder")]), _vm._v(" attribute of the autocomplete input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The autocomplete icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the icon relative to the input. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The autocomplete label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("floatingLabel")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the autocomplete label starts out inline and moves to float above the input when it is focused.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" for a floating label. This will disable the input placeholder.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The help text (hint) shown to the user below the autocomplete input. For HTML, use the "), _c('code', [_vm._v("help")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the input for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The error text shown to the user below the autocomplete input when the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(". For HTML, use the "), _c('code', [_vm._v("error")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the input for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("readonly")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("readonly")]), _vm._v(" attribute of the autocomplete input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the autocomplete is disabled. Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the autocomplete.")])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the autocomplete label and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("suggestion")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Use this slot to render each suggestion with a custom template. The slot is passed the following properties, which will be available through "), _c('code', [_vm._v("scope")]), _vm._v(":")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("suggestion")]), _vm._v(": (Object or String) - the suggestion")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("index")]), _vm._v(": (Number) - the index of the suggestion in the array of matched suggestions")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("higlighted")]), _vm._v(": (Boolean) - whether or not the suggestion is currently highlighted")])]), _vm._v(" "), _c('p', [_vm._v("For more information, see the "), _c('a', {
    attrs: {
      "href": "https://vuejs.org/v2/guide/components.html#Scoped-Slots"
    }
  }, [_vm._v("Scoped Slots documentation")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the autocomplete icon and can contain any custom or SVG icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the autocomplete help and can contain HTML.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the autocomplete error and can contain HTML.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("select")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a suggestion is selected. The handler is called with the selected suggestion.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@select")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the autocomplete input value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a change in the autocomplete value is committed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/Events/change",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("onchange event documentation")]), _vm._v(" for more information.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("touch")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the autocomplete is focused for the first time and then blurred.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@touch")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the autocomplete input is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the autocomplete input loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the autocomplete dropdown is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the autocomplete dropdown is closed.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-close")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("highlight")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a suggestion is highlighted using the arrow keys. The handler is called with the following arguments:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("suggestion")]), _vm._v(": (Object or String) - the suggestion that was highlighted")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("index")]), _vm._v(": (Number) - the index of the suggestion in the array of matched suggestions")])]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@highlight")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("highlight-overflow")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when an attempted highlight overflows (this happens when the user is on the first suggestion and presses the up arrow key or on the last suggestion and presses the down arrow key).")]), _vm._v(" "), _c('p', [_vm._v("This event is only emitted when the "), _c('code', [_vm._v("cycleHighlight")]), _vm._v(" prop is "), _c('code', [_vm._v("false")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("The handler is called with the overflowing index. Listen for it using "), _c('code', [_vm._v("@highlight-overflow")]), _vm._v(".")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("reset()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to reset the autocomplete to its initial value. You should also reset the "), _c('code', [_vm._v("invalid")]), _vm._v(" and "), _c('code', [_vm._v("touched")]), _vm._v(" props.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("resetTouched()")])]), _vm._v(" "), _c('td', [_vm._v("Call this method to reset the touched state of the autocomplete. By default it will set the touched state to "), _c('code', [_vm._v("false")]), _vm._v(", but you can pass an object with "), _c('code', [_vm._v("{ touched: true }")]), _vm._v(" to set the touched state to "), _c('code', [_vm._v("true")]), _vm._v(".")])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiAutocomplete.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 277 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-progress-circular"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiProgressCircular")]), _vm._v(" "), _c('p', [_vm._v("UiProgressCircular shows a circular progress indicator (a spinner).")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: determinate")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "primary",
      "type": "determinate",
      "progress": _vm.progress
    }
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "accent",
      "type": "determinate",
      "progress": _vm.progress
    }
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "black",
      "type": "determinate",
      "progress": _vm.progress
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "has-white-progress"
  }, [_c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "white",
      "type": "determinate",
      "progress": _vm.progress
    }
  })], 1)], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: indeterminate")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "multi-color"
    }
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "primary"
    }
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "accent"
    }
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "black"
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "has-white-progress"
  }, [_c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "color": "white"
    }
  })], 1)], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Custom size")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "type": "determinate",
      "auto-stroke": false,
      "progress": _vm.progress,
      "size": 54
    }
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "auto-stroke": false,
      "size": 54
    }
  })], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Custom stroke width")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "type": "determinate",
      "progress": _vm.progress,
      "size": 48,
      "stroke": 8
    }
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    attrs: {
      "size": 48,
      "stroke": 8
    }
  })], 1), _vm._v(" "), _c('br'), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.loading = !_vm.loading
      }
    }
  }, [_vm._v("Toggle Loading")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"indeterminate\"")])]), _vm._v(" "), _c('td', [_vm._v("The type of progress. One of "), _c('code', [_vm._v("determinate")]), _vm._v(" or "), _c('code', [_vm._v("indeterminate")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The color of the progress circle. One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("multi-color")]), _vm._v(", "), _c('code', [_vm._v("black")]), _vm._v(" or "), _c('code', [_vm._v("white")]), _vm._v(".")]), _vm._v(" "), _c('p', [_c('code', [_vm._v("multi-color")]), _vm._v(" is only supported on an indeterminate progress, if set on a determinate progress, the color will fall back to "), _c('code', [_vm._v("primary")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("size")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("24")])]), _vm._v(" "), _c('td', [_vm._v("The width and height of the circular progress without a unit (unit is pixels).")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("stroke")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_vm._v("auto or "), _c('code', [_vm._v("4")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The stroke width of the circular progress without a unit (unit is pixels).")]), _vm._v(" "), _c('p', [_vm._v("If "), _c('code', [_vm._v("stroke")]), _vm._v(" is not provided, it is automatically calculated unless "), _c('code', [_vm._v("autoStroke")]), _vm._v(" is set to "), _c('code', [_vm._v("false")]), _vm._v(". See "), _c('code', [_vm._v("autoStroke")]), _vm._v(" for details.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("autoStroke")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the stroke width should be automatically calculated if it is not provided.")]), _vm._v(" "), _c('p', [_vm._v("The calculated stroke is the "), _c('code', [_vm._v("width")]), _vm._v(" divided by "), _c('code', [_vm._v("8")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("If "), _c('code', [_vm._v("autoStroke")]), _vm._v(" is set to "), _c('code', [_vm._v("false")]), _vm._v(" and "), _c('code', [_vm._v("stroke")]), _vm._v(" is not provided, it defaults to the number "), _c('code', [_vm._v("4")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("progress")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("0")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The value of progress as a number between 0 and 100. Changing this value will update the determinate progress circle.")]), _vm._v(" "), _c('p', [_vm._v("Only applicable when the type is determinate.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiProgressCircular supports five possible colors: "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("multi-color")]), _vm._v(" (alternating primary colors), "), _c('code', [_vm._v("black")]), _vm._v(" and "), _c('code', [_vm._v("white")]), _vm._v(". The size (width and height) and stroke can be customized.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("Due to an issue with CSS transitions on SVG elements in IE and Edge, determinate progress is not animated in those browsers, and "), _c('code', [_vm._v("multi-color")]), _vm._v(" progress is not supported.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiProgressCircular.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 278 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('transition', {
    attrs: {
      "name": _vm.transitionName
    },
    on: {
      "after-enter": _vm.onEnter,
      "after-leave": _vm.onLeave
    }
  }, [_c('div', {
    staticClass: "ui-snackbar",
    on: {
      "click": _vm.onClick
    }
  }, [_c('div', {
    staticClass: "ui-snackbar__message"
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.message))])], 2), _vm._v(" "), _c('div', {
    staticClass: "ui-snackbar__action"
  }, [(_vm.action) ? _c('ui-button', {
    staticClass: "ui-snackbar__action-button",
    attrs: {
      "type": "secondary",
      "color": _vm.actionColor
    },
    on: {
      "click": function($event) {
        $event.stopPropagation();
        _vm.onActionClick($event)
      }
    }
  }, [_vm._v(_vm._s(_vm.action))]) : _vm._e()], 1)])])
},staticRenderFns: []}

/***/ }),
/* 279 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-select"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiSelect")]), _vm._v(" "), _c('p', [_vm._v("UiSelect is a select component that allows the user to choose one or more options from a group of pre-defined or dynamically loaded options. It supports default options, multiple selection and filtering.")]), _vm._v(" "), _c('p', [_vm._v("UiSelect can show a label above the input, an icon, as well as help or error below the input. It is keyboard accessible and supports a disabled state.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "options": _vm.colourStrings
    },
    model: {
      value: (_vm.select1),
      callback: function($$v) {
        _vm.select1 = $$v
      },
      expression: "select1"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With floating label")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "floating-label": "",
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "options": _vm.colourStrings
    },
    model: {
      value: (_vm.select2),
      callback: function($$v) {
        _vm.select2 = $$v
      },
      expression: "select2"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icon")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "icon": "colorize",
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "options": _vm.colourStrings
    },
    model: {
      value: (_vm.select2o5),
      callback: function($$v) {
        _vm.select2o5 = $$v
      },
      expression: "select2o5"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With a default selection")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "options": _vm.colourStrings
    },
    model: {
      value: (_vm.select3),
      callback: function($$v) {
        _vm.select3 = $$v
      },
      expression: "select3"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: image")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "type": "image",
      "options": _vm.colours
    },
    model: {
      value: (_vm.select4),
      callback: function($$v) {
        _vm.select4 = $$v
      },
      expression: "select4"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: image, with a default selection")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "type": "image",
      "options": _vm.colours
    },
    model: {
      value: (_vm.select5),
      callback: function($$v) {
        _vm.select5 = $$v
      },
      expression: "select5"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With help")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "help": "You favourite colour will be used on your profile page",
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "type": "image",
      "options": _vm.colours
    },
    model: {
      value: (_vm.select6),
      callback: function($$v) {
        _vm.select6 = $$v
      },
      expression: "select6"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Multiple selection")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "label": "Favourite colours",
      "multiple": "",
      "placeholder": "Select some colours",
      "type": "image",
      "options": _vm.colours
    },
    model: {
      value: (_vm.select7),
      callback: function($$v) {
        _vm.select7 = $$v
      },
      expression: "select7"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Multiple selection with defaults")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "label": "Favourite colours",
      "multiple": "",
      "placeholder": "Select some colours",
      "type": "image",
      "options": _vm.colours
    },
    model: {
      value: (_vm.select8),
      callback: function($$v) {
        _vm.select8 = $$v
      },
      expression: "select8"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With search")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "has-search": "",
      "label": "Favourite colours",
      "multiple": "",
      "placeholder": "Select some colours",
      "type": "image",
      "options": _vm.colours
    },
    model: {
      value: (_vm.select9),
      callback: function($$v) {
        _vm.select9 = $$v
      },
      expression: "select9"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With validation")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "error": "You must select at least 2 colours",
      "has-search": "",
      "help": "Select 2 or more colours",
      "label": "Favourite colours",
      "multiple": "",
      "placeholder": "Select some colours",
      "type": "image",
      "invalid": _vm.select10Touched && _vm.select10.length < 2,
      "options": _vm.colours
    },
    on: {
      "touch": function($event) {
        _vm.select10Touched = true
      }
    },
    model: {
      value: (_vm.select10),
      callback: function($$v) {
        _vm.select10 = $$v
      },
      expression: "select10"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With dynamic options (remote search)")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "disable-filter": "",
      "has-search": "",
      "label": "Favourite colours",
      "placeholder": "Select a colour",
      "search-placeholder": "Type \"red\" or \"blue\"",
      "type": "image",
      "loading": _vm.select11Loading,
      "no-results": _vm.select11NoResults,
      "options": _vm.select11Options
    },
    on: {
      "query-change": _vm.onQueryChange
    },
    model: {
      value: (_vm.select11),
      callback: function($$v) {
        _vm.select11 = $$v
      },
      expression: "select11"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With many options (248)")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "has-search": "",
      "label": "Country",
      "placeholder": "Select your country",
      "keys": {
        label: 'name',
        value: 'code'
      },
      "options": _vm.countries
    },
    model: {
      value: (_vm.select12),
      callback: function($$v) {
        _vm.select12 = $$v
      },
      expression: "select12"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With custom template")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "has-search": "",
      "label": "Favourite colours",
      "multiple": "",
      "placeholder": "Select some colours",
      "options": _vm.colourStrings
    },
    scopedSlots: _vm._u([{
      key: "option",
      fn: function(props) {
        return [_c('code', [_vm._v(_vm._s(props))])]
      }
    }]),
    model: {
      value: (_vm.select12o5),
      callback: function($$v) {
        _vm.select12o5 = $$v
      },
      expression: "select12o5"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "disabled": "",
      "label": "Favourite colour",
      "placeholder": "Select a colour"
    },
    model: {
      value: (_vm.select13),
      callback: function($$v) {
        _vm.select13 = $$v
      },
      expression: "select13"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disabled with a selection")]), _vm._v(" "), _c('ui-select', {
    attrs: {
      "disabled": "",
      "label": "Favourite colour",
      "placeholder": "Select a colour",
      "options": _vm.colourStrings
    },
    model: {
      value: (_vm.select14),
      callback: function($$v) {
        _vm.select14 = $$v
      },
      expression: "select14"
    }
  })], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the select's hidden input element. Useful when traditionally submitting a form the select is a part of.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("String, Number, Object or Array")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model the selected value or values sync to. Can be set initially for default value/values.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("options")]), _vm._v(" "), _c('td', [_vm._v("Array")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("[]")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("An array of options to show to the user.")]), _vm._v(" "), _c('p', [_vm._v("Can be a plain array, e.g. "), _c('code', [_vm._v("['Red', 'Blue', 'Green']")]), _vm._v(" as well as an array of objects.")]), _vm._v(" "), _c('p', [_vm._v("For a plain array, the option is shown to the user and it is used for filtering.")]), _vm._v(" "), _c('p', [_vm._v("For an array of objects, the "), _c('code', [_vm._v("label")]), _vm._v(" is shown to the user and is used for filtering, and the "), _c('code', [_vm._v("value")]), _vm._v(" is submitted to the server. You can redefine these keys to fit your data using the "), _c('code', [_vm._v("keys")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("The entire option is written to the model when the user makes a selection.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("multiple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the user can select multiple options.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to allow multiple selection.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("multipleDelimiter")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\", \"")])]), _vm._v(" "), _c('td', [_vm._v("The delimiter (separator) to use for displaying multiple selected options.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("placeholder")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("Text to display in the select when no option is selected.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"basic\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of template to use for rendering each option. One of "), _c('code', [_vm._v("basic")]), _vm._v(" or "), _c('code', [_vm._v("image")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("The default type is "), _c('code', [_vm._v("basic")]), _vm._v(", which simply renders the option text.")]), _vm._v(" "), _c('p', [_vm._v("The "), _c('code', [_vm._v("image")]), _vm._v(" type renders each option with with an image. To use, set "), _c('code', [_vm._v("type")]), _vm._v(" to "), _c('code', [_vm._v("image")]), _vm._v(" and set an image URL as the "), _c('code', [_vm._v("image")]), _vm._v(" property on each option. You can redefine the "), _c('code', [_vm._v("image")]), _vm._v(" key to fit your data using the "), _c('code', [_vm._v("keys")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("You can also render each option with a custom template using the "), _c('code', [_vm._v("option")]), _vm._v(" scoped slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("hasSearch")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not to show a search input for filtering the select options or getting a query for remote search.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show a search input.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("searchPlaceholder")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("placeholder")]), _vm._v(" attribute of the search input.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("filter")]), _vm._v(" "), _c('td', [_vm._v("Function")]), _vm._v(" "), _c('td', [_c('a', {
    attrs: {
      "href": "https://github.com/bevacqua/fuzzysearch",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("fuzzysearch")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Defines a custom filter function that is used for filtering the options when the user types into the search input.")]), _vm._v(" "), _c('p', [_vm._v("The function is called for each item in the "), _c('code', [_vm._v("options")]), _vm._v(" array with two arguments:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("option")]), _vm._v(": (Number, String or Object) - the current option")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("query")]), _vm._v(": (String) - the current value of the search input (what the user has typed)")])]), _vm._v(" "), _c('p', [_vm._v("The function should return "), _c('code', [_vm._v("true")]), _vm._v(" if the option matches the query or "), _c('code', [_vm._v("false")]), _vm._v(" otherwise.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableFilter")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not to disable the internal filtering of options. With this set to "), _c('code', [_vm._v("true")]), _vm._v(", you have to implement filtering externally if needed.")]), _vm._v(" "), _c('p', [_vm._v("This prop is useful when you want to implement custom/remote search.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('b', [_vm._v("With dynamic options (remote search)")]), _vm._v(" section above for an example usage.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("loading")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not to show a circular progress spinner on the search input.")]), _vm._v(" "), _c('p', [_vm._v("This prop is useful for showing feedback to the user when you are doing a remote search. Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show the spinner and "), _c('code', [_vm._v("false")]), _vm._v(" to hide it.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('b', [_vm._v("With dynamic options (remote search)")]), _vm._v(" section above for an example usage.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("noResults")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the no results message is be shown.")]), _vm._v(" "), _c('p', [_vm._v("The no results message will be shown if this is "), _c('code', [_vm._v("true")]), _vm._v(" and following conditions are met:")]), _vm._v(" "), _c('ul', [_c('li', [_vm._v("The query (user input) is empty")]), _vm._v(" "), _c('li', [_vm._v("The "), _c('code', [_vm._v("loading")]), _vm._v(" prop is "), _c('code', [_vm._v("false")])]), _vm._v(" "), _c('li', [_vm._v("The "), _c('code', [_vm._v("disableFilter")]), _vm._v(" prop is "), _c('code', [_vm._v("true")])])]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('b', [_vm._v("With dynamic options (remote search)")]), _vm._v(" section above for an example usage.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("keys")]), _vm._v(" "), _c('td', [_vm._v("Object")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('pre', {
    staticClass: "language-javascript is-compact"
  }, [_vm._v("{\n  label: 'label',\n  image: 'image'\n}")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Allows for redefining each option object's keys.")]), _vm._v(" "), _c('p', [_vm._v("Pass an object with custom keys if your data does not match the default keys.")]), _vm._v(" "), _c('p', [_vm._v("Note that if you redefine one key, you have to define all the others as well.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("invalid")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the select is invalid.")]), _vm._v(" "), _c('p', [_vm._v("When "), _c('code', [_vm._v("invalid")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the select label appears red and the error is shown if available.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The select icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the icon relative to the select. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The select label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("floatingLabel")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the label starts out inline and moves to float above the select when it is focused.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" for a floating label. This will disable the select placeholder until the label is floating.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The help text (hint) shown to the user below the select. For HTML, use the "), _c('code', [_vm._v("help")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the select for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The error text shown to the user below the select when the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(". For HTML, use the "), _c('code', [_vm._v("error")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the select for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the select is disabled. Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the select.")])])])])])]), _vm._v("\n\n                * Required prop\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the select label and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("option")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Use this slot to render each option with a custom template. The slot is passed the following properties, which will be available through "), _c('code', [_vm._v("scope")]), _vm._v(":")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("option")]), _vm._v(": (Object or String) - the option")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("index")]), _vm._v(": (Number) - the index of the option in the array of matched options")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("higlighted")]), _vm._v(": (Boolean) - whether or not the option is currently highlighted")])]), _vm._v(" "), _c('p', [_vm._v("For more information, see the "), _c('a', {
    attrs: {
      "href": "https://vuejs.org/v2/guide/components.html#Scoped-Slots"
    }
  }, [_vm._v("Scoped Slots documentation")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("no-results")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the content shown to the user when there is no matching option for their query.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the select icon and can contain any custom or SVG icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the select help and can contain HTML.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the select error and can contain HTML.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("select")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when an option is selected. The handler is called with the selected option and an object which shows if the option was selected or deselected.")]), _vm._v(" "), _c('p', [_vm._v("This object will have "), _c('code', [_vm._v("{ selected: true }")]), _vm._v(" if the option was selected or "), _c('code', [_vm._v("{ selected: false }")]), _vm._v(" otherwise.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@select")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("query-change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the query (the search input value) changes.")]), _vm._v(" "), _c('p', [_vm._v("The handler is called with the new query. Listen for it using "), _c('code', [_vm._v("@query-change")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('b', [_vm._v("With dynamic options (remote search)")]), _vm._v(" section above for an example usage.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select value changes.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("touch")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select is focused for the first time and then blurred.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@touch")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select dropdown is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the select dropdown is closed.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-close")]), _vm._v(".")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("reset()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to reset the select to its initial value. You should also reset the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("resetTouched()")])]), _vm._v(" "), _c('td', [_vm._v("Call this method to reset the touched state of the select. By default it will set the touched state to "), _c('code', [_vm._v("false")]), _vm._v(", but you can pass an object with "), _c('code', [_vm._v("{ touched: true }")]), _vm._v(" to set the touched state to "), _c('code', [_vm._v("true")]), _vm._v(".")])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n            Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiSelect.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 280 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-snackbar-container",
    class: _vm.classes
  }, _vm._l((_vm.queue), function(snackbar, index) {
    return _c('ui-snackbar', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (snackbar.show),
        expression: "snackbar.show"
      }],
      attrs: {
        "action-color": snackbar.actionColor,
        "action": snackbar.action,
        "message": snackbar.message,
        "transition": _vm.transition
      },
      on: {
        "action-click": function($event) {
          _vm.onActionClick(snackbar)
        },
        "click": function($event) {
          _vm.onClick(snackbar)
        },
        "hide": function($event) {
          _vm.onHide(snackbar, index)
        },
        "show": function($event) {
          _vm.onShow(snackbar)
        }
      }
    }, [(_vm.allowHtml) ? _c('div', {
      domProps: {
        "innerHTML": _vm._s(snackbar.message)
      }
    }) : _vm._e()])
  }))
},staticRenderFns: []}

/***/ }),
/* 281 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('aside', {
    staticClass: "nucleus-docs-sidebar"
  }, [_c('div', {
    staticClass: "nucleus-docs-sidebar__header"
  }, [_c('span', {
    staticClass: "nucleus-docs-sidebar__header-brand"
  }, [_vm._v("Nucleus UI Kit")]), _vm._v(" "), _c('a', {
    staticClass: "nucleus-docs-sidebar__header-version",
    attrs: {
      "href": "https://github.com/temperworks/Nucleus-UI-Kit/releases/tag/v0.1.2",
      "rel": "noopener",
      "target": "_blank",
      "title": "View release notes"
    }
  }, [_vm._v("v0.1.2")]), _vm._v(" "), _c('a', {
    staticClass: "nucleus-docs-sidebar__header-github-link",
    attrs: {
      "href": "https://github.com/temperworks/Nucleus-UI-Kit",
      "rel": "noopener",
      "target": "_blank",
      "title": "View on Github"
    }
  }, [_c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "16",
      "height": "16",
      "viewBox": "0 0 16 16"
    }
  }, [_c('path', {
    attrs: {
      "d": "M8 .198c-4.418 0-8 3.582-8 8 0 3.535 2.292 6.533 5.47 7.59.4.075.548-.173.548-.384 0-.19-.008-.82-.01-1.49-2.227.485-2.696-.943-2.696-.943-.364-.924-.888-1.17-.888-1.17-.726-.497.055-.486.055-.486.802.056 1.225.824 1.225.824.714 1.223 1.872.87 2.328.665.072-.517.28-.87.508-1.07-1.776-.202-3.644-.888-3.644-3.954 0-.874.313-1.588.824-2.148-.083-.202-.357-1.015.077-2.117 0 0 .672-.215 2.2.82.64-.177 1.323-.266 2.003-.27.68.004 1.365.093 2.004.27 1.527-1.035 2.198-.82 2.198-.82.435 1.102.162 1.916.08 2.117.512.56.822 1.274.822 2.147 0 3.072-1.872 3.748-3.653 3.946.288.248.544.735.544 1.48 0 1.07-.01 1.933-.01 2.196 0 .213.145.462.55.384 3.178-1.06 5.467-4.057 5.467-7.59 0-4.418-3.58-8-8-8z"
    }
  })])])], 1)]), _vm._v(" "), _c('div', {
    staticClass: "nucleus-docs-sidebar__scrollable"
  }, [_vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "nucleus-docs-sidebar__version-select"
  }, [_c('ui-select', {
    attrs: {
      "options": ['0.1.2']
    },
    on: {
      "select": _vm.onVersionSelect
    },
    model: {
      value: (_vm.version),
      callback: function($$v) {
        _vm.version = $$v
      },
      expression: "version"
    }
  }, [_vm._v("Version")])], 1), _vm._v(" "), _c('ul', {
    staticClass: "nucleus-docs-sidebar__menu"
  }, [_c('li', {
    staticClass: "nucleus-docs-sidebar__menu-section"
  }, [_c('div', {
    staticClass: "nucleus-docs-sidebar__menu-section-header"
  }, [_vm._v("Usage")]), _vm._v(" "), _c('ul', {
    staticClass: "nucleus-docs-sidebar__menu-section-links"
  }, [_c('li', [_c('a', {
    staticClass: "nucleus-docs-sidebar__menu-item",
    attrs: {
      "href": "https://github.com/temperworks/Nucleus-UI-Kit/tree/master#nucleus-ui-kit",
      "rel": "noopener",
      "target": "_blank"
    }
  }, [_vm._v("Getting Started "), _c('ui-icon', [_vm._v("open_in_new")])], 1)]), _vm._v(" "), _c('li', [_c('a', {
    staticClass: "nucleus-docs-sidebar__menu-item",
    attrs: {
      "href": "https://github.com/temperworks/Nucleus-UI-Kit/blob/master/docs/Customization.md#customization",
      "rel": "noopener",
      "target": "_blank"
    }
  }, [_vm._v("Customization "), _c('ui-icon', [_vm._v("open_in_new")])], 1)])])]), _vm._v(" "), _vm._l((_vm.menu), function(section) {
    return _c('ui-collapsible', {
      attrs: {
        "title": section.title,
        "type": "flat"
      }
    }, _vm._l((section.menu), function(item) {
      return _c('li', [_c('router-link', {
        staticClass: "nucleus-docs-sidebar__menu-item",
        attrs: {
          "exact": "",
          "to": item.path
        }
      }, [_vm._v("\n                                " + _vm._s(item.title) + "\n                            ")])], 1)
    }))
  })], 2)])])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "nucleus-docs-sidebar__description"
  }, [_c('p', [_vm._v("A delightful collection of UI components we use at Temper written with Vue, inspired by Material Design.")]), _vm._v(" "), _c('p', [_vm._v("Created by "), _c('a', {
    attrs: {
      "rel": "noopener",
      "target": "_blank",
      "href": "https://temper.works"
    }
  }, [_vm._v("Temper")]), _vm._v(".")])])
}]}

/***/ }),
/* 282 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-card"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiCard")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic with navigation breadcrumbs")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-card', {
    attrs: {
      "title": "3 shifts gevonden voor <a href='#'>Bartending</a> bij <a href='#'>Strandtent de Pit</a>"
    }
  }, [_c('ui-breadcrumb-container', {
    attrs: {
      "items": _vm.breadcrumbs
    },
    slot: "breadcrumbs"
  }), _vm._v(" "), _c('template', {
    slot: "content"
  }, [_c('card-title', [_vm._v("3 shifts gevonden voor "), _c('a', {
    attrs: {
      "href": "#"
    }
  }, [_vm._v("Bartending")]), _vm._v(" bij "), _c('a', {
    attrs: {
      "href": "#"
    }
  }, [_vm._v("Strandtent de Pit")])])], 1)], 2)], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Raised")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-card', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-breadcrumb-container', {
    attrs: {
      "items": _vm.breadcrumbs
    },
    slot: "breadcrumbs"
  }), _vm._v(" "), _c('template', {
    slot: "content"
  }, [_c('card-title', [_vm._v("3 shifts gevonden voor "), _c('a', {
    attrs: {
      "href": "#"
    }
  }, [_vm._v("Bartending")]), _vm._v(" bij "), _c('a', {
    attrs: {
      "href": "#"
    }
  }, [_vm._v("Strandtent de Pit")])])], 1)], 2)], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Small")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-card', {
    attrs: {
      "type": "small"
    }
  }, [_c('template', {
    slot: "content"
  }, [_c('card-title', [_vm._v("Strandtent de Pit")]), _vm._v(" "), _c('card-subtitle', [_vm._v("Nieuwlandsedijk 20 "), _c('br'), _vm._v(" 2691KW 's-Gravenzande")]), _vm._v(" "), _c('card-divider'), _vm._v(" "), _c('card-subtitle', [_vm._v("Footer example")])], 1)], 2)], 1)]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("string")]), _vm._v(" "), _c('td', [_vm._v("default")]), _vm._v(" "), _c('td', [_vm._v("Type of the card (default, small)")])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the content of the card")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody')])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiCard.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 283 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('transition', {
    attrs: {
      "name": _vm.disableTransition ? null : 'ui-progress-circular--transition-fade'
    }
  }, [_c('div', {
    staticClass: "ui-progress-circular",
    class: _vm.classes,
    style: ({
      'width': _vm.size + 'px',
      'height': _vm.size + 'px'
    })
  }, [(_vm.type === 'determinate') ? _c('svg', {
    staticClass: "ui-progress-circular__determinate",
    attrs: {
      "role": "progressbar",
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": _vm.progress,
      "height": _vm.size,
      "width": _vm.size
    }
  }, [_c('circle', {
    staticClass: "ui-progress-circular__determinate-path",
    style: ({
      'stroke-dashoffset': _vm.strokeDashOffset,
      'stroke-width': _vm.calculatedStroke
    }),
    attrs: {
      "fill": "transparent",
      "stroke-dashoffset": "0",
      "cx": _vm.size / 2,
      "cy": _vm.size / 2,
      "r": _vm.radius,
      "stroke-dasharray": _vm.strokeDashArray
    }
  })]) : _c('svg', {
    staticClass: "ui-progress-circular__indeterminate",
    attrs: {
      "role": "progressbar",
      "viewBox": "25 25 50 50",
      "aria-valuemax": 100,
      "aria-valuemin": 0
    }
  }, [_c('circle', {
    staticClass: "ui-progress-circular__indeterminate-path",
    attrs: {
      "cx": "50",
      "cy": "50",
      "fill": "none",
      "r": "20",
      "stroke-miterlimit": "10",
      "stroke-width": _vm.calculatedStroke
    }
  })])])])
},staticRenderFns: []}

/***/ }),
/* 284 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    ref: "tooltip",
    staticClass: "ui-tooltip"
  }, [_vm._t("default")], 2)
},staticRenderFns: []}

/***/ }),
/* 285 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-snackbar"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiSnackbar")]), _vm._v(" "), _c('p', [_vm._v("UiSnackbar provides lightweight feedback about an operation by showing a brief message at the bottom of the screen. Snackbars can contain an action.")]), _vm._v(" "), _c('p', [_vm._v("UiSnackbarContainer allows you to create and manage multiple snackbars, controlling their visibility to ensure only one snackbar is shown at a time. The transition and position of snackbars relative to the container can be customized.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-snackbar', [_vm._v("Post published")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With action")]), _vm._v(" "), _c('ui-snackbar', {
    attrs: {
      "action": "Retry"
    }
  }, [_vm._v("Database connection failed")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Multi-line")]), _vm._v(" "), _c('ui-snackbar', [_vm._v("\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Set sur illo hic ullam atque omnis.\n        ")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Action color: primary")]), _vm._v(" "), _c('ui-snackbar', {
    attrs: {
      "action": "Undo",
      "action-color": "primary"
    }
  }, [_vm._v("\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Set sur illo hic ullam atque omnis.\n        ")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("UiSnackbarContainer demo")]), _vm._v(" "), _c('div', {
    staticClass: "preview-controls"
  }, [_c('ui-radio-group', {
    attrs: {
      "name": "position",
      "options": ['left', 'center', 'right']
    },
    model: {
      value: (_vm.position),
      callback: function($$v) {
        _vm.position = $$v
      },
      expression: "position"
    }
  }, [_vm._v("Position")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "transition",
      "options": ['slide', 'fade']
    },
    model: {
      value: (_vm.transition),
      callback: function($$v) {
        _vm.transition = $$v
      },
      expression: "transition"
    }
  }, [_vm._v("Transition")]), _vm._v(" "), _c('ui-switch', {
    model: {
      value: (_vm.queueSnackbars),
      callback: function($$v) {
        _vm.queueSnackbars = $$v
      },
      expression: "queueSnackbars"
    }
  }, [_vm._v("\n            Queue snackbars: " + _vm._s(_vm.queueSnackbars ? 'On' : 'Off') + "\n        ")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "placeholder": "Enter a message"
    },
    model: {
      value: (_vm.message),
      callback: function($$v) {
        _vm.message = $$v
      },
      expression: "message"
    }
  }, [_vm._v("Snackbar message")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "placeholder": "Enter action button text"
    },
    model: {
      value: (_vm.action),
      callback: function($$v) {
        _vm.action = $$v
      },
      expression: "action"
    }
  }, [_vm._v("Action text")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "action_color",
      "options": ['accent', 'primary']
    },
    model: {
      value: (_vm.actionColor),
      callback: function($$v) {
        _vm.actionColor = $$v
      },
      expression: "actionColor"
    }
  }, [_vm._v("Action color")]), _vm._v(" "), _c('ui-textbox', {
    attrs: {
      "placeholder": "Enter the duration in seconds",
      "type": "number"
    },
    model: {
      value: (_vm.duration),
      callback: function($$v) {
        _vm.duration = _vm._n($$v)
      },
      expression: "duration"
    }
  }, [_vm._v("Duration (seconds)")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": _vm.createSnackbar
    }
  }, [_vm._v("Create snackbar")])], 1), _vm._v(" "), _c('div', {
    staticClass: "preview-pane"
  }, [_c('ui-snackbar-container', {
    ref: "snackbarContainer",
    attrs: {
      "position": _vm.position,
      "transition": _vm.transition,
      "queue-snackbars": _vm.queueSnackbars
    }
  })], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API: UiSnackbar")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("message")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The snackbar message (text-only). For HTML (not recommended), use the default slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("action")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The snackbar action button text.")]), _vm._v(" "), _c('p', [_vm._v("Setting this prop will show an action button. Otherwise, no action button is shown.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("actionColor")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"accent\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The snackbar action button text color. One of "), _c('code', [_vm._v("accent")]), _vm._v(" or "), _c('code', [_vm._v("primary")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("transition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"slide\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The snackbar show/hide transition. One of "), _c('code', [_vm._v("slide")]), _vm._v(" or "), _c('code', [_vm._v("fade")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the snackbar text and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("show")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the snackbar is shown.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@show")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("hide")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the snackbar is hidden. You should listen for this event and remove the snackbar.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@hide")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("click")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the snackbar is clicked. You should listen for this event and remove the snackbar.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@click")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("action-click")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the snackbar action is clicked.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@action-click")]), _vm._v(".")])])])])])])])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API: UiSnackbarContainer")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("duration")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("5000")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The default duration in milliseconds of snackbars shown in this container.")]), _vm._v(" "), _c('p', [_vm._v("Only applies to snackbars created without a duration.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("queueSnackbars")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not snackbars should be queued and shown one after the other.")]), _vm._v(" "), _c('p', [_vm._v("By default, creating a new snackbar while one is visible will cause the visible one to immediately transition out for the new one.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to ensure that each snackbar is shown for its complete duration.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("allowHtml")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not snackbars created in this container can have HTML in their "), _c('code', [_vm._v("message")]), _vm._v(" property.")]), _vm._v(" "), _c('p', [_vm._v("Set this prop to "), _c('code', [_vm._v("true")]), _vm._v(" to allow HTML in the snackbars created in this container.")]), _vm._v(" "), _c('p', [_c('b', [_vm._v("Note")]), _vm._v(": Using HTML in snackbars is not recommended.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("position")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of snackbars relative to the container. One of "), _c('code', [_vm._v("left")]), _vm._v(", "), _c('code', [_vm._v("center")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("transition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"slide\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The show/hide transition of snackbars in the container. One of "), _c('code', [_vm._v("slide")]), _vm._v(" or "), _c('code', [_vm._v("fade")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("snackbar-show")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a snackbar is shown in the container. The handler is called with the snackbar.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@snackbar-show")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("snackbar-hide")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a snackbar is hidden from the container. The handler is called with the snackbar.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@snackbar-hide")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("createSnackbar()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to create a new snackbar, passing in an options object with any of the props of UiSnackbar.")]), _vm._v(" "), _c('p', [_vm._v("You can also specify the following additional properties and callback functions on the options object:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("duration")]), _vm._v(" (Number) - the duration of the snackbar in milliseconds.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("onShow")]), _vm._v(" (Function) - called when the snackbar is shown, passed the snackbar object.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("onHide")]), _vm._v(" (Function) - called when the snackbar is hidden, passed the snackbar object.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("onClick")]), _vm._v(" (Function) - called when the snackbar is clicked, passed the snackbar object.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("onActionClick")]), _vm._v(" (Function) - called when the snackbar action is clicked, passed the snackbar object.")])])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiSnackbar.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 286 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('button', {
    ref: "button",
    staticClass: "ui-button",
    class: _vm.classes,
    attrs: {
      "disabled": _vm.disabled || _vm.loading,
      "type": _vm.buttonType
    },
    on: {
      "click": _vm.onClick,
      "~focus": function($event) {
        _vm.onFocus($event)
      }
    }
  }, [_c('div', {
    staticClass: "ui-button__content"
  }, [(_vm.icon || _vm.$slots.icon) ? _c('div', {
    staticClass: "ui-button__icon"
  }, [_vm._t("icon", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _vm._t("default"), _vm._v(" "), (_vm.hasDropdown && _vm.iconPosition !== 'right') ? _c('ui-icon', {
    staticClass: "ui-button__dropdown-icon"
  }, [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M6.984 9.984h10.03L12 15z"
    }
  })])]) : _vm._e()], 2), _vm._v(" "), _c('div', {
    staticClass: "ui-button__focus-ring",
    style: (_vm.focusRingStyle)
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    staticClass: "ui-button__progress",
    attrs: {
      "disable-transition": "",
      "color": _vm.progressColor,
      "size": 18,
      "stroke": 4.5
    }
  }), _vm._v(" "), (!_vm.disableRipple && !_vm.disabled) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "button"
    }
  }) : _vm._e(), _vm._v(" "), (_vm.hasDropdown) ? _c('ui-popover', {
    ref: "dropdown",
    attrs: {
      "trigger": "button",
      "dropdown-position": _vm.dropdownPosition,
      "open-on": _vm.openDropdownOn
    },
    on: {
      "close": _vm.onDropdownClose,
      "open": _vm.onDropdownOpen
    }
  }, [_vm._t("dropdown")], 2) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 287 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-datepicker",
    class: _vm.classes
  }, [_c('input', {
    staticClass: "ui-datepicker__hidden-input",
    attrs: {
      "type": "hidden",
      "name": _vm.name
    },
    domProps: {
      "value": _vm.submittedValue
    }
  }), _vm._v(" "), (_vm.icon || _vm.$slots.icon) ? _c('div', {
    staticClass: "ui-datepicker__icon-wrapper"
  }, [_vm._t("icon", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-datepicker__content"
  }, [_c('div', {
    ref: "label",
    staticClass: "ui-datepicker__label",
    attrs: {
      "tabindex": _vm.disabled ? null : '0'
    },
    on: {
      "click": _vm.onClick,
      "focus": _vm.onFocus,
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        $event.preventDefault();
        _vm.openPicker($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "space", 32)) { return null; }
        $event.preventDefault();
        _vm.openPicker($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "tab", 9)) { return null; }
        _vm.onBlur($event)
      }]
    }
  }, [(_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-datepicker__label-text",
    class: _vm.labelClasses
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-datepicker__display"
  }, [_c('div', {
    staticClass: "ui-datepicker__display-value",
    class: {
      'is-placeholder': !_vm.hasDisplayText
    }
  }, [_vm._v("\n                    " + _vm._s(_vm.hasDisplayText ? _vm.displayText : (_vm.hasFloatingLabel && _vm.isLabelInline) ? null : _vm.placeholder) + "\n                ")]), _vm._v(" "), (_vm.usesPopover && !_vm.disabled) ? _c('ui-icon', {
    staticClass: "ui-datepicker__dropdown-button"
  }, [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M6.984 9.984h10.03L12 15z"
    }
  })])]) : _vm._e()], 1)]), _vm._v(" "), (_vm.hasFeedback) ? _c('div', {
    staticClass: "ui-datepicker__feedback"
  }, [(_vm.showError) ? _c('div', {
    staticClass: "ui-datepicker__feedback-text"
  }, [_vm._t("error", [_vm._v(_vm._s(_vm.error))])], 2) : (_vm.showHelp) ? _c('div', {
    staticClass: "ui-datepicker__feedback-text"
  }, [_vm._t("help", [_vm._v(_vm._s(_vm.help))])], 2) : _vm._e()]) : _vm._e()]), _vm._v(" "), (_vm.usesModal && !_vm.disabled) ? _c('ui-modal', {
    ref: "modal",
    attrs: {
      "remove-header": ""
    },
    on: {
      "close": _vm.onPickerClose,
      "open": _vm.onPickerOpen
    }
  }, [_c('ui-calendar', {
    attrs: {
      "color": _vm.color,
      "date-filter": _vm.dateFilter,
      "lang": _vm.lang,
      "max-date": _vm.maxDate,
      "min-date": _vm.minDate,
      "orientation": _vm.orientation,
      "value": _vm.value
    },
    on: {
      "date-select": _vm.onDateSelect
    }
  }, [_c('div', {
    staticClass: "ui-datepicker__modal-buttons",
    slot: "footer"
  }, [_c('ui-button', {
    attrs: {
      "type": "secondary",
      "color": _vm.color
    },
    on: {
      "click": function($event) {
        _vm.$refs.modal.close()
      }
    }
  }, [_vm._v(_vm._s(_vm.okButtonText))]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "type": "secondary",
      "color": _vm.color
    },
    on: {
      "click": _vm.onPickerCancel
    }
  }, [_vm._v(_vm._s(_vm.cancelButtonText))])], 1)])], 1) : _vm._e(), _vm._v(" "), (_vm.usesPopover && !_vm.disabled) ? _c('ui-popover', {
    ref: "popover",
    attrs: {
      "contain-focus": "",
      "trigger": "label"
    },
    on: {
      "close": _vm.onPickerClose,
      "open": _vm.onPickerOpen
    }
  }, [_c('ui-calendar', {
    attrs: {
      "color": _vm.color,
      "date-filter": _vm.dateFilter,
      "lang": _vm.lang,
      "max-date": _vm.maxDate,
      "min-date": _vm.minDate,
      "orientation": _vm.orientation,
      "value": _vm.value
    },
    on: {
      "date-select": _vm.onDateSelect
    }
  })], 1) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 288 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-button"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiButton")]), _vm._v(" "), _c('p', [_vm._v("UiButton is a button component that can show a dropdown and a loading spinner. It also supports focus (mouse and keyboard separately), hover and disabled states.")]), _vm._v(" "), _c('p', [_vm._v("UiButton has two types:")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('p', [_vm._v("Additionally, UiButton can be raised to show a box-shadow.")]), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _vm._m(3), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('ui-radio-group', {
    attrs: {
      "name": "size",
      "options": ['small', 'normal', 'large']
    },
    model: {
      value: (_vm.size),
      callback: function($$v) {
        _vm.size = $$v
      },
      expression: "size"
    }
  }, [_vm._v("Button Size")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "icon_position",
      "options": ['left', 'right']
    },
    model: {
      value: (_vm.iconPosition),
      callback: function($$v) {
        _vm.iconPosition = $$v
      },
      expression: "iconPosition"
    }
  }, [_vm._v("Icon Position")]), _vm._v(" "), _c('ui-switch', {
    model: {
      value: (_vm.loading),
      callback: function($$v) {
        _vm.loading = $$v
      },
      expression: "loading"
    }
  }, [_vm._v("\n            Loading: "), _c('code', [_vm._v(_vm._s(_vm.loading ? 'true' : 'false'))])]), _vm._v(" "), _c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table table-bordered page__demo-table"
  }, [_c('tbody', [_vm._m(4), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: default")]), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "size": _vm.size
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "raised": "",
      "size": _vm.size
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "loading": _vm.loading,
      "size": _vm.size
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "disabled": "",
      "size": _vm.size
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "icon": "refresh",
      "icon-position": _vm.iconPosition,
      "size": _vm.size
    }
  }, [_vm._v("With Icon")])], 1), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "raised": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "disabled": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "icon": "refresh",
      "icon-position": _vm.iconPosition,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("With Icon")])], 1)]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: primary")]), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "primary",
      "size": _vm.size
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "raised": "",
      "size": _vm.size
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "disabled": "",
      "size": _vm.size
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "icon-position": _vm.iconPosition,
      "size": _vm.size
    }
  }, [_vm._v("With Icon")])], 1), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "primary",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "raised": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "disabled": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "icon-position": _vm.iconPosition,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("With Icon")])], 1)]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: accent")]), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "accent",
      "size": _vm.size
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "raised": "",
      "size": _vm.size
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "disabled": "",
      "size": _vm.size
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "icon": "add",
      "icon-position": _vm.iconPosition,
      "size": _vm.size
    }
  }, [_vm._v("With Icon")])], 1), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "accent",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "raised": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "disabled": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "accent",
      "icon": "add",
      "icon-position": _vm.iconPosition,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("With Icon")])], 1)]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: green")]), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "green",
      "size": _vm.size
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "raised": "",
      "size": _vm.size
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "disabled": "",
      "size": _vm.size
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "icon": "file_download",
      "icon-position": _vm.iconPosition,
      "size": _vm.size
    }
  }, [_vm._v("With Icon")])], 1), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "green",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "raised": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "disabled": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "green",
      "icon": "file_download",
      "icon-position": _vm.iconPosition,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("With Icon")])], 1)]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: orange")]), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "orange",
      "size": _vm.size
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "raised": "",
      "size": _vm.size
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "disabled": "",
      "size": _vm.size
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "icon": "file_download",
      "icon-position": _vm.iconPosition,
      "size": _vm.size
    }
  }, [_vm._v("With Icon")])], 1), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "orange",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "raised": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "disabled": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "orange",
      "icon": "file_download",
      "icon-position": _vm.iconPosition,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("With Icon")])], 1)]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: red")]), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "red",
      "size": _vm.size
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "raised": "",
      "size": _vm.size
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "disabled": "",
      "size": _vm.size
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "icon": "delete",
      "icon-position": _vm.iconPosition,
      "size": _vm.size
    }
  }, [_vm._v("With Icon")])], 1), _vm._v(" "), _c('td', [_c('ui-button', {
    attrs: {
      "color": "red",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Normal")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "raised": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Loading")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "disabled": "",
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("Disabled")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "icon": "delete",
      "icon-position": _vm.iconPosition,
      "size": _vm.size,
      "type": "secondary"
    }
  }, [_vm._v("With Icon")])], 1)])])])])], 1), _vm._v(" "), _c('div', {
    staticClass: "page__demo"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Has dropdown, with menu")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-button', {
    ref: "dropdownButton",
    attrs: {
      "color": "primary",
      "has-dropdown": "",
      "size": _vm.size
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "has-secondary-text": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton.closeDropdown()
      }
    },
    slot: "dropdown"
  }), _vm._v("\n                Click for Menu\n            ")], 1)], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Has dropdown, custom content")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-button', {
    attrs: {
      "has-dropdown": "",
      "size": _vm.size
    }
  }, [_c('div', {
    staticClass: "custom-popover-content",
    slot: "dropdown"
  }, [_c('p', [_c('b', [_vm._v("Hey")]), _vm._v(" there!")]), _vm._v(" "), _c('p', [_vm._v("Button dropdowns can have any content, not just menus.")])]), _vm._v("\n\n                Click for custom dropdown\n            ")])], 1)]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of button (determines the visual prominence).")]), _vm._v(" "), _c('p', [_vm._v("Use "), _c('code', [_vm._v("primary")]), _vm._v(" for a more prominent button, and "), _c('code', [_vm._v("secondary")]), _vm._v(" for a less prominent button.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("buttonType")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"submit\"")])]), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("type")]), _vm._v(" attribute of the button element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"default\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("green")]), _vm._v(", "), _c('code', [_vm._v("orange")]), _vm._v(", "), _c('code', [_vm._v("red")]), _vm._v(" or "), _c('code', [_vm._v("default")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("In "), _c('code', [_vm._v("type=\"primary\"")]), _vm._v(" buttons, this is the background color; in "), _c('code', [_vm._v("type=\"secondary\"")]), _vm._v(" buttons, the text color.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("size")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"normal\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The size of the button. One of "), _c('code', [_vm._v("small")]), _vm._v(", "), _c('code', [_vm._v("normal")]), _vm._v(", or "), _c('code', [_vm._v("large")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("loading")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the button progress spinner is shown.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show the progress. This disables the button.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("raised")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the button has a drop shadow.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show a drop shadow.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The button icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the icon relative to the button text. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableRipple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the ripple ink animation is shown when the button is clicked.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the ripple ink animation.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("hasDropdown")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the button contains a dropdown.")]), _vm._v(" "), _c('p', [_vm._v("Use the "), _c('code', [_vm._v("dropdown")]), _vm._v(" slot to add any dropdown content, including a "), _c('a', {
    attrs: {
      "href": "#/ui-menu"
    }
  }, [_vm._v("UiMenu")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dropdownPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"bottom left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the dropdown relative to the button.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("top left")]), _vm._v(", "), _c('code', [_vm._v("left top")]), _vm._v(", "), _c('code', [_vm._v("left middle")]), _vm._v(", "), _c('code', [_vm._v("left bottom")]), _vm._v(", "), _c('code', [_vm._v("bottom left")]), _vm._v(", "), _c('code', [_vm._v("bottom center")]), _vm._v(", "), _c('code', [_vm._v("bottom right")]), _vm._v(", "), _c('code', [_vm._v("right bottom")]), _vm._v(", "), _c('code', [_vm._v("right middle")]), _vm._v(", "), _c('code', [_vm._v("right top")]), _vm._v(", "), _c('code', [_vm._v("top right")]), _vm._v(", or "), _c('code', [_vm._v("top center")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("openDropdownOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"click\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event that will cause the dropdown to open. One of "), _c('code', [_vm._v("click")]), _vm._v(", "), _c('code', [_vm._v("hover")]), _vm._v(", "), _c('code', [_vm._v("focus")]), _vm._v(", or "), _c('code', [_vm._v("always")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("For "), _c('code', [_vm._v("always")]), _vm._v(", the dropdown is opened when rendered and it remains open.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the button is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the button.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the button text and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the button icon and can contain any custom or SVG icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dropdown")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the the dropdown content and can contain HTML.")]), _vm._v(" "), _c('p', [_vm._v("For a dropdown menu, add a "), _c('a', {
    attrs: {
      "href": "#/ui-menu"
    }
  }, [_vm._v("UiMenu")]), _vm._v(" component in this slot, and then call the "), _c('code', [_vm._v("closeDropdown()")]), _vm._v(" method when the "), _c('code', [_vm._v("close")]), _vm._v(" event is emitted on the menu.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the button dropdown is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the button dropdown is closed.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-close")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("openDropdown()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to open the button dropdown.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("closeDropdown()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to close the button dropdown.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("toggleDropdown()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to toggle the button dropdown.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('ul', [_c('li', [_c('b', [_vm._v("Primary")]), _vm._v(": more prominent, has a background color, with white or black text color.")]), _vm._v(" "), _c('li', [_c('b', [_vm._v("Secondary")]), _vm._v(": less prominent, has no background, text color is the button color.")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("Supported colors are "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("green")]), _vm._v(", "), _c('code', [_vm._v("orange")]), _vm._v(" and "), _c('code', [_vm._v("red")]), _vm._v(", in addition to the default gray.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_c('b', [_vm._v("Note:")]), _vm._v(" If you are having alignment issues when using multiple buttons next to each other, put the buttons in a container and add a class of "), _c('code', [_vm._v("ui-button-group")]), _vm._v(" for a flex-based workaround.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiButton.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('tr', [_c('th'), _vm._v(" "), _c('th', [_vm._v("Type: primary")]), _vm._v(" "), _c('th', [_vm._v("Type: secondary")])])
}]}

/***/ }),
/* 289 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('transition', {
    attrs: {
      "name": _vm.toggleTransition
    },
    on: {
      "after-enter": _vm.onEnter,
      "after-leave": _vm.onLeave
    }
  }, [_c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isOpen),
      expression: "isOpen"
    }],
    staticClass: "ui-modal ui-modal__mask",
    class: _vm.classes,
    attrs: {
      "role": _vm.role
    }
  }, [_c('div', {
    ref: "backdrop",
    staticClass: "ui-modal__wrapper",
    class: {
      'has-dummy-scrollbar': _vm.preventShift
    },
    on: {
      "click": function($event) {
        _vm.dismissOnBackdrop && _vm.closeModal($event)
      }
    }
  }, [_c('div', {
    ref: "container",
    staticClass: "ui-modal__container",
    attrs: {
      "tabindex": "-1"
    },
    on: {
      "keydown": function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "esc", 27)) { return null; }
        _vm.dismissOnEsc && _vm.closeModal($event)
      }
    }
  }, [(!_vm.removeHeader) ? _c('div', {
    staticClass: "ui-modal__header"
  }, [_vm._t("header", [_c('h1', {
    staticClass: "ui-modal__header-text"
  }, [_vm._v(_vm._s(_vm.title))])]), _vm._v(" "), _c('div', {
    staticClass: "ui-modal__close-button"
  }, [(_vm.dismissOnCloseButton && !_vm.removeCloseButton && _vm.dismissible) ? _c('ui-close-button', {
    on: {
      "click": _vm.closeModal
    }
  }) : _vm._e()], 1)], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-modal__body"
  }, [_vm._t("default")], 2), _vm._v(" "), (_vm.hasFooter) ? _c('div', {
    staticClass: "ui-modal__footer"
  }, [_vm._t("footer")], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-modal__focus-redirect",
    attrs: {
      "tabindex": "0"
    },
    on: {
      "focus": function($event) {
        $event.stopPropagation();
        _vm.redirectFocus($event)
      }
    }
  })])])])])
},staticRenderFns: []}

/***/ }),
/* 290 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-radio-group"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiRadioGroup")]), _vm._v(" "), _c('p', [_vm._v("UiRadioGroup shows a group of mutually exclusive radio buttons. It supports hover, focus and disabled states. One or more options in the group can be disabled or the entire group can be disabled.")]), _vm._v(" "), _c('p', [_vm._v("UiRadioGroup can show a label above the group as well as help or error below the group and it allows for resetting the group to its initial state.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "group1",
      "options": ['Ned', 'Rod', 'Todd']
    },
    model: {
      value: (_vm.group1),
      callback: function($$v) {
        _vm.group1 = $$v
      },
      expression: "group1"
    }
  }, [_vm._v("Favourite Flanders")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With default selection")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "group2",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group2),
      callback: function($$v) {
        _vm.group2 = $$v
      },
      expression: "group2"
    }
  }, [_vm._v("Favourite Flanders")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With help")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "help": "Choose your favourite neighbor-eeno",
      "name": "group3",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group3),
      callback: function($$v) {
        _vm.group3 = $$v
      },
      expression: "group3"
    }
  }, [_vm._v("Favourite Flanders")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With error")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "error": "You must choose Rod",
      "help": "Choose your favourite neighbor-eeno",
      "name": "group4",
      "options": _vm.options.defaultGroup,
      "invalid": _vm.group4 !== 'rod'
    },
    model: {
      value: (_vm.group4),
      callback: function($$v) {
        _vm.group4 = $$v
      },
      expression: "group4"
    }
  }, [_vm._v("Favourite Flanders")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Vertical")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "group5",
      "vertical": "",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group5),
      callback: function($$v) {
        _vm.group5 = $$v
      },
      expression: "group5"
    }
  }, [_vm._v("Favourite Flanders")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Individual option disabled")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "group6",
      "options": _vm.options.secondGroup
    },
    model: {
      value: (_vm.group6),
      callback: function($$v) {
        _vm.group6 = $$v
      },
      expression: "group6"
    }
  }, [_vm._v("Favourite Flanders")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Group disabled")]), _vm._v(" "), _c('ui-radio-group', {
    attrs: {
      "name": "group7",
      "disabled": "",
      "options": _vm.options.defaultGroup
    },
    model: {
      value: (_vm.group7),
      callback: function($$v) {
        _vm.group7 = $$v
      },
      expression: "group7"
    }
  }, [_vm._v("Favourite Flanders")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name *")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_vm._v("(required)")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The name of the radio group.")]), _vm._v(" "), _c('p', [_vm._v("Applied as the "), _c('code', [_vm._v("name")]), _vm._v(" attribute on each input element in the radio group.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The radio group label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td', [_vm._v("Number, String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model that the selected value in the radio group syncs to. Can be set initially for a default selection.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("options *")]), _vm._v(" "), _c('td', [_vm._v("Array")]), _vm._v(" "), _c('td', [_vm._v("(required)")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("An array of options to show to the user as radio buttons. The array can either be of strings or objects (but not both).")]), _vm._v(" "), _c('p', [_vm._v("For an array of objects, each option object supports the following properties:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("id")]), _vm._v(": Applied as the "), _c('code', [_vm._v("id")]), _vm._v(" attribute of the option's root element.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("class")]), _vm._v(": Applied as the "), _c('code', [_vm._v("class")]), _vm._v(" attribute of the option's root element.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("label")]), _vm._v("*: The option's label - shown to the user.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("value")]), _vm._v("*: The option's value - written to the model when the option is selected.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("checked")]), _vm._v(": Whether or not the option is selected by default. This is overridden by the radio group's initial "), _c('code', [_vm._v("value")]), _vm._v(" if it's non-empty.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("disabled")]), _vm._v(": Whether or not the option is disabled.")])]), _vm._v(" "), _c('p', [_vm._v("For an array of strings, each option string is used as both the label and the value.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("keys")]), _vm._v(" "), _c('td', [_vm._v("Object")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('pre', {
    staticClass: "language-javascript is-compact"
  }, [_vm._v("{\n  id: 'id',\n  class: 'class',\n  label: 'label',\n  value: 'value',\n  checked: 'checked',\n  disabled: 'disabled'\n}")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Allows for redefining the option keys. The "), _c('code', [_vm._v("id")]), _vm._v(", "), _c('code', [_vm._v("class")]), _vm._v(", "), _c('code', [_vm._v("checked")]), _vm._v(", and "), _c('code', [_vm._v("disabled")]), _vm._v(" keys are optional.")]), _vm._v(" "), _c('p', [_vm._v("Pass an object with custom keys if your data does not match the default keys.")]), _vm._v(" "), _c('p', [_vm._v("Note that if you redefine one key, you have to define all the others as well.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_vm._v("The color of a selected radio button in the group. One of "), _c('code', [_vm._v("primary")]), _vm._v(" or "), _c('code', [_vm._v("accent")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("buttonPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_vm._v("The position of the radio buttons relative to their labels. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("vertical")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the radio group options are rendered vertically, one over the other.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" for a vertical radio group.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The help text (hint) shown to the user below the radio group. For HTML, use the "), _c('code', [_vm._v("help")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the radio group for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The error text shown to the user below the radio group when the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop is "), _c('code', [_vm._v("true")]), _vm._v(". For HTML, use the "), _c('code', [_vm._v("error")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("Extra space is reserved under the radio group for the help and error, but if neither is available, this space is collapsed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("invalid")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the radio group is invalid.")]), _vm._v(" "), _c('p', [_vm._v("When "), _c('code', [_vm._v("invalid")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the radio group label appears red and the error is shown if available.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the radio group is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the radio group.")])])])])])]), _vm._v("\n\n                * Required prop\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the radio group label and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("help")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the radio group help and can contain HTML.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("error")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the radio group error and can contain HTML.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a radio button in the group is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when a radio button in the group loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the radio group value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the value of the radio group is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("reset()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to reset the radio group's value to its initial value. You should also reset the "), _c('code', [_vm._v("invalid")]), _vm._v(" prop.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n            Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiRadioGroup.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 291 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-preloader"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiPreloader")]), _vm._v(" "), _c('p', [_vm._v("UiPreloader shows an indeterminate progress bar using the primary Material Design colors. Useful for indicating activity like a page load.")]), _vm._v(" "), _c('p', [_vm._v("UiPreloader is not from the Material Design spec, but inspired by a similar component seen in Google's Inbox app.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('ui-preloader', {
    attrs: {
      "show": _vm.loading
    }
  }), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.loading = !_vm.loading
      }
    }
  }, [_vm._v("Toggle Loading")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("show *")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_vm._v("(required)")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the preloader is shown. Changing this value will show/hide the preloader.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiPreloader.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 292 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('button', {
    ref: "button",
    staticClass: "ui-close-button",
    class: _vm.classes,
    attrs: {
      "aria-label": "Close",
      "type": "button",
      "disabled": _vm.disabled
    },
    on: {
      "click": _vm.onClick
    }
  }, [_c('div', {
    staticClass: "ui-close-button__icon"
  }, [_c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M18.984 6.422L13.406 12l5.578 5.578-1.406 1.406L12 13.406l-5.578 5.578-1.406-1.406L10.594 12 5.016 6.422l1.406-1.406L12 10.594l5.578-5.578z"
    }
  })])])], 1), _vm._v(" "), _c('span', {
    staticClass: "ui-close-button__focus-ring"
  }), _vm._v(" "), (!_vm.disableRipple && !_vm.disabled) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "button"
    }
  }) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 293 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('button', {
    ref: "button",
    staticClass: "ui-fab",
    class: _vm.classes,
    attrs: {
      "aria-label": _vm.ariaLabel || _vm.tooltip
    },
    on: {
      "click": _vm.onClick
    }
  }, [(_vm.icon || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-fab__icon"
  }, [_vm._t("default", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _c('span', {
    staticClass: "ui-fab__focus-ring"
  }), _vm._v(" "), (!_vm.disableRipple) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "button"
    }
  }) : _vm._e(), _vm._v(" "), (_vm.tooltip) ? _c('ui-tooltip', {
    attrs: {
      "trigger": "button",
      "open-on": _vm.openTooltipOn,
      "position": _vm.tooltipPosition
    }
  }, [_vm._v(_vm._s(_vm.tooltip))]) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 294 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-icon-button"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiIconButton")]), _vm._v(" "), _c('p', [_vm._v("UiIconButton shows an icon button which can show a loading spinner and include a dropdown. It supports focus (mouse and keyboard separately), hover and disabled states.")]), _vm._v(" "), _c('p', [_vm._v("UiIconButton has two types:")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _vm._m(3), _vm._v(" "), _vm._m(4), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('ui-radio-group', {
    attrs: {
      "name": "size",
      "options": ['small', 'normal', 'large']
    },
    model: {
      value: (_vm.size),
      callback: function($$v) {
        _vm.size = $$v
      },
      expression: "size"
    }
  }, [_vm._v("Button Size")]), _vm._v(" "), _c('ui-switch', {
    model: {
      value: (_vm.loading),
      callback: function($$v) {
        _vm.loading = $$v
      },
      expression: "loading"
    }
  }, [_vm._v("\n            Loading: "), _c('code', [_vm._v(_vm._s(_vm.loading ? 'true' : 'false'))])]), _vm._v(" "), _c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table table-bordered page__demo-table"
  }, [_c('tbody', [_vm._m(5), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: default")]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "icon": "refresh",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "icon": "refresh",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "disabled": "",
      "icon": "refresh",
      "size": _vm.size
    }
  })], 1)]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "icon": "refresh",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "icon": "refresh",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "disabled": "",
      "icon": "refresh",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: primary")]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "primary",
      "disabled": "",
      "icon": "add",
      "size": _vm.size
    }
  })], 1)]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "primary",
      "disabled": "",
      "icon": "add",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: accent")]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "accent",
      "icon": "edit",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "accent",
      "icon": "edit",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "accent",
      "disabled": "",
      "icon": "edit",
      "size": _vm.size
    }
  })], 1)]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "accent",
      "icon": "edit",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "accent",
      "icon": "edit",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "accent",
      "disabled": "",
      "icon": "edit",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: green")]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "green",
      "icon": "star",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "green",
      "icon": "star",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "green",
      "disabled": "",
      "icon": "star",
      "size": _vm.size
    }
  })], 1)]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "green",
      "icon": "star",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "green",
      "icon": "star",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "green",
      "disabled": "",
      "icon": "star",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: orange")]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "orange",
      "icon": "favorite",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "orange",
      "icon": "favorite",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "orange",
      "disabled": "",
      "icon": "favorite",
      "size": _vm.size
    }
  })], 1)]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "orange",
      "icon": "favorite",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "orange",
      "icon": "favorite",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "orange",
      "disabled": "",
      "icon": "favorite",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: red")]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "red",
      "icon": "delete",
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "red",
      "icon": "delete",
      "loading": _vm.loading,
      "size": _vm.size
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "red",
      "disabled": "",
      "icon": "delete",
      "size": _vm.size
    }
  })], 1)]), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "red",
      "icon": "delete",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "red",
      "icon": "delete",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "red",
      "disabled": "",
      "icon": "delete",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: black")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "menu",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "black",
      "icon": "refresh",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "black",
      "disabled": "",
      "icon": "more_vert",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])]), _vm._v(" "), _c('tr', [_c('th', [_vm._v("Color: white")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('div', {
    staticClass: "page__demo-group has-white-icon-buttons"
  }, [_c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "menu",
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "white",
      "icon": "refresh",
      "loading": _vm.loading,
      "size": _vm.size,
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "white",
      "disabled": "",
      "icon": "more_vert",
      "size": _vm.size,
      "type": "secondary"
    }
  })], 1)])])])])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With tooltip")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "icon": "refresh",
      "size": _vm.size,
      "tooltip": "Top center",
      "tooltip-position": "top center"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "primary",
      "icon": "add",
      "size": _vm.size,
      "tooltip": "Bottom center"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "accent",
      "icon": "edit",
      "size": _vm.size,
      "tooltip": "Left middle",
      "tooltip-position": "left middle"
    }
  }), _vm._v(" "), _c('ui-icon-button', {
    attrs: {
      "color": "green",
      "icon": "star",
      "size": _vm.size,
      "tooltip": "Right middle",
      "tooltip-position": "right middle"
    }
  })], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Has dropdown, with menu")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    ref: "dropdownButton",
    attrs: {
      "color": "primary",
      "has-dropdown": "",
      "icon": "add",
      "size": _vm.size
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdownButton.closeDropdown()
      }
    },
    slot: "dropdown"
  })], 1)], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Has dropdown, custom content")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon-button', {
    attrs: {
      "has-dropdown": "",
      "icon": "more_vert",
      "size": _vm.size
    }
  }, [_c('div', {
    staticClass: "custom-popover-content",
    slot: "dropdown"
  }, [_c('p', [_c('b', [_vm._v("Hey")]), _vm._v(" there!")]), _vm._v(" "), _c('p', [_vm._v("Button dropdowns can have any content, not just menus.")])])])], 1)], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of icon button (determines the visual prominence).")]), _vm._v(" "), _c('p', [_vm._v("Use "), _c('code', [_vm._v("primary")]), _vm._v(" for a more prominent button, and "), _c('code', [_vm._v("secondary")]), _vm._v(" for a less prominent button.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("buttonType")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"button\"")])]), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("type")]), _vm._v(" attribute of the button element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"default\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("green")]), _vm._v(", "), _c('code', [_vm._v("orange")]), _vm._v(", "), _c('code', [_vm._v("red")]), _vm._v(", "), _c('code', [_vm._v("black")]), _vm._v(", "), _c('code', [_vm._v("white")]), _vm._v(" or "), _c('code', [_vm._v("default")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("The "), _c('code', [_vm._v("black")]), _vm._v(" and "), _c('code', [_vm._v("white")]), _vm._v(" colors should only be paired with "), _c('code', [_vm._v("type=\"secondary\"")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("In "), _c('code', [_vm._v("type=\"primary\"")]), _vm._v(" buttons, this is the background color; in "), _c('code', [_vm._v("type=\"secondary\"")]), _vm._v(" buttons, the text color.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("size")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"normal\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The size of the icon button. One of "), _c('code', [_vm._v("small")]), _vm._v(", "), _c('code', [_vm._v("normal")]), _vm._v(", or "), _c('code', [_vm._v("large")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("ariaLabel")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The button "), _c('code', [_vm._v("aria-label")]), _vm._v(" attribute (important for accessibility).")]), _vm._v(" "), _c('p', [_vm._v("Falls back to "), _c('code', [_vm._v("tooltip")]), _vm._v(" if not specified.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("loading")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the loading spinner is shown.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show the loading spinner (disables the button).")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("tooltip")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The icon button tooltip (text only).")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("tooltipPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"bottom left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the tooltip relative to the button.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("top left")]), _vm._v(", "), _c('code', [_vm._v("left top")]), _vm._v(", "), _c('code', [_vm._v("left middle")]), _vm._v(", "), _c('code', [_vm._v("left bottom")]), _vm._v(", "), _c('code', [_vm._v("bottom left")]), _vm._v(", "), _c('code', [_vm._v("bottom center")]), _vm._v(", "), _c('code', [_vm._v("bottom right")]), _vm._v(", "), _c('code', [_vm._v("right bottom")]), _vm._v(", "), _c('code', [_vm._v("right middle")]), _vm._v(", "), _c('code', [_vm._v("right top")]), _vm._v(", "), _c('code', [_vm._v("top right")]), _vm._v(", or "), _c('code', [_vm._v("top center")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("openTooltipOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"hover focus\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event or events that will cause the tooltip to open.")]), _vm._v(" "), _c('p', [_vm._v("One or more of "), _c('code', [_vm._v("click")]), _vm._v(", "), _c('code', [_vm._v("hover")]), _vm._v(", or "), _c('code', [_vm._v("focus")]), _vm._v(". Separate multiple events with a space.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("hasDropdown")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the button contains a dropdown.")]), _vm._v(" "), _c('p', [_vm._v("Use the "), _c('code', [_vm._v("dropdown")]), _vm._v(" slot to add any dropdown content, including a "), _c('a', {
    attrs: {
      "href": "#/ui-menu"
    }
  }, [_vm._v("UiMenu")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dropdownPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"bottom left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the dropdown relative to the button.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("top left")]), _vm._v(", "), _c('code', [_vm._v("left top")]), _vm._v(", "), _c('code', [_vm._v("left middle")]), _vm._v(", "), _c('code', [_vm._v("left bottom")]), _vm._v(", "), _c('code', [_vm._v("bottom left")]), _vm._v(", "), _c('code', [_vm._v("bottom center")]), _vm._v(", "), _c('code', [_vm._v("bottom right")]), _vm._v(", "), _c('code', [_vm._v("right bottom")]), _vm._v(", "), _c('code', [_vm._v("right middle")]), _vm._v(", "), _c('code', [_vm._v("right top")]), _vm._v(", "), _c('code', [_vm._v("top right")]), _vm._v(", or "), _c('code', [_vm._v("top center")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("openDropdownOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"click\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event that will cause the dropdown to open. One of "), _c('code', [_vm._v("click")]), _vm._v(", "), _c('code', [_vm._v("hover")]), _vm._v(", "), _c('code', [_vm._v("focus")]), _vm._v(", or "), _c('code', [_vm._v("always")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("For "), _c('code', [_vm._v("always")]), _vm._v(", the dropdown is opened when rendered and it remains open.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableRipple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the ripple ink animation is shown when the button is clicked.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the ripple ink animation.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the button is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the button.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the button icon and can contain any custom or SVG icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dropdown")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the the dropdown content and can contain HTML.")]), _vm._v(" "), _c('p', [_vm._v("For a dropdown menu, add a "), _c('a', {
    attrs: {
      "href": "#/ui-menu"
    }
  }, [_vm._v("UiMenu")]), _vm._v(" component in this slot, and then call the "), _c('code', [_vm._v("closeDropdown()")]), _vm._v(" method when the "), _c('code', [_vm._v("close")]), _vm._v(" event is emitted on the menu.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the button dropdown is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("dropdown-close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the button dropdown is closed.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@dropdown-close")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("openDropdown()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to open the button dropdown.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("closeDropdown()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to close the button dropdown.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("toggleDropdown()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to toggle the button dropdown.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('ul', [_c('li', [_c('b', [_vm._v("Primary")]), _vm._v(": more prominent, has a background color, with white or black text color.")]), _vm._v(" "), _c('li', [_c('b', [_vm._v("Secondary")]), _vm._v(": less prominent, has no background, text color is the button color.")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("Supported colors are "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("green")]), _vm._v(", "), _c('code', [_vm._v("orange")]), _vm._v(", "), _c('code', [_vm._v("red")]), _vm._v(", "), _c('code', [_vm._v("black")]), _vm._v(", and "), _c('code', [_vm._v("white")]), _vm._v(" in addition to the default gray.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("The "), _c('code', [_vm._v("black")]), _vm._v(" and "), _c('code', [_vm._v("white")]), _vm._v(" colors should only be paired with "), _c('code', [_vm._v("type=\"secondary\"")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_c('b', [_vm._v("Note:")]), _vm._v(" If you are having alignment issues when using multiple buttons next to each other, put the buttons in a container and add a class of "), _c('code', [_vm._v("ui-button-group")]), _vm._v(" for a flex-based workaround.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiIconButton.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('tr', [_c('th'), _vm._v(" "), _c('th', [_vm._v("Type: primary")]), _vm._v(" "), _c('th', [_vm._v("Type: secondary")])])
}]}

/***/ }),
/* 295 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-progress-linear"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiProgressLinear")]), _vm._v(" "), _c('p', [_vm._v("UiProgressLinear shows a linear progress bar that can be either determinate or indeterminate. A determinate progress bar shows a specific percentage of completion, while an indeterminate progress bar indicates general activity.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: determinate")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "primary",
      "type": "determinate",
      "progress": _vm.progress
    }
  }), _vm._v(" "), _c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "accent",
      "type": "determinate",
      "progress": _vm.progress
    }
  }), _vm._v(" "), _c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "black",
      "type": "determinate",
      "progress": _vm.progress
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "has-white-progress"
  }, [_c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "white",
      "type": "determinate",
      "progress": _vm.progress
    }
  })], 1)], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: indeterminate")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "primary"
    }
  }), _vm._v(" "), _c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "accent"
    }
  }), _vm._v(" "), _c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "black"
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "has-white-progress"
  }, [_c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isLoading),
      expression: "isLoading"
    }],
    attrs: {
      "color": "white"
    }
  })], 1)], 1), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.isLoading = !_vm.isLoading
      }
    }
  }, [_vm._v("Toggle Loading")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"indeterminate\"")])]), _vm._v(" "), _c('td', [_vm._v("The type of progress bar. One of "), _c('code', [_vm._v("determinate")]), _vm._v(" or "), _c('code', [_vm._v("indeterminate")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_c('code', [_vm._v("\"primary\"")])])]), _vm._v(" "), _c('td', [_vm._v("The color of the progress bar. One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("black")]), _vm._v(" or "), _c('code', [_vm._v("white")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("progress")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("0")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The value of progress as a number between 0 and 100. Changing this value will update the progress bar.")]), _vm._v(" "), _c('p', [_vm._v("Only applicable when the type is "), _c('code', [_vm._v("determinate")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiProgressLinear supports four colors: "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("black")]), _vm._v(" or "), _c('code', [_vm._v("white")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiProgressLinear.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 296 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-tabs",
    class: _vm.classes
  }, [_c('div', {
    staticClass: "ui-tabs__header"
  }, [_c('ul', {
    ref: "tabsContainer",
    staticClass: "ui-tabs__header-items",
    attrs: {
      "role": "tablist"
    }
  }, _vm._l((_vm.tabs), function(tab) {
    return _c('ui-tab-header-item', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (tab.show),
        expression: "tab.show"
      }],
      ref: "tabElements",
      refInFor: true,
      attrs: {
        "active": _vm.activeTabId === tab.id,
        "disable-ripple": _vm.disableRipple,
        "disabled": tab.disabled,
        "icon-props": tab.iconProps,
        "icon": tab.icon,
        "id": tab.id,
        "show": tab.show,
        "title": tab.title,
        "type": _vm.type
      },
      nativeOn: {
        "click": function($event) {
          _vm.selectTab($event, tab)
        },
        "keydown": [function($event) {
          if (!('button' in $event) && _vm._k($event.keyCode, "left", 37)) { return null; }
          if ('button' in $event && $event.button !== 0) { return null; }
          _vm.selectPreviousTab($event)
        }, function($event) {
          if (!('button' in $event) && _vm._k($event.keyCode, "right", 39)) { return null; }
          if ('button' in $event && $event.button !== 2) { return null; }
          _vm.selectNextTab($event)
        }]
      }
    }, [(tab.$slots.icon) ? _c('render-vnodes', {
      attrs: {
        "nodes": tab.$slots.icon
      },
      slot: "icon"
    }) : _vm._e()], 1)
  })), _vm._v(" "), (_vm.tabContainerWidth != 0) ? _c('div', {
    staticClass: "ui-tabs__active-tab-indicator",
    style: ({
      'left': _vm.indicatorLeft,
      'right': _vm.indicatorRight
    })
  }) : _vm._e()]), _vm._v(" "), _c('div', {
    staticClass: "ui-tabs__body"
  }, [_vm._t("default")], 2)])
},staticRenderFns: []}

/***/ }),
/* 297 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-fileupload"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiFileupload")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('p', [_vm._v("UiFileupload allows for selecting multiple files and customizing what type of files to allow.")]), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "name": "file"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Colors")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-fileupload', {
    attrs: {
      "color": "primary",
      "name": "file2"
    }
  }), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "color": "accent",
      "name": "file3"
    }
  })], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: secondary")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-fileupload', {
    attrs: {
      "name": "file4",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "color": "primary",
      "name": "file5",
      "type": "secondary"
    }
  }), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "color": "accent",
      "name": "file6",
      "type": "secondary"
    }
  })], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Custom label")]), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "name": "file7"
    }
  }, [_vm._v("Select file to upload")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Custom icon")]), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "name": "file8"
    }
  }, [_c('ui-icon', {
    slot: "icon"
  }, [_vm._v("cloud_upload")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Custom accept")]), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "name": "file9",
      "accept": "image/*"
    }
  }, [_vm._v("Select an image")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Multiple")]), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "multiple": "",
      "name": "file10"
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With image preview")]), _vm._v(" "), _c('ui-fileupload', {
    attrs: {
      "accept": "image/*",
      "name": "file11"
    },
    on: {
      "change": _vm.onFile11Change
    }
  }, [_vm._v("Select an image")]), _vm._v(" "), (_vm.file11PreviewImage.length > 0) ? _c('div', {
    staticClass: "page__demo-preview"
  }, [_c('img', {
    staticClass: "page__demo-preview-image",
    attrs: {
      "alt": "file11PreviewName",
      "src": _vm.file11PreviewImage
    }
  })]) : _vm._e()], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name *")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the file input element.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The upload button label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")]), _vm._v(" "), _c('p', [_vm._v("The label is shown when no file has been selected.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("accept")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("accept")]), _vm._v(" attribute of the file input element. "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-accept",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("See here")]), _vm._v(" for possible values.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("multiple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the user can select multiple files for this upload button.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to allow the selection of multiple files.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("required")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The "), _c('code', [_vm._v("required")]), _vm._v(" attribute of the file input element.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of button (determines the visual prominence).")]), _vm._v(" "), _c('p', [_vm._v("Use "), _c('code', [_vm._v("primary")]), _vm._v(" for a more prominent button, and "), _c('code', [_vm._v("secondary")]), _vm._v(" for a less prominent button.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"default\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(" or "), _c('code', [_vm._v("default")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("For "), _c('code', [_vm._v("type=\"primary\"")]), _vm._v(", this is the background color; for "), _c('code', [_vm._v("type=\"secondary\"")]), _vm._v(", the text color.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("size")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"normal\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The size of the upload button. One of "), _c('code', [_vm._v("small")]), _vm._v(", "), _c('code', [_vm._v("normal")]), _vm._v(", or "), _c('code', [_vm._v("large")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("raised")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the upload button has a drop shadow.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show a drop shadow.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the icon relative to the upload button text. One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableRipple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the ripple ink animation is shown when the upload button is clicked.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the ripple ink animation.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the upload button is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the button.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the upload button label and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the upload button icon and can contain any custom or SVG icon.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the upload button is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the upload button loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the selected file changes. The handler is called with the following arguments:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("files")]), _vm._v(" - "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/API/FileList",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("FileList")]), _vm._v(": an array-like container of "), _c('a', {
    attrs: {
      "href": "https://developer.mozilla.org/en-US/docs/Web/API/File",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("File")]), _vm._v(" objects representing the selected files")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("event")]), _vm._v(" - Event: the original change event")])]), _vm._v(" "), _c('p', [_vm._v("The file objects can be used to generage a client-side preview of the selected files. See the "), _c('b', [_vm._v("With image preview")]), _vm._v(" section above for an example.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiFileupload is a file upload button which wraps the native "), _c('code', [_vm._v("input[type=\"file\"]")]), _vm._v(" element. Like "), _c('a', {
    attrs: {
      "href": "#/ui-button"
    }
  }, [_vm._v("UiButton")]), _vm._v(", it allows for customizing the type, color, size and icon of the button.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiFileupload.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("The following fileupload accepts only files with MIME type "), _c('code', [_vm._v("image/*")]), _vm._v(".")])
}]}

/***/ }),
/* 298 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-checkbox-group",
    class: _vm.classes
  }, [(_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-checkbox-group__label-text"
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-checkbox-group__checkboxes"
  }, _vm._l((_vm.options), function(option, index) {
    return _c('ui-checkbox', {
      key: option[_vm.keys.id],
      staticClass: "ui-checkbox-group__checkbox",
      class: option[_vm.keys.class],
      attrs: {
        "box-position": _vm.boxPosition,
        "checked": _vm.isOptionCheckedByDefault(option),
        "color": _vm.color,
        "disabled": _vm.disabled || option[_vm.keys.disabled],
        "id": option[_vm.keys.id],
        "name": _vm.name || option[_vm.keys.name]
      },
      on: {
        "blur": _vm.onBlur,
        "change": function($event) {
          _vm.onChange(arguments, option)
        },
        "focus": _vm.onFocus
      },
      model: {
        value: (_vm.checkboxValues[index]),
        callback: function($$v) {
          _vm.$set(_vm.checkboxValues, index, $$v)
        },
        expression: "checkboxValues[index]"
      }
    }, [_vm._v(_vm._s(option[_vm.keys.label] || option))])
  })), _vm._v(" "), (_vm.hasFeedback) ? _c('div', {
    staticClass: "ui-checkbox-group__feedback"
  }, [(_vm.showError) ? _c('div', {
    staticClass: "ui-checkbox-group__feedback-text"
  }, [_vm._t("error", [_vm._v(_vm._s(_vm.error))])], 2) : (_vm.showHelp) ? _c('div', {
    staticClass: "ui-checkbox-group__feedback-text"
  }, [_vm._t("help", [_vm._v(_vm._s(_vm.help))])], 2) : _vm._e()]) : _vm._e()])
},staticRenderFns: []}

/***/ }),
/* 299 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-card",
    class: _vm.classes
  }, [_vm._t("breadcrumbs"), _vm._v(" "), _vm._t("content")], 2)
},staticRenderFns: []}

/***/ }),
/* 300 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-menu"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiMenu")]), _vm._v(" "), _c('p', [_vm._v("UiMenu shows a menu of options. Options can show an icon, secondary text (like keyboard shortcuts), or show a divider. Individual options can be disabled.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('p', [_vm._v("UiMenu is keyboard accessible and is can be set to contain tab focus in the menu until it is closed.")]), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('ui-menu', {
    attrs: {
      "options": _vm.menuOptions
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-menu', {
    attrs: {
      "options": _vm.menuOptions,
      "raised": ""
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icons")]), _vm._v(" "), _c('ui-menu', {
    attrs: {
      "has-icons": "",
      "options": _vm.menuOptions,
      "raised": ""
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With secondary text")]), _vm._v(" "), _c('ui-menu', {
    attrs: {
      "has-secondary-text": "",
      "options": _vm.menuOptions,
      "raised": ""
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("With icons and secondary text")]), _vm._v(" "), _c('ui-menu', {
    attrs: {
      "has-icons": "",
      "has-secondary-text": "",
      "options": _vm.menuOptions,
      "raised": ""
    }
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Custom template")]), _vm._v(" "), _c('ui-menu', {
    attrs: {
      "has-icons": "",
      "has-secondary-text": "",
      "options": _vm.menuOptions,
      "raised": ""
    },
    scopedSlots: _vm._u([{
      key: "option",
      fn: function(props) {
        return [_c('code', [_vm._v("Label: " + _vm._s(props.option.label) + ", Icon: " + _vm._s(props.option.icon))])]
      }
    }])
  }), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("In UiPopover (creates a dropdown)")]), _vm._v(" "), _c('a', {
    ref: "dropdownTrigger",
    staticClass: "popover-trigger",
    attrs: {
      "tabindex": "0"
    }
  }, [_vm._v("Click here for the menu")]), _vm._v(" "), _c('ui-popover', {
    ref: "dropdown",
    attrs: {
      "trigger": "dropdownTrigger"
    }
  }, [_c('ui-menu', {
    attrs: {
      "contain-focus": "",
      "has-icons": "",
      "has-secondary-text": "",
      "options": _vm.menuOptions
    },
    on: {
      "close": function($event) {
        _vm.$refs.dropdown.close()
      }
    }
  })], 1)], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("options *")]), _vm._v(" "), _c('td', [_vm._v("Array")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("[]")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("An array of options to show in the menu. Can be a plain array or an array of objects.")]), _vm._v(" "), _c('p', [_vm._v("For an array of objects, each option can have the following properties:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("type")]), _vm._v(": (String) - the type of option. Can be set to "), _c('code', [_vm._v("\"divider\"")]), _vm._v(" for a divider.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("label")]), _vm._v(": (String) - the option label text")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("secondaryText")]), _vm._v(": (String) - text to show to the right of the option in the dropdown. Can be used to show keyboard shortcuts.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("icon")]), _vm._v(": (String) - an icon to show with the option. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("iconProps")]), _vm._v(": (String) - an object with any of the following props of "), _c('a', {
    attrs: {
      "href": "#/ui-icon"
    }
  }, [_vm._v("UiIcon")]), _vm._v(": "), _c('code', [_vm._v("iconSet")]), _vm._v(", "), _c('code', [_vm._v("removeText")]), _vm._v(" or "), _c('code', [_vm._v("useSvg")]), _vm._v(". These will be passed as props to the rendered UiIcon component.")]), _vm._v(" "), _c('li', [_c('code', [_vm._v("disabled")]), _vm._v(": (Boolean) - Whether or not the option is disabled.")])]), _vm._v(" "), _c('p', [_vm._v("You can redefine these keys to fit your data using the "), _c('code', [_vm._v("keys")]), _vm._v(" prop.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("hasIcons")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the menu options have icons.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show icons.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconProps")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("{}")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("An object with any of the following props of "), _c('a', {
    attrs: {
      "href": "#/ui-icon"
    }
  }, [_vm._v("UiIcon")]), _vm._v(": "), _c('code', [_vm._v("iconSet")]), _vm._v(", "), _c('code', [_vm._v("removeText")]), _vm._v(" or "), _c('code', [_vm._v("useSvg")]), _vm._v(". These will be passed as props to the rendered UiIcon component.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("hasSecondaryText")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the menu options have secondary text.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to show secondary text.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("containFocus")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not tab focus should be contained in the menu.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to contain tab focus in the menu until it's closed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("keys")]), _vm._v(" "), _c('td', [_vm._v("Object")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('pre', {
    staticClass: "language-javascript is-compact"
  }, [_vm._v("{\n  icon: 'icon',\n  type: 'type',\n  label: 'label',\n  secondaryText: 'secondaryText',\n  iconProps: 'iconProps',\n  disabled: 'disabled'\n}")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Allows for redefining the option keys. Only the "), _c('code', [_vm._v("label")]), _vm._v(" key is required.")]), _vm._v(" "), _c('p', [_vm._v("Pass an object with custom keys if your data does not match the default keys.")]), _vm._v(" "), _c('p', [_vm._v("Note that if you redefine one key, you have to define all the others as well.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableRipple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the ripple ink animation is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the ripple ink animation.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("raised")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the menu has a drop shadow.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to add a drop shadow to the menu.")])])])])])]), _vm._v("\n\n                * Required prop\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("select")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when an option is selected from the menu. The handler is called with the option that was selected.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@select")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the menu should be closed (i.e. when an option is selected, when tab focus leaves the menu and "), _c('code', [_vm._v("containFocus")]), _vm._v(" is "), _c('code', [_vm._v("false")]), _vm._v(" or when the ESC key is pressed).")]), _vm._v(" "), _c('p', [_vm._v("You should listen for this event and close the corresponding UiPopover if the menu is contained in a popover.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@close")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("option")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Use this slot to render each menu option with a custom template. The slot is passed the following properties, which will be available through "), _c('code', [_vm._v("scope")]), _vm._v(":")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("option")]), _vm._v(": (Object or String) - the option")])]), _vm._v(" "), _c('p', [_vm._v("For more information, see the "), _c('a', {
    attrs: {
      "href": "https://vuejs.org/v2/guide/components.html#Scoped-Slots"
    }
  }, [_vm._v("Scoped Slots documentation")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("A dropdown menu can be created by wrapping UiMenu in "), _c('a', {
    attrs: {
      "href": "#/ui-popover"
    }
  }, [_vm._v("UiPopover")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n            Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiMenu.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 301 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-tooltip"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiTooltip")]), _vm._v(" "), _c('p', [_vm._v("UiTooltip shows a tooltip on an element. The tooltip position relative to the associated element and the event that causes the tooltip to open can be customized.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('div', {
    staticClass: "page__demo-group page__demo-group--the-simpsons"
  }, _vm._l((_vm.theSimpsons), function(simpson) {
    return _c('image-pane', {
      attrs: {
        "tabindex": "0",
        "image": simpson.image,
        "name": simpson.name,
        "tooltip-position": simpson.position
      }
    })
  }))]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("trigger *")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_vm._v("required")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The string key of an element in the parent's "), _c('code', [_vm._v("$refs")]), _vm._v(" object.")]), _vm._v(" "), _c('p', [_vm._v("The tooltip event listeners will be attached to this element, and when any of the "), _c('code', [_vm._v("openOn")]), _vm._v(" events are triggered, a tooltip will be shown next to the element.")]), _vm._v(" "), _c('p', [_vm._v("By default, when the element is hovered or focused, the tooltip is shown.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("position")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"bottom center\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the tooltip relative to the trigger.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("top left")]), _vm._v(", "), _c('code', [_vm._v("left top")]), _vm._v(", "), _c('code', [_vm._v("left middle")]), _vm._v(", "), _c('code', [_vm._v("left bottom")]), _vm._v(", "), _c('code', [_vm._v("bottom left")]), _vm._v(", "), _c('code', [_vm._v("bottom center")]), _vm._v(", "), _c('code', [_vm._v("bottom right")]), _vm._v(", "), _c('code', [_vm._v("right bottom")]), _vm._v(", "), _c('code', [_vm._v("right middle")]), _vm._v(", "), _c('code', [_vm._v("right top")]), _vm._v(", "), _c('code', [_vm._v("top right")]), _vm._v(", or "), _c('code', [_vm._v("top center")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("openOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"hover focus\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event or events that will cause the tooltip to open.")]), _vm._v(" "), _c('p', [_vm._v("One or more of "), _c('code', [_vm._v("click")]), _vm._v(", "), _c('code', [_vm._v("hover")]), _vm._v(", or "), _c('code', [_vm._v("focus")]), _vm._v(". Separate multiple events with a space.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("openDelay")]), _vm._v(" "), _c('td', [_vm._v("Number")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("0")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The amount of time to wait (in milliseconds) before showing the tooltip when it is triggered.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the tooltip content (should be text-only).")])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiTooltip is used internally by "), _c('a', {
    attrs: {
      "href": "#/ui-icon-button-docs"
    }
  }, [_vm._v("UiIconButton")]), _vm._v(" and "), _c('a', {
    attrs: {
      "href": "#/ui-fab-docs"
    }
  }, [_vm._v("UiFab")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiTooltip.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 302 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-collapsible"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiCollapsible")]), _vm._v(" "), _c('p', [_vm._v("UiCollapsible shows collapsible content. It includes a header and a body and can be initially opened or closed (defaults to closed).")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('div', {
    staticClass: "page__demo"
  }, [_c('ui-collapsible', {
    attrs: {
      "title": "This is open initially",
      "open": ""
    }
  }, [_vm._v("\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur nemo suscipit ipsa molestias, tempora dolor natus modi et incidunt tenetur!\n        ")]), _vm._v(" "), _c('ui-collapsible', {
    attrs: {
      "title": "Longer body content"
    }
  }, [_c('b', [_vm._v("Howdy!")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorem dolore, numquam inventore esse consequatur doloribus pariatur accusantium voluptatum veritatis soluta corrupti impedit, asperiores accusamus! Ullam perferendis, ipsum officia consequatur quam! Sapiente nisi quam voluptates ipsam consequatur autem culpa repudiandae dignissimos.")]), _vm._v(" "), _c('a', {
    attrs: {
      "tabindex": "0"
    }
  }, [_vm._v("A link here")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorem dolore, numquam inventore esse consequatur doloribus pariatur accusantium voluptatum veritatis soluta corrupti impedit, asperiores accusamus! Ullam perferendis, ipsum officia consequatur quam! Sapiente nisi quam voluptates ipsam consequatur autem culpa repudiandae dignissimos.")])]), _vm._v(" "), _c('ui-collapsible', [_c('div', {
    slot: "header"
  }, [_vm._v("\n                HTML "), _c('b', [_vm._v("supported")]), _vm._v(" in header\n            ")]), _vm._v("\n\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur nemo suscipit ipsa molestias, tempora dolor natus modi et incidunt tenetur!\n        ")]), _vm._v(" "), _c('ui-collapsible', [_c('div', {
    slot: "header"
  }, [_vm._v("\n                Multiline header: Lorem ipsum dolor sit amet, consectetur adipisicing elit. Id cupiditate, nihil magni accusantium. Suscipit natus provident ab vitae, ad tenetur.\n            ")]), _vm._v("\n\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur nemo suscipit ipsa molestias, tempora dolor natus modi et incidunt tenetur!\n        ")]), _vm._v(" "), _c('ui-collapsible', {
    attrs: {
      "title": "This collapsible is disabled",
      "disabled": ""
    }
  }, [_vm._v("\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur nemo suscipit ipsa molestias, tempora dolor natus modi et incidunt tenetur!\n        ")]), _vm._v(" "), _c('ui-collapsible', {
    attrs: {
      "title": "The header icon can be removed",
      "remove-icon": ""
    }
  }, [_vm._v("\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur nemo suscipit ipsa molestias, tempora dolor natus modi et incidunt tenetur!\n        ")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("open")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether the collapsible is open or closed.")]), _vm._v(" "), _c('p', [_vm._v("Changing this value will open/close the collapsible.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("title")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The collapsible title (text only). For HTML, use the header slot.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("removeIcon")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the header icon is removed.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to remove the icon.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableRipple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the ripple ink animation on the collapsible header is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the ripple ink animation.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the collapsible is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the collapsible.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the collapsible content and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("header")]), _vm._v(" "), _c('td', [_vm._v("Holds the the collapsible header and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the collapsible is opened. You should listen for this event and update the "), _c('code', [_vm._v("open")]), _vm._v(" prop to "), _c('code', [_vm._v("true")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the collapsible is closed. You should listen for this event and update the "), _c('code', [_vm._v("open")]), _vm._v(" prop to "), _c('code', [_vm._v("false")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@close")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("refreshHeight()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("UiCollapsible keeps track of its content height internally to use for the open/close transition.")]), _vm._v(" "), _c('p', [_vm._v("Trigger this event to update the collapsible's height when its width or body content has changed since it was last opened.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("Both the header and body are fully customizable (using "), _c('code', [_vm._v("slots")]), _vm._v("). UiCollapsible is keyboard accessible and it supports a disabled state.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiCollapsible doesn't support accordion sets (i.e. closing other collapsibles when one is opened). You can achieve that effect by listening for "), _c('code', [_vm._v("@open")]), _vm._v(" and "), _c('code', [_vm._v("@close")]), _vm._v(" on each collapsible in the set and then adjusting their "), _c('code', [_vm._v("open")]), _vm._v(" prop accordingly.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiCollapsible.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 303 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.show && _vm.isActive),
      expression: "show && isActive"
    }],
    staticClass: "ui-tab",
    attrs: {
      "role": "tabpanel",
      "aria-hidden": !_vm.isActive ? 'true' : null,
      "id": _vm.id,
      "tabindex": _vm.isActive ? '0' : null
    }
  }, [_c('div', {
    staticStyle: {
      "display": "none"
    }
  }, [_vm._t("icon")], 2), _vm._v(" "), _vm._t("default")], 2)
},staticRenderFns: []}

/***/ }),
/* 304 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-icon"
  }, [_c('h1', {
    staticClass: "page__title"
  }, [_vm._v("UiIcon")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("Using Material Icons (default)")]), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _vm._m(3), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("Using another icon set")]), _vm._v(" "), _vm._m(4), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("Using SVG: inline")]), _vm._v(" "), _vm._m(5), _vm._v(" "), _vm._m(6), _vm._v(" "), _vm._m(7), _vm._v(" "), _vm._m(8), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Default: icon font")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo is-boxed"
  }, [_c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-icon', [_vm._v("folder_open")]), _vm._v(" "), _c('ui-icon', [_vm._v("home")]), _vm._v(" "), _c('ui-icon', [_vm._v("info_outline")]), _vm._v(" "), _c('ui-icon', [_vm._v("watch_later")]), _vm._v(" "), _c('ui-icon', [_vm._v("mail_outline")]), _vm._v(" "), _c('ui-icon', [_vm._v("pin_drop")]), _vm._v(" "), _c('ui-icon', [_vm._v("favorite_border")]), _vm._v(" "), _c('ui-icon', [_vm._v("maps")])], 1), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group has-large-icons"
  }, [_c('ui-icon', {
    attrs: {
      "icon": "watch"
    }
  }), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "rss_feed"
    }
  }), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "account_circle"
    }
  }), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "play_circle_outline"
    }
  }), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "drafts"
    }
  }), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "attach_file"
    }
  }), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "save"
    }
  }), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "event"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group is-inline"
  }, [_c('p', [_vm._v("Icons can also be inlined with text: "), _c('ui-icon', [_vm._v("account_circle")]), _vm._v(" My Account.")], 1)])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("SVG: inline")]), _vm._v(" "), _c('ui-icon', [_c('svg', {
    attrs: {
      "version": "1.1",
      "xmlns": "http://www.w3.org/2000/svg",
      "xmlns:xlink": "http://www.w3.org/1999/xlink",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M17.016 6.984c2.766 0 4.969 2.25 4.969 5.016s-2.203 5.016-4.969 5.016h-4.031v-1.922h4.031c1.688 0 3.094-1.406 3.094-3.094s-1.406-3.094-3.094-3.094h-4.031v-1.922h4.031zM8.016 12.984v-1.969h7.969v1.969h-7.969zM3.891 12c0 1.688 1.406 3.094 3.094 3.094h4.031v1.922h-4.031c-2.766 0-4.969-2.25-4.969-5.016s2.203-5.016 4.969-5.016h4.031v1.922h-4.031c-1.688 0-3.094 1.406-3.094 3.094z"
    }
  })])]), _vm._v(" "), _vm._m(9), _vm._v(" "), _c('div', {
    staticStyle: {
      "display": "none"
    }
  }, [_c('svg', {
    staticStyle: {
      "position": "absolute",
      "width": "0",
      "height": "0",
      "overflow": "hidden"
    },
    attrs: {
      "version": "1.1",
      "xmlns": "http://www.w3.org/2000/svg",
      "xmlns:xlink": "http://www.w3.org/1999/xlink"
    }
  }, [_c('defs', [_c('symbol', {
    attrs: {
      "id": "icon-link",
      "viewBox": "0 0 24 24"
    }
  }, [_c('title', [_vm._v("link")]), _vm._v(" "), _c('path', {
    staticClass: "path1",
    attrs: {
      "d": "M17.016 6.984c2.766 0 4.969 2.25 4.969 5.016s-2.203 5.016-4.969 5.016h-4.031v-1.922h4.031c1.688 0 3.094-1.406 3.094-3.094s-1.406-3.094-3.094-3.094h-4.031v-1.922h4.031zM8.016 12.984v-1.969h7.969v1.969h-7.969zM3.891 12c0 1.688 1.406 3.094 3.094 3.094h4.031v1.922h-4.031c-2.766 0-4.969-2.25-4.969-5.016s2.203-5.016 4.969-5.016h4.031v1.922h-4.031c-1.688 0-3.094 1.406-3.094 3.094z"
    }
  })])])])]), _vm._v(" "), _c('ui-icon', {
    attrs: {
      "icon": "icon-link",
      "use-svg": ""
    }
  })], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("ariaLabel")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The icon's ARIA label (important for accessibility, but should not be added for purely decorative icons).")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The icon name (when using an icon font) or the symbol id (when "), _c('code', [_vm._v("useSvg")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(").")]), _vm._v(" "), _c('p', [_vm._v("By default this can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Required when using an icon font or "), _c('code', [_vm._v("useSvg")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconSet")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"material-icons\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The icon set, applied as a class on the icon root element.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("removeText")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not to remove the icon element's inner text. Set to "), _c('code', [_vm._v("true")]), _vm._v(" to remove the inner text.")]), _vm._v(" "), _c('p', [_vm._v("The "), _c('code', [_vm._v("icon")]), _vm._v(" prop is set as the inner text by default because Material Icons use ligatures for rendering the icon glyph.")]), _vm._v(" "), _c('p', [_vm._v("When "), _c('code', [_vm._v("useSvg")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", the inner text is removed regardless of the value of "), _c('code', [_vm._v("removeText")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("useSvg")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not to use an SVG "), _c('code', [_vm._v("use")]), _vm._v(" tag for rendering the icon.")]), _vm._v(" "), _c('p', [_vm._v("See the "), _c('b', [_vm._v("Using SVG: "), _c('code', [_vm._v("<use>")])]), _vm._v(" section above for details.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the name of the icon when using an icon font. Can also hold SVG for a custom icon.")])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiIcon shows an icon glyph. Icons are "), _c('code', [_vm._v("24px")]), _vm._v(" by "), _c('code', [_vm._v("24px")]), _vm._v(" (relative to a root font size of 16px), but the size can be changed by overriding the CSS "), _c('code', [_vm._v("font-size")]), _vm._v(" property of "), _c('code', [_vm._v(".ui-icon")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("By default UiIcon uses icons from the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(" web font, which must be loaded for icons to display properly. The simplest way to do this is by adding the Google Web font to the head of your page:")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('pre', [_c('code', {
    staticClass: "language-html"
  }, [_vm._v("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("See the "), _c('a', {
    attrs: {
      "href": "http://google.github.io/material-design-icons",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons Guide")]), _vm._v(" for more options on including the font.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("To use another icon set, use the "), _c('code', [_vm._v("iconSet")]), _vm._v(" and the "), _c('code', [_vm._v("icon")]), _vm._v(" props (both are applied as classes on the icon root element). Then, if the icon font doesn't support ligatures, set the "), _c('code', [_vm._v("removeText")]), _vm._v(" prop to "), _c('code', [_vm._v("true")]), _vm._v(" to remove the inner text.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("To use SVG icons inline, simply paste your SVG data into the "), _c('code', [_vm._v("<ui-icon>")]), _vm._v(" tag. The SVG icon will inherit the color and size defined on "), _c('code', [_vm._v(".ui-icon")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("Using SVG: "), _c('code', [_vm._v("<use>")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("If you are using an SVG sprite, set "), _c('code', [_vm._v("useSvg")]), _vm._v(" to "), _c('code', [_vm._v("true")]), _vm._v(" and set the "), _c('code', [_vm._v("icon")]), _vm._v(" prop to the icon symbol's "), _c('code', [_vm._v("id")]), _vm._v(" in your sprite. This will render the correct "), _c('code', [_vm._v("<svg>")]), _vm._v(" and "), _c('code', [_vm._v("<use>")]), _vm._v(" tags referencing the icon.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiIcon.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("SVG: "), _c('code', [_vm._v("useSvg")]), _vm._v(" and "), _c('code', [_vm._v("icon")])])
}]}

/***/ }),
/* 305 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-switch"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiSwitch")]), _vm._v(" "), _c('p', [_vm._v("UiSwitch shows a switch that allows the user to toggle between two states. It supports keyboard focus and a disabled state.\n\n    ")]), _c('p', [_vm._v("The position of the switch relative to the label can be customized.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-switch', {
    model: {
      value: (_vm.switch1),
      callback: function($$v) {
        _vm.switch1 = $$v
      },
      expression: "switch1"
    }
  }, [_vm._v("Bluetooth")]), _vm._v(" "), _c('ui-switch', {
    model: {
      value: (_vm.switch2),
      callback: function($$v) {
        _vm.switch2 = $$v
      },
      expression: "switch2"
    }
  }, [_vm._v("WiFi")]), _vm._v(" "), _c('ui-switch', {
    model: {
      value: (_vm.switch3),
      callback: function($$v) {
        _vm.switch3 = $$v
      },
      expression: "switch3"
    }
  }, [_vm._v("Location")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "disabled": ""
    },
    model: {
      value: (_vm.switch4),
      callback: function($$v) {
        _vm.switch4 = $$v
      },
      expression: "switch4"
    }
  }, [_vm._v("Can't change this")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "disabled": ""
    },
    model: {
      value: (_vm.switch5),
      callback: function($$v) {
        _vm.switch5 = $$v
      },
      expression: "switch5"
    }
  }, [_vm._v("Can't change this too")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Color: accent")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-switch', {
    attrs: {
      "color": "accent"
    },
    model: {
      value: (_vm.switch1),
      callback: function($$v) {
        _vm.switch1 = $$v
      },
      expression: "switch1"
    }
  }, [_vm._v("Bluetooth")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "color": "accent"
    },
    model: {
      value: (_vm.switch2),
      callback: function($$v) {
        _vm.switch2 = $$v
      },
      expression: "switch2"
    }
  }, [_vm._v("WiFi")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "color": "accent"
    },
    model: {
      value: (_vm.switch3),
      callback: function($$v) {
        _vm.switch3 = $$v
      },
      expression: "switch3"
    }
  }, [_vm._v("Location")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "color": "accent",
      "disabled": ""
    },
    model: {
      value: (_vm.switch4),
      callback: function($$v) {
        _vm.switch4 = $$v
      },
      expression: "switch4"
    }
  }, [_vm._v("Can't change this")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "color": "accent",
      "disabled": ""
    },
    model: {
      value: (_vm.switch5),
      callback: function($$v) {
        _vm.switch5 = $$v
      },
      expression: "switch5"
    }
  }, [_vm._v("Can't change this too")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Switch position: right")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group has-switch-right"
  }, [_c('ui-switch', {
    attrs: {
      "switch-position": "right"
    },
    model: {
      value: (_vm.switch1),
      callback: function($$v) {
        _vm.switch1 = $$v
      },
      expression: "switch1"
    }
  }, [_vm._v("Bluetooth")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "switch-position": "right"
    },
    model: {
      value: (_vm.switch2),
      callback: function($$v) {
        _vm.switch2 = $$v
      },
      expression: "switch2"
    }
  }, [_vm._v("WiFi")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "switch-position": "right"
    },
    model: {
      value: (_vm.switch3),
      callback: function($$v) {
        _vm.switch3 = $$v
      },
      expression: "switch3"
    }
  }, [_vm._v("Location")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "switch-position": "right",
      "disabled": ""
    },
    model: {
      value: (_vm.switch4),
      callback: function($$v) {
        _vm.switch4 = $$v
      },
      expression: "switch4"
    }
  }, [_vm._v("Can't change this")]), _vm._v(" "), _c('ui-switch', {
    attrs: {
      "switch-position": "right",
      "disabled": ""
    },
    model: {
      value: (_vm.switch5),
      callback: function($$v) {
        _vm.switch5 = $$v
      },
      expression: "switch5"
    }
  }, [_vm._v("Can't change this too")])], 1)]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("name")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The "), _c('code', [_vm._v("name")]), _vm._v(" attribute of the switch input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("label")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The switch label (text only). For HTML, use the "), _c('code', [_vm._v("default")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("value, v-model *")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The model that the switch value syncs to.")]), _vm._v(" "), _c('p', [_vm._v("The "), _c('code', [_vm._v("trueValue")]), _vm._v(" prop will be written to this model when the switch is turned on and the "), _c('code', [_vm._v("falseValue")]), _vm._v(" prop will be written to it when the switch is turned off.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for the "), _c('code', [_vm._v("input")]), _vm._v(" event and update "), _c('code', [_vm._v("value")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("checked")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the switch is on by default.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("trueValue")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_vm._v("The value that will be written to the model when the switch is turned on.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("falseValue")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("The value that will be written to the model when the switch is turned off.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("submittedValue")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"on\"")])]), _vm._v(" "), _c('td', [_vm._v("The value that will be submitted for the switch when it is turned on. Applied as the "), _c('code', [_vm._v("value")]), _vm._v(" attribute of the switch's input element.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("color")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_vm._v("The color of the switch when turned on. One of "), _c('code', [_vm._v("primary")]), _vm._v(" or "), _c('code', [_vm._v("accent")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("switchPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the switch relative to the label.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("left")]), _vm._v(" or "), _c('code', [_vm._v("right")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the switch is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the switch.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the switch label and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("focus")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the switch is focused.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@focus")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("blur")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the switch loses focus.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@blur")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("input")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the switch value is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("If you are not using "), _c('code', [_vm._v("v-model")]), _vm._v(", you should listen for this event and update the "), _c('code', [_vm._v("value")]), _vm._v(" prop.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@input")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the value of the switch is changed. The handler is called with the new value.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@change")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiSwitch.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 306 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('label', {
    ref: "label",
    staticClass: "ui-fileupload",
    class: _vm.classes
  }, [_c('input', {
    ref: "input",
    staticClass: "ui-fileupload__input",
    attrs: {
      "type": "file",
      "accept": _vm.accept,
      "disabled": _vm.disabled,
      "multiple": _vm.multiple,
      "name": _vm.name,
      "required": _vm.required
    },
    on: {
      "blur": _vm.onBlur,
      "change": _vm.onChange,
      "focus": _vm.onFocus
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "ui-fileupload__content"
  }, [_c('div', {
    staticClass: "ui-fileupload__icon"
  }, [_vm._t("icon", [_c('ui-icon', [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "width": "24",
      "height": "24",
      "viewBox": "0 0 24 24"
    }
  }, [_c('path', {
    attrs: {
      "d": "M5.016 18h13.969v2.016H5.016V18zM9 15.984v-6H5.016L12 3l6.984 6.984H15v6H9z"
    }
  })])])])], 2), _vm._v(" "), (_vm.hasSelection) ? _c('span', {
    staticClass: "ui-fileupload__display-text"
  }, [_vm._v(_vm._s(_vm.displayText))]) : _vm._t("default", [_vm._v(_vm._s(_vm.placeholder))])], 2), _vm._v(" "), _c('div', {
    staticClass: "ui-fileupload__focus-ring",
    style: (_vm.focusRingStyle)
  }), _vm._v(" "), (!_vm.disableRipple && !_vm.disabled) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "label"
    }
  }) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 307 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('button', {
    ref: "button",
    staticClass: "ui-icon-button",
    class: _vm.classes,
    attrs: {
      "aria-label": _vm.ariaLabel || _vm.tooltip,
      "disabled": _vm.disabled || _vm.loading,
      "type": _vm.buttonType
    },
    on: {
      "click": _vm.onClick
    }
  }, [(_vm.icon || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-icon-button__icon"
  }, [_vm._t("default", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-icon-button__focus-ring"
  }), _vm._v(" "), _c('ui-progress-circular', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    staticClass: "ui-icon-button__progress",
    attrs: {
      "color": _vm.progressColor,
      "size": _vm.size === 'large' ? 24 : 18,
      "stroke": 4.5
    }
  }), _vm._v(" "), (!_vm.disableRipple && !_vm.disabled) ? _c('ui-ripple-ink', {
    attrs: {
      "trigger": "button"
    }
  }) : _vm._e(), _vm._v(" "), (_vm.hasDropdown) ? _c('ui-popover', {
    ref: "dropdown",
    attrs: {
      "trigger": "button",
      "dropdown-position": _vm.dropdownPosition,
      "open-on": _vm.openDropdownOn
    },
    on: {
      "close": _vm.onDropdownClose,
      "open": _vm.onDropdownOpen
    }
  }, [_vm._t("dropdown")], 2) : _vm._e(), _vm._v(" "), (_vm.tooltip) ? _c('ui-tooltip', {
    attrs: {
      "trigger": "button",
      "open-on": _vm.openTooltipOn,
      "position": _vm.tooltipPosition
    }
  }, [_vm._v(_vm._s(_vm.tooltip))]) : _vm._e()], 1)
},staticRenderFns: []}

/***/ }),
/* 308 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-textbox",
    class: _vm.classes
  }, [(_vm.icon || _vm.$slots.icon) ? _c('div', {
    staticClass: "ui-textbox__icon-wrapper"
  }, [_vm._t("icon", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "ui-textbox__content"
  }, [_c('label', {
    staticClass: "ui-textbox__label"
  }, [(_vm.label || _vm.$slots.default) ? _c('div', {
    staticClass: "ui-textbox__label-text",
    class: _vm.labelClasses
  }, [_vm._t("default", [_vm._v(_vm._s(_vm.label))])], 2) : _vm._e(), _vm._v(" "), (!_vm.multiLine) ? _c('input', {
    directives: [{
      name: "autofocus",
      rawName: "v-autofocus",
      value: (_vm.autofocus),
      expression: "autofocus"
    }],
    ref: "input",
    staticClass: "ui-textbox__input",
    attrs: {
      "autocomplete": _vm.autocomplete ? _vm.autocomplete : null,
      "disabled": _vm.disabled,
      "max": _vm.maxValue,
      "maxlength": _vm.enforceMaxlength ? _vm.maxlength : null,
      "min": _vm.minValue,
      "name": _vm.name,
      "number": _vm.type === 'number' ? true : null,
      "placeholder": _vm.hasFloatingLabel ? null : _vm.placeholder,
      "readonly": _vm.readonly,
      "required": _vm.required,
      "step": _vm.stepValue,
      "type": _vm.type
    },
    domProps: {
      "value": _vm.value
    },
    on: {
      "blur": _vm.onBlur,
      "change": _vm.onChange,
      "focus": _vm.onFocus,
      "input": function($event) {
        _vm.updateValue($event.target.value)
      },
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        _vm.onKeydownEnter($event)
      }, _vm.onKeydown]
    }
  }) : _c('textarea', {
    directives: [{
      name: "autofocus",
      rawName: "v-autofocus",
      value: (_vm.autofocus),
      expression: "autofocus"
    }],
    ref: "textarea",
    staticClass: "ui-textbox__textarea",
    attrs: {
      "autocomplete": _vm.autocomplete ? _vm.autocomplete : null,
      "disabled": _vm.disabled,
      "maxlength": _vm.enforceMaxlength ? _vm.maxlength : null,
      "name": _vm.name,
      "placeholder": _vm.hasFloatingLabel ? null : _vm.placeholder,
      "readonly": _vm.readonly,
      "required": _vm.required,
      "rows": _vm.rows
    },
    domProps: {
      "value": _vm.value
    },
    on: {
      "blur": _vm.onBlur,
      "change": _vm.onChange,
      "focus": _vm.onFocus,
      "input": function($event) {
        _vm.updateValue($event.target.value)
      },
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        _vm.onKeydownEnter($event)
      }, _vm.onKeydown]
    }
  }, [_vm._v(_vm._s(_vm.value))])]), _vm._v(" "), (_vm.hasFeedback || _vm.maxlength) ? _c('div', {
    staticClass: "ui-textbox__feedback"
  }, [(_vm.showError) ? _c('div', {
    staticClass: "ui-textbox__feedback-text"
  }, [_vm._t("error", [_vm._v(_vm._s(_vm.error))])], 2) : (_vm.showHelp) ? _c('div', {
    staticClass: "ui-textbox__feedback-text"
  }, [_vm._t("help", [_vm._v(_vm._s(_vm.help))])], 2) : _vm._e(), _vm._v(" "), (_vm.maxlength) ? _c('div', {
    staticClass: "ui-textbox__counter"
  }, [_vm._v("\n                " + _vm._s(_vm.value.length + '/' + _vm.maxlength) + "\n            ")]) : _vm._e()]) : _vm._e()])])
},staticRenderFns: []}

/***/ }),
/* 309 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-tabs"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiTabs")]), _vm._v(" "), _c('p', [_vm._v("The UiTabs and UiTab components are used together to create a tab container with one or more tabs. UiTab should only be used as a direct child of UiTabs.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('p', [_vm._v("UiTabs and UiTab include the recommended ARIA attributes for accessibility and can be navigated with the keyboard.")]), _vm._v(" "), _vm._m(3), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: text")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "text"
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Books"
    }
  }, [_vm._v("\n                My books "), _c('a', {
    attrs: {
      "href": "https://google.com",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Hey")])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Favourites"
    }
  }, [_vm._v("\n                My favourites\n            ")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: text, fullwidth")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "fullwidth": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Favourites"
    }
  }, [_vm._v("\n                My favourites\n            ")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: icon")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon"
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: icon, fullwidth")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon",
      "fullwidth": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: icon-and-text")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon-and-text"
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Type: icon-and-text, fullwidth")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon-and-text",
      "fullwidth": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Raised")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon-and-text",
      "fullwidth": "",
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Background: primary")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "background-color": "primary",
      "fullwidth": "",
      "indicator-color": "white",
      "text-color-active": "white",
      "text-color": "white",
      "type": "icon-and-text"
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Background: accent")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "background-color": "accent",
      "fullwidth": "",
      "indicator-color": "white",
      "text-color-active": "white",
      "text-color": "white",
      "type": "icon-and-text"
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Default selected tab: Collections")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon-and-text",
      "fullwidth": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections",
      "selected": ""
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Change active tab")]), _vm._v(" "), _c('ui-tabs', {
    ref: "tabSet1",
    attrs: {
      "type": "icon-and-text",
      "fullwidth": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites",
      "id": "favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('ui-button', {
    on: {
      "click": _vm.selectFavouritesTab
    }
  }, [_vm._v("Select Favourites tab")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Hide/show a tab")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon-and-text",
      "fullwidth": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors"
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections",
      "show": _vm.showCollectionsTab
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('ui-button', {
    on: {
      "click": _vm.toggleCollectionsTab
    }
  }, [_vm._v("Toggle Collections tab")]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Disable individual tab")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "type": "icon-and-text",
      "fullwidth": "",
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "icon": "book",
      "title": "Books"
    }
  }, [_vm._v("\n                My books\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "person",
      "title": "Authors",
      "disabled": _vm.disableAuthorsTab
    }
  }, [_vm._v("\n                Authors\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "collections_bookmark",
      "title": "Collections"
    }
  }, [_vm._v("\n                My collections\n            ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "icon": "favorite",
      "title": "Favourites"
    }
  }, [_c('b', [_vm._v("Favourite with longer content")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Beatae dolorum laudantium nulla ex asperiores, deserunt quidem perspiciatis eligendi, dolores repudiandae.")]), _vm._v(" "), _c('p', [_vm._v("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perferendis hic, aspernatur placeat eligendi delectus laudantium omnis nam consequatur aperiam numquam!")])])], 1), _vm._v(" "), _c('ui-button', {
    on: {
      "click": _vm.toggleAuthorsTab
    }
  }, [_vm._v("Toggle Authors tab")])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API: UiTabs")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"text\"")])]), _vm._v(" "), _c('td', [_vm._v("The type of tabs. One of "), _c('code', [_vm._v("text")]), _vm._v(", "), _c('code', [_vm._v("icon")]), _vm._v(" or "), _c('code', [_vm._v("icon-and-text")]), _vm._v(".")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("backgroundColor")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"default\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The background color of the tab headers.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("default")]), _vm._v(", "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(" or "), _c('code', [_vm._v("clear")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("textColor")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"black\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The text and icon color of the unselected tab headers.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("black")]), _vm._v(" or "), _c('code', [_vm._v("white")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("textColorActive")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The text and icon color of the selected tab header.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", or "), _c('code', [_vm._v("white")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("indicatorColor")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The color of the selected tab indicator.")]), _vm._v(" "), _c('p', [_vm._v("One of "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(" or "), _c('code', [_vm._v("white")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("fullwidth")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the tab header items expand to fill the space available.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" for a fullwidth tab header.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("raised")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the tab container has a drop shadow.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to raise the tabs.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disableRipple")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the ripple ink animation is shown when a tab header is clicked.")]), _vm._v(" "), _c('p', [_vm._v("Can be set using the "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/Customization.md#global-config",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("global config")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the ripple ink animation.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the child UiTab components.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("tab-change")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the active tab is changed. Listen for it using "), _c('code', [_vm._v("@tab-change")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("setActiveTab()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to programmatically change the active tab. It accepts the following arguments:")]), _vm._v(" "), _c('ul', [_c('li', [_c('code', [_vm._v("tabId")]), _vm._v(" (required): The id of the tab to select.")])])])]), _vm._v(" "), _c('tr', [_c('td', [_c('code', [_vm._v("refreshIndicator()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to refresh the position of the active tab indicator when the width of the element containing UiTabs changes. This method is called automatically when the window is resized.")])])])])])])])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API: UiTab")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("id")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_vm._v("Auto-generated "), _c('br'), _vm._v(" unique ID")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The tab id. Applied as the "), _c('code', [_vm._v("id")]), _vm._v(" attribute on the tab's root element and used when programmatically changing the active tab.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("title")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_vm._v("The tab title (text only).")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The tab icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("You can set a custom or SVG icon using the "), _c('code', [_vm._v("icon")]), _vm._v(" slot.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("iconProps")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("{}")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("An object with any of the following props of "), _c('a', {
    attrs: {
      "href": "#/ui-icon"
    }
  }, [_vm._v("UiIcon")]), _vm._v(": "), _c('code', [_vm._v("iconSet")]), _vm._v(", "), _c('code', [_vm._v("removeText")]), _vm._v(" or "), _c('code', [_vm._v("useSvg")]), _vm._v(". These will be passed as props to the rendered UiIcon component in the tab header.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("show")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the tab is shown in the list of tabs.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("false")]), _vm._v(" to hide the tab from the list of tabs.")]), _vm._v(" "), _c('p', [_vm._v("If a tab is selected when its "), _c('code', [_vm._v("show")]), _vm._v(" prop is changed to "), _c('code', [_vm._v("false")]), _vm._v(", the nearest available tab is automatically selected.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("selected")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_vm._v("Whether or not the tab is selected by default.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("disabled")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the tab is disabled.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to disable the tab and prevent user interaction.")]), _vm._v(" "), _c('p', [_vm._v("If a tab is selected when its "), _c('code', [_vm._v("disabled")]), _vm._v(" prop is changed to "), _c('code', [_vm._v("true")]), _vm._v(", the nearest available tab is automatically selected.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the tab content and can contain HTML.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("icon")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the tab icon and can contain any custom or SVG icon.")]), _vm._v(" "), _c('p', [_vm._v("There is a known issue with using a Vue component directly for this slot, so components (like UiIcon) should be wrapped in a plain element like "), _c('code', [_vm._v("div")]), _vm._v(" or "), _c('code', [_vm._v("span")]), _vm._v(" with the "), _c('code', [_vm._v("slot=\"icon\"")]), _vm._v(" attribute.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("select")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the tab is selected. The handler is called with the tab's "), _c('code', [_vm._v("id")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@select")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("deselect")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the tab is deselected (i.e. when the user selects another tab). The handler is called with the tab's "), _c('code', [_vm._v("id")]), _vm._v(".")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@deselect")]), _vm._v(".")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiTabs is the tab container and its props is what you use to customize the tab headers. UiTab is a single tab on which you set tab-specific props like "), _c('code', [_vm._v("title")]), _vm._v(", "), _c('code', [_vm._v("icon")]), _vm._v(", etc.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiTabs can be one of three types: "), _c('code', [_vm._v("text")]), _vm._v(" (for text only), "), _c('code', [_vm._v("icon")]), _vm._v(" (for icon only) or "), _c('code', [_vm._v("icon-and-text")]), _vm._v(". The tab headers can be fullwidth or take up only as much space as needed. The tab container can be raised to add a drop shadow.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiTabs header can have any one of four possible background colors: "), _c('code', [_vm._v("default")]), _vm._v(" (gray), "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(" and "), _c('code', [_vm._v("clear")]), _vm._v(". The header text color, header active text color and the active tab indicator color can also be customized.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiTabs.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 310 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-toolbar",
    class: _vm.classes
  }, [_c('div', {
    staticClass: "ui-toolbar__left"
  }, [(!_vm.removeNavIcon) ? _c('div', {
    staticClass: "ui-toolbar__nav-icon"
  }, [_vm._t("icon", [_c('ui-icon-button', {
    attrs: {
      "size": "large",
      "type": "secondary",
      "color": _vm.textColor,
      "icon": _vm.navIcon
    },
    on: {
      "click": _vm.navIconClick
    }
  })])], 2) : _vm._e(), _vm._v(" "), (_vm.brand || _vm.$slots.brand) ? _c('div', {
    staticClass: "ui-toolbar__brand"
  }, [_vm._t("brand", [_c('div', {
    staticClass: "ui-toolbar__brand-text"
  }, [_vm._v(_vm._s(_vm.brand))])])], 2) : _vm._e()]), _vm._v(" "), _c('div', {
    staticClass: "ui-toolbar__body",
    class: {
      'has-brand-divider': _vm.hasBrandDivider
    }
  }, [_vm._t("default", [(_vm.title) ? _c('div', {
    staticClass: "ui-toolbar__title"
  }, [_vm._v(_vm._s(_vm.title))]) : _vm._e()])], 2), _vm._v(" "), _c('div', {
    staticClass: "ui-toolbar__right"
  }, [_vm._t("actions")], 2), _vm._v(" "), _c('ui-progress-linear', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.loading),
      expression: "loading"
    }],
    staticClass: "ui-toolbar__progress",
    attrs: {
      "color": _vm.progressColor
    }
  })], 1)
},staticRenderFns: []}

/***/ }),
/* 311 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-ripple-ink"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiRippleInk")]), _vm._v(" "), _c('p', [_vm._v("UiRippleInk shows a ripple ink animation when the element it is associated with is touched or clicked. The ripple ink color and opacity can be customized.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _vm._m(2), _vm._v(" "), _vm._m(3), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Color: blue")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group page__demo-group--tv-shows page__demo-group--color-blue has-custom-color"
  }, _vm._l((_vm.tvShows), function(show) {
    return _c('image-pane', {
      attrs: {
        "image": show.image
      }
    })
  })), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Color: orange, Opacity: 0.95")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group page__demo-group--the-simpsons page__demo-group--color-orange has-custom-color has-custom-opacity\n        "
  }, _vm._l((_vm.theSimpsons), function(simpson) {
    return _c('image-pane', {
      attrs: {
        "image": simpson.image
      }
    })
  }))]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("trigger *")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The string key of an element in the parent's "), _c('code', [_vm._v("$refs")]), _vm._v(" object.")]), _vm._v(" "), _c('p', [_vm._v("The click/touch event listeners will be attached to this element, and when it is clicked or touched, a ripple ink animation will be shown on the it.")]), _vm._v(" "), _c('p', [_vm._v("Make sure this element is \"positioned\" (i.e. its CSS "), _c('code', [_vm._v("position")]), _vm._v(" property is set to either "), _c('code', [_vm._v("relative")]), _vm._v(" or "), _c('code', [_vm._v("absolute")]), _vm._v(").")])])])])])]), _vm._v("\n\n            * Required prop\n        ")])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("To customize the color, use CSS to set the "), _c('code', [_vm._v("color")]), _vm._v(" property on the containing element (which the ripple ink will inherit as background color) or set the "), _c('code', [_vm._v("background-color")]), _vm._v(" property on "), _c('code', [_vm._v(".ui-ripple-ink__ink")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("To customize the opacity, use CSS to set the "), _c('code', [_vm._v("opacity")]), _vm._v(" property on "), _c('code', [_vm._v(".ui-ripple-ink__ink")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiRippleInk is used internally by many components, including "), _c('a', {
    attrs: {
      "href": "#/ui-button"
    }
  }, [_vm._v("UiButton")]), _vm._v(", "), _c('a', {
    attrs: {
      "href": "#/ui-collapsible"
    }
  }, [_vm._v("UiCollapsible")]), _vm._v(", "), _c('a', {
    attrs: {
      "href": "#/ui-icon-button"
    }
  }, [_vm._v("UiIconButton")]), _vm._v(", "), _c('a', {
    attrs: {
      "href": "#/ui-fab"
    }
  }, [_vm._v("UiFab")]), _vm._v(", "), _c('a', {
    attrs: {
      "href": "#/ui-menu"
    }
  }, [_vm._v("UiMenu")]), _vm._v(", and "), _c('a', {
    attrs: {
      "href": "#/ui-tabs"
    }
  }, [_vm._v("UiTabs")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiRippleInk.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 312 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('transition', {
    attrs: {
      "name": "ui-progress-linear--transition-fade"
    }
  }, [_c('div', {
    staticClass: "ui-progress-linear",
    class: _vm.classes
  }, [(_vm.type === 'determinate') ? _c('div', {
    staticClass: "ui-progress-linear__progress-bar is-determinate",
    style: ({
      'transform': ("scaleX(" + (_vm.moderatedProgress / 100) + ")")
    }),
    attrs: {
      "role": "progressbar",
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": _vm.moderatedProgress
    }
  }) : _c('div', {
    staticClass: "ui-progress-linear__progress-bar is-indeterminate",
    attrs: {
      "role": "progressbar",
      "aria-valuemax": 100,
      "aria-valuemin": 0
    }
  })])])
},staticRenderFns: []}

/***/ }),
/* 313 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-calendar",
    class: _vm.classes
  }, [_c('div', {
    staticClass: "ui-calendar__header"
  }, [_c('div', {
    staticClass: "ui-calendar__header-year",
    class: {
      'is-active': _vm.showYearPicker
    },
    attrs: {
      "tabindex": "0"
    },
    on: {
      "click": function($event) {
        _vm.showYearPicker = true
      },
      "keydown": function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        _vm.showYearPicker = true
      }
    }
  }, [_vm._v(_vm._s(_vm.headerYear))]), _vm._v(" "), _c('div', {
    staticClass: "ui-calendar__header-details",
    class: {
      'is-active': !_vm.showYearPicker
    },
    attrs: {
      "tabindex": "0"
    },
    on: {
      "click": function($event) {
        _vm.showYearPicker = false
      },
      "keydown": function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
        _vm.showYearPicker = false
      }
    }
  }, [_c('span', {
    staticClass: "ui-calendar__header-day"
  }, [_vm._v(_vm._s(_vm.headerDay) + ", ")]), _vm._v(" "), _c('span', {
    staticClass: "ui-calendar__header-date"
  }, [_vm._v(_vm._s(_vm.headerDate))])])]), _vm._v(" "), _c('div', {
    staticClass: "ui-calendar__body"
  }, [_c('ul', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.showYearPicker),
      expression: "showYearPicker"
    }],
    ref: "years",
    staticClass: "ui-calendar__years"
  }, _vm._l((_vm.yearRange), function(year) {
    return (!_vm.isYearOutOfRange(year)) ? _c('li', {
      staticClass: "ui-calendar__year",
      class: _vm.getYearClasses(year),
      attrs: {
        "tabindex": "0"
      },
      on: {
        "click": function($event) {
          _vm.selectYear(year)
        },
        "keydown": function($event) {
          if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
          _vm.selectYear(year)
        }
      }
    }, [_vm._v(_vm._s(year))]) : _vm._e()
  })), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (!_vm.showYearPicker),
      expression: "!showYearPicker"
    }]
  }, [_c('ui-calendar-controls', {
    ref: "controls",
    attrs: {
      "date-in-view": _vm.dateInView,
      "lang": _vm.lang,
      "max-date": _vm.maxDate,
      "min-date": _vm.minDate
    },
    on: {
      "go-to-date": _vm.onGoToDate
    }
  }), _vm._v(" "), _c('ui-calendar-month', {
    ref: "month",
    attrs: {
      "date-filter": _vm.dateFilter,
      "date-in-view": _vm.dateInView,
      "lang": _vm.lang,
      "max-date": _vm.maxDate,
      "min-date": _vm.minDate,
      "selected": _vm.value
    },
    on: {
      "change": _vm.onMonthChange,
      "date-select": _vm.onDateSelect
    }
  })], 1), _vm._v(" "), (_vm.$slots.footer) ? _c('div', {
    staticClass: "ui-calendar__footer"
  }, [_vm._t("footer")], 2) : _vm._e()])])
},staticRenderFns: []}

/***/ }),
/* 314 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-calendar-month"
  }, [_c('div', {
    staticClass: "ui-calendar-month__header"
  }, _vm._l((_vm.lang.days.initials), function(day) {
    return _c('span', [_vm._v(_vm._s(day))])
  })), _vm._v(" "), _c('div', {
    ref: "current",
    staticClass: "ui-calendar-month__week is-current",
    class: _vm.weekClasses,
    on: {
      "transitionend": _vm.onTransitionEnd
    }
  }, _vm._l((_vm.currentWeekStartDates), function(date, index) {
    return _c('ui-calendar-week', {
      key: index,
      attrs: {
        "date-filter": _vm.dateFilter,
        "max-date": _vm.maxDate,
        "min-date": _vm.minDate,
        "month": _vm.currentWeekStartDates[1].getMonth(),
        "selected": _vm.selected,
        "week-start": date
      },
      on: {
        "date-select": _vm.onDateSelect
      }
    })
  })), _vm._v(" "), _c('div', {
    ref: "other",
    staticClass: "ui-calendar-month__week is-other",
    class: _vm.weekClasses
  }, _vm._l((_vm.otherWeekStartDates), function(date, index) {
    return _c('ui-calendar-week', {
      key: index,
      attrs: {
        "max-date": _vm.maxDate,
        "min-date": _vm.minDate,
        "month": _vm.otherWeekStartDates[1].getMonth(),
        "selected": _vm.selected,
        "visible": false,
        "week-start": date
      },
      on: {
        "date-select": _vm.onDateSelect
      }
    })
  }))])
},staticRenderFns: []}

/***/ }),
/* 315 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-confirm"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiConfirm")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('p', [_vm._v("UiConfirm can also show a loading spinner on the confirm button (useful for AJAX operations).")]), _vm._v(" "), _vm._m(2), _vm._v(" "), _c('div', {
    staticClass: "page__demo"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-confirm', {
    ref: "basicConfirm",
    attrs: {
      "title": "Basic Confirm"
    },
    on: {
      "confirm": _vm.onConfirm,
      "deny": _vm.onDeny
    }
  }, [_vm._v("\n                Do you want to confirm this?\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.showConfirm('basicConfirm')
      }
    }
  }, [_vm._v("Basic Confirm")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Autofocus")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-confirm', {
    ref: "confirm1",
    attrs: {
      "autofocus": "confirm-button",
      "confirm-button-text": "Confirm",
      "deny-button-text": "Deny",
      "title": "Confirm this"
    },
    on: {
      "confirm": _vm.onConfirm,
      "deny": _vm.onDeny
    }
  }, [_vm._v("\n                The confirm button in this dialog is focused by default.\n            ")]), _vm._v(" "), _c('ui-confirm', {
    ref: "confirm2",
    attrs: {
      "autofocus": "none",
      "confirm-button-text": "Confirm",
      "deny-button-text": "Deny",
      "title": "Confirm this"
    },
    on: {
      "confirm": _vm.onConfirm,
      "deny": _vm.onDeny
    }
  }, [_vm._v("\n                No button in this dialog is focused by default.\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.showConfirm('confirm1')
      }
    }
  }, [_vm._v("Focus Primary Button")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.showConfirm('confirm2')
      }
    }
  }, [_vm._v("Focus None")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Types")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-confirm', {
    ref: "publishConfirm",
    attrs: {
      "confirm-button-icon": "public",
      "confirm-button-text": "Publish",
      "deny-button-text": "Cancel",
      "title": "Publish Post",
      "type": "primary",
      "close-on-confirm": false,
      "loading": _vm.publishRequestInProgress
    },
    on: {
      "confirm": _vm.onConfirmPublish,
      "deny": _vm.onDenyPublish
    }
  }, [_vm._v("\n                Publish post for the world to see?\n            ")]), _vm._v(" "), _c('ui-confirm', {
    ref: "deleteConfirm",
    attrs: {
      "confirm-button-icon": "delete",
      "confirm-button-text": "Delete",
      "deny-button-text": "Keep",
      "title": "Delete Post",
      "type": "danger"
    },
    on: {
      "confirm": _vm.onConfirmDelete,
      "deny": _vm.onDenyDelete
    }
  }, [_vm._v("\n                Are you sure you want to delete the post?\n            ")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "primary"
    },
    on: {
      "click": function($event) {
        _vm.showConfirm('publishConfirm')
      }
    }
  }, [_vm._v("Publish Post")]), _vm._v(" "), _c('ui-button', {
    attrs: {
      "color": "red",
      "type": "secondary"
    },
    on: {
      "click": function($event) {
        _vm.showConfirm('deleteConfirm')
      }
    }
  }, [_vm._v("Delete Post")])], 1), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Transition: fade")]), _vm._v(" "), _c('div', {
    staticClass: "page__demo-group"
  }, [_c('ui-confirm', {
    ref: "fadeConfirm",
    attrs: {
      "title": "Fading Confirm",
      "transition": "fade"
    },
    on: {
      "confirm": _vm.onConfirm,
      "deny": _vm.onDeny
    }
  }, [_vm._v("\n                Do you want to confirm this?\n            ")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": function($event) {
        _vm.showConfirm('fadeConfirm')
      }
    }
  }, [_vm._v("Fading Confirm")])], 1), _vm._v(" "), (_vm.confirmResult.length) ? _c('pre', {
    staticClass: "language-html"
  }, [_c('code', [_vm._v(_vm._s(_vm.confirmResult))])]) : _vm._e()]), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("title")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"UiConfirm\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The confirm dialog title (text only).")]), _vm._v(" "), _c('p', [_vm._v("If you want to use HTML in the header, consider using a "), _c('a', {
    attrs: {
      "href": "#/ui-modal"
    }
  }, [_vm._v("UiModal")]), _vm._v(" directly.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("type")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"primary\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of confirm dialog (determines the color of the primary confirm button).")]), _vm._v(" "), _c('p', [_vm._v("Can be one of "), _c('code', [_vm._v("default")]), _vm._v(", "), _c('code', [_vm._v("primary")]), _vm._v(", "), _c('code', [_vm._v("accent")]), _vm._v(", "), _c('code', [_vm._v("success")]), _vm._v(", "), _c('code', [_vm._v("warning")]), _vm._v(" or "), _c('code', [_vm._v("danger")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("confirmButtonText")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"OK\"")])]), _vm._v(" "), _c('td', [_vm._v("The confirm button text.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("confirmButtonIcon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The confirm button icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("denyButtonText")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"Cancel\"")])]), _vm._v(" "), _c('td', [_vm._v("The deny button text.")])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("denyButtonIcon")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The deny button icon. Can be any of the "), _c('a', {
    attrs: {
      "href": "https://design.google.com/icons/",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Material Icons")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("autofocus")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"deny-button\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The button to autofocus when the dialog is opened.")]), _vm._v(" "), _c('p', [_vm._v("Can be one of "), _c('code', [_vm._v("confirm-button")]), _vm._v(", "), _c('code', [_vm._v("deny-button")]), _vm._v(" or "), _c('code', [_vm._v("none")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("loading")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not a loading spinner is shown on the confirm button.")]), _vm._v(" "), _c('p', [_vm._v("Setting this prop to "), _c('code', [_vm._v("true")]), _vm._v(" will show a spinner on the confirm button, disable the deny button and prevent the dialog from being dismissed.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("closeOnConfirm")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the dialog should be closed when the confirm button is clicked.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("false")]), _vm._v(" to keep the dialog open after a confirmation.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dismissOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"backdrop close-button esc\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event or events that will cause the confirm to be dismissed.")]), _vm._v(" "), _c('p', [_vm._v("One or more of "), _c('code', [_vm._v("backdrop")]), _vm._v(", "), _c('code', [_vm._v("close-button")]), _vm._v(", or "), _c('code', [_vm._v("esc")]), _vm._v(". Separate multiple events with a space.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("transition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("The dialog enter/leave transition. One of "), _c('code', [_vm._v("scale")]), _vm._v(" or "), _c('code', [_vm._v("fade")]), _vm._v(". Default is "), _c('a', {
    attrs: {
      "href": "#/ui-modal"
    }
  }, [_vm._v("UiModal")]), _vm._v("'s default transition.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_vm._v("Holds the confirm dialog content and can contain HTML.")])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("confirm")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the user clicks the confirm button.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@confirm")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("deny")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the user clicks the deny button.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@deny")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the confirm dialog is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the confirm dialog is closed.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@close")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("open()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to open the confirm.")])])]), _vm._v(" "), _c('tr', [_c('td', [_c('code', [_vm._v("close()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to close the confirm.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("UiConfirm shows a confirmation dialog using "), _c('a', {
    attrs: {
      "href": "#/ui-modal"
    }
  }, [_vm._v("UiModal")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("The confirm and deny buttons can be customized and the component emits "), _c('code', [_vm._v("confirm")]), _vm._v(" and "), _c('code', [_vm._v("deny")]), _vm._v(" events.")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiConfirm.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 316 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-slider",
    class: _vm.classes,
    attrs: {
      "role": "slider",
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": _vm.localValue,
      "tabindex": _vm.disabled ? null : 0
    },
    on: {
      "blur": _vm.onBlur,
      "focus": _vm.onFocus,
      "keydown": [function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "down", 40)) { return null; }
        $event.preventDefault();
        _vm.decrementValue($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "left", 37)) { return null; }
        if ('button' in $event && $event.button !== 0) { return null; }
        $event.preventDefault();
        _vm.decrementValue($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "right", 39)) { return null; }
        if ('button' in $event && $event.button !== 2) { return null; }
        $event.preventDefault();
        _vm.incrementValue($event)
      }, function($event) {
        if (!('button' in $event) && _vm._k($event.keyCode, "up", 38)) { return null; }
        $event.preventDefault();
        _vm.incrementValue($event)
      }]
    }
  }, [(_vm.name) ? _c('input', {
    staticClass: "ui-slider__hidden-input",
    attrs: {
      "type": "hidden",
      "name": _vm.name
    },
    domProps: {
      "value": _vm.value
    }
  }) : _vm._e(), _vm._v(" "), (_vm.hasIcon) ? _c('div', {
    staticClass: "ui-slider__icon"
  }, [_vm._t("icon", [_c('ui-icon', {
    attrs: {
      "icon": _vm.icon
    }
  })])], 2) : _vm._e(), _vm._v(" "), _c('div', {
    ref: "track",
    staticClass: "ui-slider__track",
    on: {
      "mousedown": _vm.onDragStart,
      "touchstart": _vm.onDragStart
    }
  }, [_c('div', {
    staticClass: "ui-slider__track-background"
  }, _vm._l((_vm.snapPoints), function(point) {
    return (_vm.snapToSteps) ? _c('span', {
      staticClass: "ui-slider__snap-point",
      style: ({
        left: point + '%'
      })
    }) : _vm._e()
  })), _vm._v(" "), _c('div', {
    staticClass: "ui-slider__track-fill",
    style: (_vm.fillStyle)
  }), _vm._v(" "), _c('div', {
    ref: "thumb",
    staticClass: "ui-slider__thumb",
    style: (_vm.thumbStyle)
  }, [(_vm.showMarker) ? _c('div', {
    staticClass: "ui-slider__marker"
  }, [_c('svg', {
    attrs: {
      "xmlns": "http://www.w3.org/2000/svg",
      "viewBox": "0 0 24 24",
      "width": "36",
      "height": "36"
    }
  }, [_c('path', {
    attrs: {
      "d": "M11 .5c-1.7.2-3.4.9-4.7 2-1.1.9-2 2-2.5 3.2-1.2 2.4-1.2 5.1-.1 7.7 1.1 2.6 2.8 5 5.3 7.5 1.2 1.2 2.8 2.7 3 2.7 0 0 .3-.2.6-.5 3.2-2.7 5.6-5.6 7.1-8.5.8-1.5 1.1-2.6 1.3-3.8.2-1.4 0-2.9-.5-4.3-1.2-3.2-4.1-5.4-7.5-5.8-.5-.2-1.5-.2-2-.2z"
    }
  })]), _vm._v(" "), _c('span', {
    staticClass: "ui-slider__marker-text"
  }, [_vm._v(_vm._s(_vm.markerText))])]) : _vm._e()])])])
},staticRenderFns: []}

/***/ }),
/* 317 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('ul', {
    staticClass: "ui-menu",
    class: _vm.classes,
    attrs: {
      "role": "menu"
    }
  }, [_vm._l((_vm.options), function(option) {
    return _c('ui-menu-option', {
      attrs: {
        "disable-ripple": _vm.disableRipple,
        "disabled": option[_vm.keys.disabled],
        "icon-props": _vm.iconProps || option[_vm.keys.iconProps],
        "icon": _vm.hasIcons ? option[_vm.keys.icon] : null,
        "label": option[_vm.keys.type] === 'divider' ? null : option[_vm.keys.label] || option,
        "secondary-text": _vm.hasSecondaryText ? option[_vm.keys.secondaryText] : null,
        "type": option[_vm.keys.type]
      },
      nativeOn: {
        "click": function($event) {
          _vm.selectOption(option)
        },
        "keydown": [function($event) {
          if (!('button' in $event) && _vm._k($event.keyCode, "enter", 13)) { return null; }
          $event.preventDefault();
          _vm.selectOption(option)
        }, function($event) {
          if (!('button' in $event) && _vm._k($event.keyCode, "esc", 27)) { return null; }
          _vm.closeMenu($event)
        }]
      }
    }, [_vm._t("option", null, {
      option: option
    })], 2)
  }), _vm._v(" "), (_vm.containFocus) ? _c('div', {
    staticClass: "ui-menu__focus-redirector",
    attrs: {
      "tabindex": "0"
    },
    on: {
      "focus": _vm.redirectFocus
    }
  }) : _vm._e()], 2)
},staticRenderFns: []}

/***/ }),
/* 318 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "ui-breadcrumb-container"
  }, _vm._l((_vm.items), function(breadcrumb) {
    return _c('ui-breadcrumb', {
      attrs: {
        "item": breadcrumb
      }
    })
  }))
},staticRenderFns: []}

/***/ }),
/* 319 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('section', {
    staticClass: "page page--ui-popover"
  }, [_c('h2', {
    staticClass: "page__title"
  }, [_vm._v("UiPopover")]), _vm._v(" "), _c('p', [_vm._v("UiPopover shows content in a popup/dropdown. It can be setup to contain tab focus in the popover, returning focus to the trigger element on close.")]), _vm._v(" "), _c('p', [_vm._v("The dropdown position relative to the trigger and the event that causes the dropdown to open can be customized.")]), _vm._v(" "), _vm._m(0), _vm._v(" "), _vm._m(1), _vm._v(" "), _c('div', {
    staticClass: "page__examples"
  }, [_c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Basic")]), _vm._v(" "), _c('a', {
    ref: "trigger1",
    staticClass: "popover-trigger"
  }, [_vm._v("Click here for the popover")]), _vm._v(" "), _c('ui-popover', {
    staticClass: "custom-popover",
    attrs: {
      "trigger": "trigger1"
    }
  }, [_vm._v("\n            Hey there, some popover content here.\n            "), _c('p', [_vm._v("Add "), _c('i', [_vm._v("whatever")]), _vm._v(" content you want here.")])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Raised: false")]), _vm._v(" "), _c('a', {
    ref: "trigger2",
    staticClass: "popover-trigger"
  }, [_vm._v("Click here for the popover")]), _vm._v(" "), _c('ui-popover', {
    staticClass: "custom-popover",
    attrs: {
      "raised": false,
      "trigger": "trigger2"
    }
  }, [_vm._v("\n            Hey there, some popover content here.\n            "), _c('p', [_vm._v("Add "), _c('i', [_vm._v("whatever")]), _vm._v(" content you want here.")])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Open on hover")]), _vm._v(" "), _c('a', {
    ref: "trigger3",
    staticClass: "popover-trigger"
  }, [_vm._v("Hover here for the popover")]), _vm._v(" "), _c('ui-popover', {
    staticClass: "custom-popover",
    attrs: {
      "open-on": "hover",
      "trigger": "trigger3"
    }
  }, [_vm._v("\n            Hey there, some popover content here.\n            "), _c('p', [_vm._v("Add "), _c('i', [_vm._v("whatever")]), _vm._v(" content you want here.")])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Dropdown position (may change based on available space)")]), _vm._v(" "), _c('a', {
    ref: "trigger4",
    staticClass: "popover-trigger"
  }, [_vm._v("Click here for a popover dropping bottom right of this trigger")]), _vm._v(" "), _c('ui-popover', {
    staticClass: "custom-popover",
    attrs: {
      "dropdown-position": "bottom right",
      "trigger": "trigger4"
    }
  }, [_vm._v("\n            Hey there, some popover content here.\n            "), _c('p', [_vm._v("Add "), _c('i', [_vm._v("whatever")]), _vm._v(" content you want here.")])]), _vm._v(" "), _c('br'), _c('br'), _vm._v(" "), _c('a', {
    ref: "trigger5",
    staticClass: "popover-trigger"
  }, [_vm._v("Click here for top left popover")]), _vm._v(" "), _c('ui-popover', {
    staticClass: "custom-popover",
    attrs: {
      "dropdown-position": "top left",
      "trigger": "trigger5"
    }
  }, [_vm._v("\n            Hey there, some popover content here.\n            "), _c('p', [_vm._v("Add "), _c('i', [_vm._v("whatever")]), _vm._v(" content you want here.")])]), _vm._v(" "), _c('h4', {
    staticClass: "page__demo-title"
  }, [_vm._v("Can be opened/closed programmatically")]), _vm._v(" "), _c('ui-button', {
    on: {
      "click": _vm.openPopover
    }
  }, [_vm._v("Click to open the popover below")]), _vm._v(" "), _c('br'), _c('br'), _vm._v(" "), _c('a', {
    ref: "trigger6",
    staticClass: "popover-trigger"
  }, [_vm._v("Default trigger")]), _vm._v(" "), _c('ui-popover', {
    ref: "popover6",
    staticClass: "custom-popover",
    attrs: {
      "trigger": "trigger6"
    }
  }, [_vm._v("\n            Hey there, some popover content here.\n            "), _c('p', [_vm._v("Add "), _c('i', [_vm._v("whatever")]), _vm._v(" content you want here.")])])], 1), _vm._v(" "), _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("API")]), _vm._v(" "), _c('ui-tabs', {
    attrs: {
      "raised": ""
    }
  }, [_c('ui-tab', {
    attrs: {
      "title": "Props"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Type")]), _vm._v(" "), _c('th', [_vm._v("Default")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("trigger *")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_vm._v("Required")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The string key of an element in the parent's "), _c('code', [_vm._v("$refs")]), _vm._v(" object.")]), _vm._v(" "), _c('p', [_vm._v("The event listeners will be attached to this element, and when triggered, the popover will be shown.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("dropdownPosition")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', {
    staticClass: "no-wrap"
  }, [_c('code', [_vm._v("\"bottom left\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The position of the popover relative to the trigger.")]), _vm._v(" "), _c('p', [_vm._v("Can be any one of "), _c('code', [_vm._v("top left")]), _vm._v(", "), _c('code', [_vm._v("left top")]), _vm._v(", "), _c('code', [_vm._v("left middle")]), _vm._v(", "), _c('code', [_vm._v("left bottom")]), _vm._v(", "), _c('code', [_vm._v("bottom left")]), _vm._v(", "), _c('code', [_vm._v("bottom center")]), _vm._v(", "), _c('code', [_vm._v("bottom right")]), _vm._v(", "), _c('code', [_vm._v("right bottom")]), _vm._v(", "), _c('code', [_vm._v("right middle")]), _vm._v(", "), _c('code', [_vm._v("right top")]), _vm._v(", "), _c('code', [_vm._v("top right")]), _vm._v(", "), _c('code', [_vm._v("top center")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("openOn")]), _vm._v(" "), _c('td', [_vm._v("String")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("\"click\"")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("The type of event or events that will cause the popover to open.")]), _vm._v(" "), _c('p', [_vm._v("One or more of "), _c('code', [_vm._v("click")]), _vm._v(", "), _c('code', [_vm._v("hover")]), _vm._v(", "), _c('code', [_vm._v("focus")]), _vm._v(", or "), _c('code', [_vm._v("always")]), _vm._v(". For "), _c('code', [_vm._v("always")]), _vm._v(" the popover is opened when rendered and it remains open. Separate multiple events with a space.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("containFocus")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("false")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not tab focus should be contained in the popover.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("true")]), _vm._v(" to contain focus within the popover.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("focusRedirector")]), _vm._v(" "), _c('td', [_vm._v("Function")]), _vm._v(" "), _c('td'), _vm._v(" "), _c('td', [_c('p', [_vm._v("A function that will be called to redirect the tab focus when it is about to leave the popover. The handler is called with the focus event.")]), _vm._v(" "), _c('p', [_vm._v("If this is not provided and "), _c('code', [_vm._v("containFocus")]), _vm._v(" is "), _c('code', [_vm._v("true")]), _vm._v(", focus is returned to the popover root element.")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("raised")]), _vm._v(" "), _c('td', [_vm._v("Boolean")]), _vm._v(" "), _c('td', [_c('code', [_vm._v("true")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Whether or not the popover has a drop shadow.")]), _vm._v(" "), _c('p', [_vm._v("Set to "), _c('code', [_vm._v("false")]), _vm._v(" to remove the default drop shadow.")])])])])])]), _vm._v("\n\n            * Required prop\n        ")]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Events"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("open")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the popover is opened.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@open")]), _vm._v(".")])])]), _vm._v(" "), _c('tr', [_c('td', [_vm._v("close")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Emitted when the popover is closed.")]), _vm._v(" "), _c('p', [_vm._v("Listen for it using "), _c('code', [_vm._v("@close")]), _vm._v(".")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Slots"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_vm._v("(default)")]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Holds the popover content and can contain HTML.")])])])])])])]), _vm._v(" "), _c('ui-tab', {
    attrs: {
      "title": "Methods"
    }
  }, [_c('div', {
    staticClass: "table-responsive"
  }, [_c('table', {
    staticClass: "table"
  }, [_c('thead', [_c('tr', [_c('th', [_vm._v("Name")]), _vm._v(" "), _c('th', [_vm._v("Description")])])]), _vm._v(" "), _c('tbody', [_c('tr', [_c('td', [_c('code', [_vm._v("open()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to open the popover.")])])]), _vm._v(" "), _c('tr', [_c('td', [_c('code', [_vm._v("close()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to close the popover.")])])]), _vm._v(" "), _c('tr', [_c('td', [_c('code', [_vm._v("toggle()")])]), _vm._v(" "), _c('td', [_c('p', [_vm._v("Call this method to toggle the popover.")])])])])])])])], 1)], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('p', [_vm._v("The dropdown is powered by "), _c('a', {
    attrs: {
      "href": "https://github.com/HubSpot/drop",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Drop")]), _vm._v(", which uses "), _c('a', {
    attrs: {
      "href": "https://github.com/HubSpot/tether",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("Tether")]), _vm._v(".")])
},function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('h3', {
    staticClass: "page__section-title"
  }, [_vm._v("\n        Examples "), _c('a', {
    attrs: {
      "href": "https://github.com/TemperWorks/Nucleus/blob/master/docs-src/pages/UiPopover.vue",
      "target": "_blank",
      "rel": "noopener"
    }
  }, [_vm._v("View Source")])])
}]}

/***/ }),
/* 320 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('span', {
    staticClass: "ui-icon",
    class: [_vm.iconSet, _vm.icon],
    attrs: {
      "aria-label": _vm.ariaLabel
    }
  }, [(_vm.useSvg) ? _c('svg', {
    staticClass: "ui-icon__svg"
  }, [_c('use', {
    attrs: {
      "xmlns:xlink": "http://www.w3.org/1999/xlink",
      "xlink:href": '#' + _vm.icon
    }
  })]) : _vm._t("default", [_vm._v(_vm._s(_vm.removeText ? null : _vm.icon))])], 2)
},staticRenderFns: []}

/***/ })
/******/ ]);